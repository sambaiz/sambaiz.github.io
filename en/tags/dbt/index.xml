<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dbt on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/dbt/</link>
    <description>Recent content in Dbt on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sun, 01 Dec 2024 12:10:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/dbt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Model Layering in dbt&#39;s Best Practice Guides</title>
      <link>https://www.sambaiz.net/en/article/512/</link>
      <pubDate>Sun, 01 Dec 2024 12:10:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/512/</guid>
      <description>&lt;p&gt;There are &lt;a href=&#34;https://docs.getdbt.com/best-practices&#34;&gt;Best practice guides&lt;/a&gt; that document how dbt Labs operates their dbt projects. Within these, &lt;a href=&#34;https://docs.getdbt.com/best-practices/how-we-structure/1-guide-overview&#34;&gt;How we structure our dbt projects&lt;/a&gt; outlines what to do and what not to do, along with the reasoning behind these decisions, so you don&amp;rsquo;t have to spend decision-making resources on how to organize folders and name files.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── models&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── intermediate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   └── finance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │       ├── _int_finance__models.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │       └── int_payments_pivoted_to_orders.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── marts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   ├── finance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├── _finance__models.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├── orders.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   └── payments.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   └── marketing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │       ├── _marketing__models.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │       └── customers.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── staging&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   ├── jaffle_shop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├── _jaffle_shop__docs.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├── _jaffle_shop__models.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├── _jaffle_shop__sources.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├── base&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   │   ├── base_jaffle_shop__customers.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   │   └── base_jaffle_shop__deleted_customers.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   ├── stg_jaffle_shop__customers.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   │   └── stg_jaffle_shop__orders.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   └── stripe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │       ├── _stripe__models.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │       ├── _stripe__sources.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │       └── stg_stripe__payments.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── utilities&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       └── all_dates.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;staginghttpsdocsgetdbtcombest-practiceshow-we-structure2-staging&#34;&gt;&lt;a href=&#34;https://docs.getdbt.com/best-practices/how-we-structure/2-staging&#34;&gt;staging&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This layer performs name changes, type and category conversions, but generally avoids JOINs and aggregations. It is materialized as views to always reference the most recent data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating new tables in BigQuery by processing data with SQL using dbt</title>
      <link>https://www.sambaiz.net/en/article/509/</link>
      <pubDate>Sat, 16 Nov 2024 21:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/509/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.getdbt.com/docs/introduction&#34;&gt;dbt&lt;/a&gt; is a tool for transforming data using SQL or Python. There is dbt Core, an OSS CLI that provides basic functionality, and dbt Cloud, a service that &lt;a href=&#34;https://www.getdbt.com/product/dbt-core-vs-dbt-cloud&#34;&gt;includes&lt;/a&gt; a browser-based IDE, CI, alerts, and more. This article is for dbt Core.&lt;/p&gt;&#xA;&lt;p&gt;Install dbt Core and the &lt;a href=&#34;https://docs.getdbt.com/docs/connect-adapters&#34;&gt;adapters&lt;/a&gt; for data platforms. In addition to officially maintained ones like BigQuery, Spark, and Snowflake, community adapters are also available.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m venv dbt-env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; dbt-env/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m pip install dbt-core dbt-bigquery&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ dbt --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Core:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - installed: 1.8.8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - latest:    1.8.8 - Up to date!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plugins:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - bigquery: 1.8.3 - Up to date!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.getdbt.com/reference/commands/init&#34;&gt;dbt init&lt;/a&gt; is used to create a project.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
