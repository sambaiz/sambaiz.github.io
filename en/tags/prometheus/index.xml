<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Prometheus on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/prometheus/</link>
    <description>Recent content in Prometheus on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Wed, 17 Jul 2024 19:59:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/prometheus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Calculate costs per labels of pods using Kubecost</title>
      <link>https://www.sambaiz.net/en/article/493/</link>
      <pubDate>Wed, 17 Jul 2024 19:59:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/493/</guid>
      <description>Kubecost is a tool to visualize Kubernetes costs and optimize them. AWS provides EKS optimized bundle and it can store unlimited historical data for free.&#xA;On dashboard, you can see how efficiently resources are being used,&#xA;and can know how to optimize costs.&#xA;Kubecost provides the following Prometheus metrics.&#xA;# Cumulative cpu time consumed container_cpu_usage_seconds_total{cpu=&amp;#34;total&amp;#34;, endpoint=&amp;#34;https-metrics&amp;#34;, id=&amp;#34;/kubepods.slice/kubepods-burstable.slice/kubepods-burstable-pod24c72e02_8120_4259_a3af_7f6030bfbced.slice&amp;#34;, instance=&amp;#34;10.0.159.230:10250&amp;#34;, job=&amp;#34;kubelet&amp;#34;, metrics_path=&amp;#34;/metrics/cadvisor&amp;#34;, namespace=&amp;#34;kube-system&amp;#34;, node=&amp;#34;ip-10-0-159-230.ec2.internal&amp;#34;, pod=&amp;#34;kube-proxy-9wr4l&amp;#34;, service=&amp;#34;kube-prometheus-stack-kubelet&amp;#34;} # Kubernetes labels converted to Prometheus labels kube_pod_labels{container=&amp;#34;cost-model&amp;#34;, endpoint=&amp;#34;tcp-model&amp;#34;, instance=&amp;#34;10.</description>
    </item>
    <item>
      <title>Get and aggregate metrics with PromQL</title>
      <link>https://www.sambaiz.net/en/article/491/</link>
      <pubDate>Sun, 09 Jun 2024 17:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/491/</guid>
      <description>PromQL is a query language for Prometheus, which can get single time samples of the metric as an Instant vector, or period samples as Range vector with specifying a time period in square brackets.&#xA;prometheus_http_requests_total{code=&amp;#34;200&amp;#34;,handler=~&amp;#34;/api/.*&amp;#34;} prometheus_http_requests_total{code=&amp;#34;200&amp;#34;,handler=~&amp;#34;/api/.*&amp;#34;}[5m] Functions take an Instant vector or a Range vector.&#xA;sum(prometheus_http_requests_total) sum_over_time(prometheus_http_requests_total[5m]) rate(v range-vector) returns the average increment per second of a monotonically increasing counter, caring about resets of the value. It is used to calculate the current request rate, CPU usage, etc.</description>
    </item>
    <item>
      <title>Prometheus metrics and time based scaling with KEDA (Kubernetes Event-driven Autoscaling)</title>
      <link>https://www.sambaiz.net/en/article/490/</link>
      <pubDate>Wed, 05 Jun 2024 23:08:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/490/</guid>
      <description>KEDA is a component that enables event-driven scaling in Kubernetes, and works with HorizontalPodAutoscaler. It provides scalers for various event sources such as CPU, Prometheus, and Cron, and can increase or decrease replicas with HPA or change them from 0 to 1 based on the event. Update replicas using K8s HorizontalPodAutoscaler and set determination interval and increase/decrease limit - sambaiz-net Install with Helm. cluster.addHelmChart(&amp;#39;KedaChart&amp;#39;, { chart: &amp;#39;keda&amp;#39;, release: &amp;#39;kedacore&amp;#39;, repository:</description>
    </item>
    <item>
      <title>Install Prometheus with CDK and remote write aggregated data to New Relic with recording rules to save the amount of data</title>
      <link>https://www.sambaiz.net/en/article/487/</link>
      <pubDate>Thu, 23 May 2024 02:22:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/487/</guid>
      <description>Prometheus&amp;rsquo; recording rules is a feature that allows you to create new metrics from existing metrics in PromQL. This can save the amount of data sent to New Relic by sending aggregated data compared to sending raw data, but Prometheus in newrelic-prometheus-configurator included in newrelic-bundle is in Agent mode, so it doesnâ€™t support Recording rules.&#xA;Install newrelic-bundle to EKS cluster with CDK and monitor it - sambaiz-net&#xA;So I install my own Prometheus using Helm and do remote write.</description>
    </item>
    <item>
      <title>Install newrelic-bundle to EKS cluster with CDK and monitor it</title>
      <link>https://www.sambaiz.net/en/article/466/</link>
      <pubDate>Sat, 13 Jan 2024 21:07:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/466/</guid>
      <description>NewRelic Kubernetes Integration has various components, and nri-bundle Helm Chart bundles them. Proceeding with Guided install, the parameters to pass are generated, so I copied them to CDK. Looking at the chart, credentials can be passed as strings as it is or Secrets, so I imported them from SecretsManager with External Secrets. Install External Secrets Operator with CDK and make Secrets Manager data available as Kubernetes Secret - sambaiz-net const</description>
    </item>
  </channel>
</rss>
