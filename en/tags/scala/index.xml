<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/scala/</link>
    <description>Recent content in Scala on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Mon, 05 May 2025 18:56:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Querying Snowflake with the Spark Connector</title>
      <link>https://www.sambaiz.net/en/article/534/</link>
      <pubDate>Mon, 05 May 2025 18:56:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/534/</guid>
      <description>&lt;p&gt;To access Snowflake data from applications, you can use the &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/spark-connector&#34;&gt;Spark connector&lt;/a&gt; (which connects via JDBC) or the &lt;a href=&#34;https://docs.snowflake.com/en/developer-guide/snowpark/index&#34;&gt;Snowpark API&lt;/a&gt; etc. In both cases, queries are basically lazily evaluated using Snowflake&amp;rsquo;s compute resources, but operations that cannot be pushed down, such as &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/spark-connector-use#pushdown&#34;&gt;Spark UDFs&lt;/a&gt;, are executed on the Spark cluster. In contrast, the Snowpark API guarantees that all processing is performed on the Snowflake side, so you don&amp;rsquo;t need to manage a cluster, which is why it is recommended. However, if you need Spark to process large data outside of Snowflake, the Spark connector, which returns a Spark DataFrame, is convenient.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create über-jar containing dependent libraries with sbt-assembly</title>
      <link>https://www.sambaiz.net/en/article/440/</link>
      <pubDate>Sun, 05 Mar 2023 22:01:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/440/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/sbt/sbt-assembly&#34;&gt;sbt-assembly&lt;/a&gt; is a sbt plugin to create über-jar (fat-jar) containing dependent libraries.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat peojcts/plugins.sbt &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addSbtPlugin&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;com.eed3si9n&amp;#34;&lt;/span&gt; % &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sbt-assembly&amp;#34;&lt;/span&gt; % &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2.1.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sbt assembly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ java -jar ./target/scala-2.13/sbt-assembly-test-0.1.0-SNAPSHOT.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello world!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If multiple JARs, including the dependencies of the dependent library, contain files with the same path and the contents are different, &amp;ldquo;Deduplicate found different file contents&amp;rdquo; errors occur.&#xA;In that case, set how to resolve it in &lt;a href=&#34;https://github.com/sbt/sbt-assembly#assembly-task&#34;&gt;assemblyMergeStrategy&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat build.sbt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;libraryDependencies&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;software.amazon.awssdk&amp;#34;&lt;/span&gt; % &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;s3&amp;#34;&lt;/span&gt; % &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2.20.14&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ThisBuild / assemblyMergeStrategy :&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; PathList&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;META-INF&amp;#34;&lt;/span&gt;, xs @ _*&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&amp;gt; MergeStrategy.discard&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    val &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;oldStrategy&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;ThisBuild / assemblyMergeStrategy&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;.value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    oldStrategy&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the number of conflicted files is too large to resolve, you can exclude them from the über-jar with &lt;a href=&#34;https://github.com/sbt/sbt-assembly#assemblyexcludedjars&#34;&gt;assemblyExcludedJars&lt;/a&gt; and place them to the classpath and load them at runtime, but there is a possibility that it will cause errors for compatibility.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enumerated types and extending existing types in Scala 2/3</title>
      <link>https://www.sambaiz.net/en/article/423/</link>
      <pubDate>Sat, 12 Nov 2022 23:35:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/423/</guid>
      <description>&lt;h2 id=&#34;scala-2&#34;&gt;Scala 2&lt;/h2&gt;&#xA;&lt;p&gt;Scala 2 doesn&amp;rsquo;t have an enum like Java, so &lt;a href=&#34;https://www.scala-lang.org/api/2.13.x/scala/Enumeration.html&#34;&gt;Enumeration&lt;/a&gt; or case object are used.&#xA;Besides, you can add fields to existing types by importing implicit class,&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;sealed&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;trait&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Animal&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Animal&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Dog&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Animal&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Cat&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Animal&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Converter&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;implicit&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AnimalConverter&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;animal&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;Animal&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; hello&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; animal &lt;span style=&#34;color:#ff79c6&#34;&gt;match&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Animal&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;Dog&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;wan!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Animal&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;Cat&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;nya!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Converter.AnimalConverter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;App&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; main&lt;span style=&#34;color:#ff79c6&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;Animal&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;Cat&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;hello&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;// nya!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;scala-3&#34;&gt;Scala 3&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.scala-lang.org/scala3/reference/enums/enums.html&#34;&gt;enum&lt;/a&gt; and &lt;a href=&#34;https://docs.scala-lang.org/scala3/reference/contextual/extension-methods.html&#34;&gt;extension&lt;/a&gt; were added in Scala 3, so you can write as follows.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Develop Spark Applications in Scala, deploy with GitHub Actions, and perform remote debugging on EMR</title>
      <link>https://www.sambaiz.net/en/article/420/</link>
      <pubDate>Fri, 21 Oct 2022 23:36:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/420/</guid>
      <description>&lt;p&gt;Spark provides Java and Python APIs in addition to Scala, which is used for developing Spark itself.&#xA;You can choose among them depending on the technical stack and technologies used in other components, etc.&lt;/p&gt;&#xA;&lt;p&gt;While Python has highly compatible with data analysis and machine learning skill sets and easy to edit and run on Glue Studio, the error is hard to understand, and the performance also has disadvantages because it needs to exchange the data between JVM and Python Workers.&#xA;Also, if the Python interpreter, which is not controlled by the JVM, try to use more memory than a resource manager such as YARN has allocated, the executor can be killed.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
