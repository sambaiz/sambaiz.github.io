<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/scala/</link>
    <description>Recent content in Scala on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sun, 05 Mar 2023 22:01:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create über-jar containing dependent libraries with sbt-assembly</title>
      <link>https://www.sambaiz.net/en/article/440/</link>
      <pubDate>Sun, 05 Mar 2023 22:01:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/440/</guid>
      <description>sbt-assembly is a sbt plugin to create über-jar (fat-jar) containing dependent libraries.&#xA;$ cat peojcts/plugins.sbt addSbtPlugin(&amp;#34;com.eed3si9n&amp;#34; % &amp;#34;sbt-assembly&amp;#34; % &amp;#34;2.1.1&amp;#34;) $ sbt assembly $ java -jar ./target/scala-2.13/sbt-assembly-test-0.1.0-SNAPSHOT.jar Hello world! If multiple JARs, including the dependencies of the dependent library, contain files with the same path and the contents are different, &amp;ldquo;Deduplicate found different file contents&amp;rdquo; errors occur. In that case, set how to resolve it in assemblyMergeStrategy.&#xA;$ cat build.sbt .</description>
    </item>
    <item>
      <title>Enumerated types and extending existing types in Scala 2/3</title>
      <link>https://www.sambaiz.net/en/article/423/</link>
      <pubDate>Sat, 12 Nov 2022 23:35:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/423/</guid>
      <description>Scala 2 Scala 2 doesn&amp;rsquo;t have an enum like Java, so Enumeration or case object are used. Besides, you can add fields to existing types by importing implicit class,&#xA;sealed trait Animal object Animal { case object Dog extends Animal case object Cat extends Animal } object Converter { implicit class AnimalConverter(animal: Animal) { def hello() = animal match { case Animal.Dog =&amp;gt; &amp;#34;wan!&amp;#34; case Animal.Cat =&amp;gt; &amp;#34;nya!&amp;#34; } } } import Converter.</description>
    </item>
    <item>
      <title>Develop Spark Applications in Scala, deploy with GitHub Actions, and perform remote debugging on EMR</title>
      <link>https://www.sambaiz.net/en/article/420/</link>
      <pubDate>Fri, 21 Oct 2022 23:36:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/420/</guid>
      <description>Spark provides Java and Python APIs in addition to Scala, which is used for developing Spark itself. You can choose among them depending on the technical stack and technologies used in other components, etc.&#xA;While Python has highly compatible with data analysis and machine learning skill sets and easy to edit and run on Glue Studio, the error is hard to understand, and the performance also has disadvantages because it needs to exchange the data between JVM and Python Workers.</description>
    </item>
  </channel>
</rss>
