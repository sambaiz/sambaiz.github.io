<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snowflake on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/snowflake/</link>
    <description>Recent content in Snowflake on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Thu, 30 Jan 2025 20:31:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/snowflake/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Register Iceberg Tables in Glue Data Catalog to query from Athena and Snowflake</title>
      <link>https://www.sambaiz.net/en/article/525/</link>
      <pubDate>Thu, 30 Jan 2025 20:31:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/525/</guid>
      <description>&lt;p&gt;If you register Iceberg tables in the Glue Data Catalog, you can not only reference them from Athena and EMR etc. like other tables, but you can also create an &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/tables-iceberg&#34;&gt;ICEBERG TABLE&lt;/a&gt; in Snowflake without specifying the schema, avoiding duplicate metadata management. It even has a feature for &lt;a href=&#34;https://aws.amazon.com/jp/blogs/aws/aws-glue-data-catalog-now-supports-automatic-compaction-of-apache-iceberg-tables/&#34;&gt;automatic compaction&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/523/&#34;&gt;Walk through Iceberg metadata contents by creating tables, modifying schema and write mode, and writing data in Spark - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;This article I create tables and other resources using Athena for Spark. When you select Iceberg as the table format, settings like catalog-impl are &lt;a href=&#34;https://docs.aws.amazon.com/athena/latest/ug/notebooks-spark-table-formats-apache-iceberg.html&#34;&gt;configured&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Snowflake CLI and Terraform with Key Pair Authentication</title>
      <link>https://www.sambaiz.net/en/article/524/</link>
      <pubDate>Tue, 28 Jan 2025 01:40:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/524/</guid>
      <description>&lt;p&gt;In addition to &lt;a href=&#34;https://docs.snowflake.com/en/developer-guide/snowflake-cli/connecting/configure-connections&#34;&gt;username/password&lt;/a&gt; authentication, Snowflake CLI and various client libraries also &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/key-pair-auth#supported-snowflake-clients&#34;&gt;support&lt;/a&gt; key pair authentication.&lt;/p&gt;&#xA;&lt;p&gt;Install the &lt;a href=&#34;https://docs.snowflake.com/en/developer-guide/snowflake-cli/installation/installation#label-snowcli-install-macos-installer&#34;&gt;Snowflake CLI&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew tap snowflakedb/snowflake-cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install snowflake-cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ snow --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Snowflake CLI version: 3.3.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The key linked to a user &lt;a href=&#34;https://docs.snowflake.com/ja/user-guide/key-pair-auth#overview&#34;&gt;must&lt;/a&gt; be an RSA key of at least 2048 bits and ed25519 is currently not supported.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl genrsa &lt;span style=&#34;color:#bd93f9&#34;&gt;2048&lt;/span&gt; | openssl pkcs8 -topk8 -inform PEM -out rsa_key.p8 -nocrypt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ openssl rsa -in rsa_key.p8 -pubout -out rsa_key.pub&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir -p ~/.snowflake&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cp rsa_key.p8 ~/.snowflake/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can register up to two public keys per user.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Walk through Iceberg metadata contents by creating tables, modifying schema and write mode, and writing data in Spark</title>
      <link>https://www.sambaiz.net/en/article/523/</link>
      <pubDate>Sat, 25 Jan 2025 23:18:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/523/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://iceberg.apache.org/&#34;&gt;Apache Iceberg&lt;/a&gt; is an open table format that enables efficient processing of large amounts of data, and can be used by various systems such as &lt;a href=&#34;https://iceberg.apache.org/spark-quickstart/&#34;&gt;Spark&lt;/a&gt;, &lt;a href=&#34;https://trino.io/docs/current/connector/iceberg.html&#34;&gt;Trino&lt;/a&gt; and &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/tables-iceberg&#34;&gt;Snowflake&lt;/a&gt;. In addition to Schema Evolution, which allow you to change the table schema without rewriting the original data, and Time Travel, &lt;a href=&#34;https://iceberg.apache.org/docs/latest/partitioning/#icebergs-hidden-partitioning&#34;&gt;Hidden Partitioning&lt;/a&gt;, which does not rely on physical structures such as Hive&amp;rsquo;s day=xxxx/ and enables to do PARTITION BY logical values ​​that are not included in the table, such as day(event_ts) and month(event_ts), allows queries such as &amp;ldquo;WHERE event_ts BETWEEN 2025-01-01 AND 2025-03-01&amp;rdquo; without being aware of the granularity of the partitions, and &lt;a href=&#34;https://iceberg.apache.org/docs/latest/evolution/#partition-evolution&#34;&gt;Partition evolution&lt;/a&gt;, which changes the granularity without breaking the query, can also be performed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating and publishing a Streamlit application that renders data based on widget values</title>
      <link>https://www.sambaiz.net/en/article/521/</link>
      <pubDate>Sat, 18 Jan 2025 14:25:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/521/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://streamlit.io/&#34;&gt;Streamlit&lt;/a&gt; is a tool for developing data applications in Python.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install streamlit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ streamlit --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Streamlit, version 1.41.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can display Dataframes using write() and line_chart() based on input values from &lt;a href=&#34;https://docs.streamlit.io/develop/api-reference/widgets&#34;&gt;widgets&lt;/a&gt; such as buttons, sliders, and radio buttons. Since updates are &lt;a href=&#34;https://docs.streamlit.io/get-started/fundamentals/main-concepts#data-flow&#34;&gt;triggered&lt;/a&gt; every time widget values change, you can store values in session_state or &lt;a href=&#34;https://docs.streamlit.io/develop/concepts/architecture/caching&#34;&gt;cache&lt;/a&gt; the results of heavy processing as needed.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; streamlit &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; st&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;## Hello!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;[sambaiz.net](https://www.sambaiz.net/)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;first_column, second_column, third_column &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;columns(&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, gap&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;large&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;mutiplier&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;session_state:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;session_state[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;mutiplier&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; first_column:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;button(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Multiply!&amp;#39;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;session_state[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;mutiplier&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;success(&lt;span style=&#34;color:#f1fa8c&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Multiplier updated to &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;{&lt;/span&gt;st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;session_state[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;mutiplier&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f1fa8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; second_column:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    value &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; second_column&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;slider(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Set value&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;session_state[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;mutiplier&amp;#39;&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;metric(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;slider value&amp;#39;&lt;/span&gt;, value)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; third_column:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    chosen &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;radio(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Chose value&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;metric(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;chosen value&amp;#39;&lt;/span&gt;, chosen)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;first column&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;lambda&lt;/span&gt; x: x &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; chosen, [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;W&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;X&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;])),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;second column&amp;#39;&lt;/span&gt;: [&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;max&lt;/span&gt;(value, &lt;span style=&#34;color:#bd93f9&#34;&gt;1e-9&lt;/span&gt;), value, &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; value]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;write(df)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;st&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;line_chart(df&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;first column&amp;#39;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Execute it by running &lt;code&gt;streamlit run app.py&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Copy and Query S3 Data in Snowflake</title>
      <link>https://www.sambaiz.net/en/article/518/</link>
      <pubDate>Tue, 31 Dec 2024 23:57:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/518/</guid>
      <description>&lt;p&gt;Snowflake is a fully managed data platform that runs on AWS, GCP, and Azure. It &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/intro-key-concepts#database-storage&#34;&gt;stores data&lt;/a&gt; in columnar format, is built with &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/intro-key-concepts#snowflake-architecture&#34;&gt;hybrid shared-nothing architecture&lt;/a&gt; where nodes cache portions of shared datasets locally to suppress network traffic, and does automatic &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/tables-clustering-micropartitions&#34;&gt;micro-partitioning&lt;/a&gt; for fine-grained pruning, enabling efficient large-scale query execution.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/386/&#34;&gt;Columnar format Parquet structure and read optimization - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;In addition to eliminating the need to manage infrastructure like Hadoop clusters, it offers features such as &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/data-time-travel&#34;&gt;time travel&lt;/a&gt; similar to BigQuery and easily &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/data-sharing-intro&#34;&gt;data sharing&lt;/a&gt; between accounts.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
