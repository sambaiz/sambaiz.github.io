<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>log on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/log/</link>
    <description>Recent content in log on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sat, 25 Dec 2021 23:55:00 +0900</lastBuildDate><atom:link href="https://www.sambaiz.net/en/tags/log/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generate data using TPC-DS Connector in Athena&#39;s Federated Query</title>
      <link>https://www.sambaiz.net/en/article/391/</link>
      <pubDate>Sat, 25 Dec 2021 23:55:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/en/article/391/</guid>
      <description>Athena&amp;rsquo;s Federated Query is a feature to execute queries on non-S3 data sources such as DynamoDB and RDS through Lambda function which is a data sources connector.
 This article uses TPC-DS Connector in the AWS official repository. It generates the data of TPC-DS, which is a benchmark of the database in Decision Support.
Although it is in the official repository, it is a custom connector, so you need to build it yourself.</description>
    </item>
    
    <item>
      <title>Columnar format Parquet structure and Read optimization</title>
      <link>https://www.sambaiz.net/en/article/386/</link>
      <pubDate>Fri, 03 Dec 2021 20:00:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/en/article/386/</guid>
      <description>Parquet is a columnar format mainly used in the Hadoop ecosystem. Compared to row-based formats like CSV, unnecessary data is not read so queries can be executed efficiently.
Structure Data is horizontally partitioned to some Row Groups. A column is splitted into some Column Chunks, and a Column Chunk has some Pages which is an unit of compressing and encoding.
File structure is like following and it contains some Row Groups which have Column Chunks of each columns and metadata.</description>
    </item>
    
  </channel>
</rss>
