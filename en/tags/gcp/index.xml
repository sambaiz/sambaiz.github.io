<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gcp on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/gcp/</link>
    <description>Recent content in Gcp on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sun, 20 Apr 2025 23:55:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/gcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create BigQuery Tables for Apache Iceberg using dbt and Read them from Snowflake</title>
      <link>https://www.sambaiz.net/en/article/531/</link>
      <pubDate>Sun, 20 Apr 2025 23:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/531/</guid>
      <description>&lt;p&gt;When reading data stored in BigQuery from Snowflake, direct access is not possible, so it&amp;rsquo;s necessary to either reload it into Snowflake tables or export it to GCS. However, regarding the former approach, there are concerns about data and schema discrepancy due to losing the single source of truth, and in either case, when using both BigQuery and Snowflake, storage costs are doubled. For the latter approach, instead of storing data in BigQuery storage, it&amp;rsquo;s possible to operate it as an external table, but this requires an external engine like Spark for writing data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting ID Token from Google Apps Script to assume AWS role and read/write to S3</title>
      <link>https://www.sambaiz.net/en/article/526/</link>
      <pubDate>Fri, 07 Feb 2025 23:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/526/</guid>
      <description>&lt;p&gt;You can get the user&amp;rsquo;s ID token by adding openid to the &lt;a href=&#34;https://developers.google.com/apps-script/concepts/scopes&#34;&gt;oauthScopes&lt;/a&gt; in the manifest and calling &lt;a href=&#34;https://developers.google.com/apps-script/reference/script/script-app#getIdentityToken%28%29&#34;&gt;ScriptApp.getIdentityToken()&lt;/a&gt;. It enables to call AWS APIs without passing access keys.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/136/&#34;&gt;OpenID ConnectのIDトークンの内容と検証 - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; oidcToken &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ScriptApp.getIdentityToken();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; payload &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; JSON.parse(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Utilities.newBlob(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Utilities.base64DecodeWebSafe(oidcToken.split(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ).getDataAsString()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(payload);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;{ iss: &amp;#39;https://accounts.google.com&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;  sub: &amp;#39;*****&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;  aud: &amp;#39;*****.apps.googleusercontent.com&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;  at_hash: &amp;#39;*****&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;  iat: 1738927412,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;  exp: 1738931012 }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Creating a role that can be assumed with this aud,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Calling Cloud Run functions from BigQuery to process data using any libraries and services</title>
      <link>https://www.sambaiz.net/en/article/522/</link>
      <pubDate>Tue, 21 Jan 2025 23:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/522/</guid>
      <description>&lt;p&gt;In addition to &lt;a href=&#34;https://cloud.google.com/bigquery/docs/user-defined-functions&#34;&gt;User-defined functions&lt;/a&gt; that can be defined in SQL or JavaScript and &lt;a href=&#34;https://cloud.google.com/bigquery/docs/table-functions&#34;&gt;Table functions (TVF)&lt;/a&gt; that works like views taking parameters, BigQuery has &lt;a href=&#34;https://cloud.google.com/bigquery/docs/remote-functions&#34;&gt;remote functions&lt;/a&gt; that, similar to Athena’s UDF, can call Cloud Run and Cloud Run functions (&lt;a href=&#34;https://cloud.google.com/blog/products/serverless/google-cloud-functions-is-now-cloud-run-functions?hl=en&#34;&gt;formerly Cloud Functions 2nd gen&lt;/a&gt;), allowing you to process data using any library or service.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/402/&#34;&gt;Implement Athena&amp;rsquo;s data source connectors and user defined functions (UDF) - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;FUNCTION&lt;/span&gt; (project).(dataset).&lt;span style=&#34;color:#ff79c6&#34;&gt;add&lt;/span&gt;(x FLOAT64, y FLOAT64)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;RETURNS&lt;/span&gt; FLOAT64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;LANGUAGE&lt;/span&gt; js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; r&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;  return x+y;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;FUNCTION&lt;/span&gt; (project).(dataset).remote_add(x INT64, y INT64)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;RETURNS&lt;/span&gt; INT64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REMOTE &lt;span style=&#34;color:#ff79c6&#34;&gt;WITH&lt;/span&gt; (project).us.my_connection&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;OPTIONS&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  endpoint &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;ENDPOINT_URL&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Implement an API that receives &lt;a href=&#34;https://cloud.google.com/bigquery/docs/remote-functions&#34;&gt;input&lt;/a&gt; as calls and &lt;a href=&#34;https://cloud.google.com/bigquery/docs/remote-functions&#34;&gt;returns&lt;/a&gt; values as replies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up GCP&#39;s Workload Identity Federation with Terraform to Call APIs from AWS without creating Service Account Keys</title>
      <link>https://www.sambaiz.net/en/article/520/</link>
      <pubDate>Sat, 11 Jan 2025 14:42:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/520/</guid>
      <description>&lt;p&gt;GCP&amp;rsquo;s &lt;a href=&#34;https://cloud.google.com/iam/docs/workload-identity-federation&#34;&gt;Workload Identity Federation&lt;/a&gt; is a feature that allows temporary permissions to be granted to workloads outside of GCP without sharing service account keys.&lt;/p&gt;&#xA;&lt;p&gt;By the way, from GCP to AWS, &lt;a href=&#34;https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sts/assume-role-with-web-identity.html&#34;&gt;AssumeRoleWithWebIdentity&lt;/a&gt; can be &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_oidc.html&#34;&gt;performed&lt;/a&gt; using &lt;a href=&#34;https://cloud.google.com/iam/docs/reference/credentials/rest/v1/projects.serviceAccounts/generateIdToken&#34;&gt;service account OIDC tokens&lt;/a&gt;. This enables instances to call AWS APIs with &lt;a href=&#34;https://cloud.google.com/compute/docs/instances/verifying-instance-identity#request_signature&#34;&gt;tokens from the metadata server&lt;/a&gt;, and some managed services like &lt;a href=&#34;https://cloud.google.com/storage-transfer/docs/source-amazon-s3?hl=ja#federated_identity&#34;&gt;Cloud Storage Transfer Service&lt;/a&gt; to access AWS just by passing the &lt;a href=&#34;https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#AwsS3Data&#34;&gt;Role arn&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/72/&#34;&gt;AWSのAssumeRole - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;new iam.Role(this, &amp;#39;GoogleWebIdentityRole&amp;#39;, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;assumedBy: new iam.WebIdentityPrincipal(&amp;#34;accounts.google.com&amp;#34;, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;  &amp;#34;StringEquals&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;    &amp;#34;accounts.google.com:sub&amp;#34;: &amp;#34;(service_account_id)&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;}),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;  roleName: &amp;#34;*****&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;*/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;token, err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; metadata.&lt;span style=&#34;color:#50fa7b&#34;&gt;Get&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;instance/service-accounts/default/identity?audience=sts.amazonaws.com&amp;amp;format=full&amp;amp;include_email=true&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;failed to get identity token: %v&amp;#34;&lt;/span&gt;, err)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cfg, err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; config.&lt;span style=&#34;color:#50fa7b&#34;&gt;LoadDefaultConfig&lt;/span&gt;(ctx, config.&lt;span style=&#34;color:#50fa7b&#34;&gt;WithRegion&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ap-northeast-1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Failed to load AWS config: %v&amp;#34;&lt;/span&gt;, err)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stsClient &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; sts.&lt;span style=&#34;color:#50fa7b&#34;&gt;NewFromConfig&lt;/span&gt;(cfg)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;assumeRoleInput &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&lt;/span&gt;sts.AssumeRoleWithWebIdentityInput{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RoleArn:          aws.&lt;span style=&#34;color:#50fa7b&#34;&gt;String&lt;/span&gt;(roleArn),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RoleSessionName:  aws.&lt;span style=&#34;color:#50fa7b&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;gcp-assume-role-session&amp;#34;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WebIdentityToken: aws.&lt;span style=&#34;color:#50fa7b&#34;&gt;String&lt;/span&gt;(token),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  DurationSeconds:  aws.&lt;span style=&#34;color:#50fa7b&#34;&gt;Int32&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;3600&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;assumeRoleOutput, err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; stsClient.&lt;span style=&#34;color:#50fa7b&#34;&gt;AssumeRoleWithWebIdentity&lt;/span&gt;(ctx, assumeRoleInput)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Failed to assume role: %v&amp;#34;&lt;/span&gt;, err)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tempCfg &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; cfg.&lt;span style=&#34;color:#50fa7b&#34;&gt;Copy&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tempCfg.Credentials = credentials.&lt;span style=&#34;color:#50fa7b&#34;&gt;NewStaticCredentialsProvider&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;assumeRoleOutput.Credentials.AccessKeyId,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;assumeRoleOutput.Credentials.SecretAccessKey,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;assumeRoleOutput.Credentials.SessionToken,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tempStsClient &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; sts.&lt;span style=&#34;color:#50fa7b&#34;&gt;NewFromConfig&lt;/span&gt;(tempCfg)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;identity, err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; tempStsClient.&lt;span style=&#34;color:#50fa7b&#34;&gt;GetCallerIdentity&lt;/span&gt;(ctx, &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&lt;/span&gt;sts.GetCallerIdentityInput{})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Errorf&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Failed to get caller identity: %v&amp;#34;&lt;/span&gt;, err)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;success!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Workload Identity Federation also supports OIDC and SAML, and can perform authentication using signed &lt;a href=&#34;https://awscli.amazonaws.com/v2/documentation/api/latest/reference/sts/get-caller-identity.html&#34;&gt;GetCallerIdentity&lt;/a&gt; requests.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sending notifications from Airflow using Slack credentials stored in Secrets Manager</title>
      <link>https://www.sambaiz.net/en/article/517/</link>
      <pubDate>Fri, 27 Dec 2024 15:30:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/517/</guid>
      <description>&lt;p&gt;Airflow has &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow/stable/howto/connection.html&#34;&gt;Connections&lt;/a&gt; as objects for storing authentication credentials for external services.&lt;/p&gt;&#xA;&lt;p&gt;You can register them through the UI or provide them via AIRFLOW_CONN_(conn_id) environment variables.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# export AIRFLOW_CONN_SLACK_API_DEFAULT=&amp;#39;slack://:xoxb-*****@/&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    conn_id&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;slack_api_default&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    conn_type&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;slack&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    password&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;xoxb-*****&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# export AIRFLOW_CONN_SLACK_DEFAULT=&amp;#39;slackwebhook://:T00000000%2FB00000000%2FXXXXXXXXXXXXXXXXXXXXXXXX@/&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    conn_id&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;slack_default&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    conn_type&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;slackwebhook&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    password&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also use &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/secrets-backends/aws-secrets-manager.html&#34;&gt;AWS&lt;/a&gt; or &lt;a href=&#34;https://airflow.apache.org/docs/apache-airflow-providers-google/stable/secrets-backends/google-cloud-secret-manager-backend.html&#34;&gt;Google Cloud&lt;/a&gt; Secrets Manager as a backend. In Google Cloud, airflow-connections-(conn_id) is referenced by default. For Cloud Composer, it cannot be set through environment variables and must be configured by passing (section)-(name) to airflow_config_overrides, and apache-airflow-providers-slack needs to be installed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Identifying High-Cost Queries Using BigQuery&#39;s INFORMATION_SCHEMA</title>
      <link>https://www.sambaiz.net/en/article/516/</link>
      <pubDate>Fri, 20 Dec 2024 00:30:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/516/</guid>
      <description>&lt;p&gt;You can retrieve executed queries and total_bytes_billed from &lt;a href=&#34;https://cloud.google.com/bigquery/docs/information-schema-jobs&#34;&gt;INFORMATION_SCHEMA.JOBS&lt;/a&gt;. To avoid duplication, exclude statement_type = &amp;ldquo;SCRIPT&amp;rdquo;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;CASE&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;WHEN&lt;/span&gt; STARTS_WITH(job_id, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;materialized_view_refresh_&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;materialized_view_refresh&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;WHEN&lt;/span&gt; STARTS_WITH(job_id, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;scheduled_query_&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;scheduled_query&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;WHEN&lt;/span&gt; STARTS_WITH(job_id, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;bquxjob_&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;bq user interface&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;ELSE&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;other&amp;#39;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; job_type,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  user_email,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  query,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;state&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  total_bytes_billed &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;/* USD / TB */&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; cost&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;`&lt;/span&gt;region&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;us.INFORMATION_SCHEMA.JOBS&lt;span style=&#34;color:#ff79c6&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;DATE&lt;/span&gt;(creation_time) &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; DATE_SUB(&lt;span style=&#34;color:#ff79c6&#34;&gt;CURRENT_DATE&lt;/span&gt;(), &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;INTERVAL&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;DAY&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;AND&lt;/span&gt; statement_type &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;SCRIPT&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; total_bytes_billed &lt;span style=&#34;color:#ff79c6&#34;&gt;DESC&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For materialized views, since the query value will be like CALL BQ.REFRESH_MATERIALIZED_VIEW(view_name), &lt;a href=&#34;https://cloud.google.com/bigquery/docs/information-schema-tables&#34;&gt;INFORMATION_SCHEMA.TABLES&lt;/a&gt; is also helpful.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;, ddl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; (account).(dataset).INFORMATION_SCHEMA.TABLES&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; table_type &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;MATERIALIZED VIEW&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/75080895/categorize-bigquery-queries-based-on-job-id-coming-from-information-schema-jobs&#34;&gt;Categorize bigquery queries based on job_id coming from information_schema.jobs to look at costs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running dbt as an Airflow TaskGroup with astronomer-cosmos</title>
      <link>https://www.sambaiz.net/en/article/514/</link>
      <pubDate>Tue, 03 Dec 2024 23:59:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/514/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/astronomer/astronomer-cosmos&#34;&gt;astronomer-cosmos&lt;/a&gt; is a library for running dbt as an Airflow TaskGroup. It enables you to build comprehensive workflows that include tasks before and after data processing, utilizing Airflow&amp;rsquo;s scheduling and retry capabilities.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/509/&#34;&gt;Creating new tables in BigQuery by processing data with SQL using dbt - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/425/&#34;&gt;Run Apache Airflow with Docker Compose and execute a workflow - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this article, I &lt;a href=&#34;https://astronomer.github.io/astronomer-cosmos/getting_started/gcc.html&#34;&gt;run it on Cloud Composer&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/510/&#34;&gt;Setting up GCP&amp;rsquo;s managed Airflow service Cloud Composer using Terraform and running workflows - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restoring BigQuery Data using time travel and snapshots</title>
      <link>https://www.sambaiz.net/en/article/511/</link>
      <pubDate>Mon, 25 Nov 2024 23:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/511/</guid>
      <description>&lt;p&gt;BigQuery has a &lt;a href=&#34;https://cloud.google.com/bigquery/docs/time-travel&#34;&gt;time travel&lt;/a&gt; feature that allows you to access data from any point in time within the past 7 days by default.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;`&lt;/span&gt;sambaiztest.test_dataset.test_table&lt;span style=&#34;color:#ff79c6&#34;&gt;`&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FOR&lt;/span&gt; SYSTEM_TIME &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;OF&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2024-11-22 22:41:00+09:00&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;img_container&#34;&gt;&lt;a href=&#34;https://www.sambaiz.net/article/511/images/time_travel.png&#34;&gt;&#xA;    &lt;img style=&#34;max-width: 100%; width: auto; height: auto;&#34; src=&#34;https://www.sambaiz.net/article/511/images/time_travel_hu_cb148044b024ed0.png&#34; width=&#34;493&#34; height=&#34;370&#34; alt=&#34;Time travel window&#34;&gt;&#xA;&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;This allows you to restore data even if records have been overwritten or deleted.&lt;/p&gt;&#xA;&lt;p&gt;You can also save &lt;a href=&#34;https://cloud.google.com/bigquery/docs/table-snapshots-intro&#34;&gt;snapshots&lt;/a&gt; and restore them by overwriting. You can hold backups over 7 days ago with low storage costs since only the differences are stored.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up GCP&#39;s managed Airflow service Cloud Composer using Terraform and running workflows</title>
      <link>https://www.sambaiz.net/en/article/510/</link>
      <pubDate>Sun, 17 Nov 2024 23:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/510/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/composer?hl=en&#34;&gt;Cloud Composer&lt;/a&gt; is a managed service for Apache Airflow. It&amp;rsquo;s equivalent of MWAA by AWS.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/428/&#34;&gt;Create an environment of Amazon Managed Workflow for Apache Airflow (MWAA) with CDK and run a workflow - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.google.com/composer/pricing&#34;&gt;Pricing&lt;/a&gt; differs between Composer 2 and Composer 3, which is currently review, but it&amp;rsquo;s mainly based on CPU, memory, and storage usage. While it runs on GKE, &lt;a href=&#34;https://cloud.google.com/composer/docs/composer-3/composer-overview?hl=ja#can_i_use_my_own_cluster_as_a_cluster&#34;&gt;existing clusters cannot be used&lt;/a&gt;. If the resouce is insufficient, Worker Pod will occur ClashLoopBackoff or OOM. This cluster can be seen when Composer 2 is used, but will no longer be displayed from 3.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating new tables in BigQuery by processing data with SQL using dbt</title>
      <link>https://www.sambaiz.net/en/article/509/</link>
      <pubDate>Sat, 16 Nov 2024 21:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/509/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.getdbt.com/docs/introduction&#34;&gt;dbt&lt;/a&gt; is a tool for transforming data using SQL or Python. There is dbt Core, an OSS CLI that provides basic functionality, and dbt Cloud, a service that &lt;a href=&#34;https://www.getdbt.com/product/dbt-core-vs-dbt-cloud&#34;&gt;includes&lt;/a&gt; a browser-based IDE, CI, alerts, and more. This article is for dbt Core.&lt;/p&gt;&#xA;&lt;p&gt;Install dbt Core and the &lt;a href=&#34;https://docs.getdbt.com/docs/connect-adapters&#34;&gt;adapters&lt;/a&gt; for data platforms. In addition to officially maintained ones like BigQuery, Spark, and Snowflake, community adapters are also available.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m venv dbt-env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; dbt-env/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python -m pip install dbt-core dbt-bigquery&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ dbt --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Core:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - installed: 1.8.8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - latest:    1.8.8 - Up to date!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plugins:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - bigquery: 1.8.3 - Up to date!&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.getdbt.com/reference/commands/init&#34;&gt;dbt init&lt;/a&gt; is used to create a project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Read and run WordCount Sample on Dataflow, managed ETL service using Apache Beam</title>
      <link>https://www.sambaiz.net/en/article/501/</link>
      <pubDate>Wed, 23 Oct 2024 01:17:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/501/</guid>
      <description>&lt;p&gt;GCP&amp;rsquo;s Dataflow is a managed service for streaming and batch ETL using &lt;a href=&#34;https://beam.apache.org/&#34;&gt;Apache Beam&lt;/a&gt;, an open-source software for building data processing pipelines. It can stream data from PubSub to BigQuery and perform machine learning etc. &lt;a href=&#34;https://cloud.google.com/dataflow/pricing&#34;&gt;Pricing&lt;/a&gt; is based on the resources used for job execution and the amount of data shuffled.&lt;/p&gt;&#xA;&lt;p&gt;Basic data migration can be performed without coding by using &lt;a href=&#34;https://cloud.google.com/dataflow/docs/guides/templates/provided-templates&#34;&gt;templates provided by Google&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;img_container&#34;&gt;&lt;a href=&#34;https://www.sambaiz.net/article/501/images/googletemplate.png&#34;&gt;&#xA;    &lt;img style=&#34;max-width: 100%; width: auto; height: auto;&#34; src=&#34;https://www.sambaiz.net/article/501/images/googletemplate_hu_a54aa18d76055b43.png&#34; width=&#34;600&#34; height=&#34;319&#34; alt=&#34;templates provided by Google&#34;&gt;&#xA;&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Let&amp;rsquo;s run the sample Word Count.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Avoiding OOM in count-distinct operations on massive datasets using HyperLogLog&#43;&#43;, a probabilistic cardinality estimation algorithm</title>
      <link>https://www.sambaiz.net/en/article/497/</link>
      <pubDate>Mon, 02 Sep 2024 21:08:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/497/</guid>
      <description>&lt;p&gt;When counting unique elements, such as the number of users in access logs, we often execute queries like &amp;ldquo;count(distinct column_name)&amp;rdquo;. For massive datasets, regular count() operations can be scaled by splitting the data and summing the results. However, this method doesn&amp;rsquo;t work with distinct operations, which can lead to extreme slowdowns due to memory shortages or, in the worst case, failure due to OOM errors.&lt;/p&gt;&#xA;&lt;p&gt;This issue is known as the &lt;a href=&#34;https://en.wikipedia.org/wiki/Count-distinct_problem&#34;&gt;Count-distinct problem (cardinality estimation problem)&lt;/a&gt;, and several algorithms have been proposed to estimate cardinality (unique count) without retaining all elements. One of them is HyperLogLog, and its improved version, HyperLogLog++, is widely implemented as &lt;a href=&#34;https://github.com/apache/spark/blob/c58148da5496245403b55c3fc423d35f3a669c79/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/FunctionRegistry.scala#L469&#34;&gt;approx_count_distinct()&lt;/a&gt; in Spark and &lt;a href=&#34;https://github.com/prestodb/presto/blob/2bceaa02b982f2b10d4d577fac9b3c8944c36ace/presto-main/src/main/java/com/facebook/presto/operator/aggregation/ApproximateCountDistinctAggregation.java#L40&#34;&gt;approx_distinct()&lt;/a&gt; in Presto.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
