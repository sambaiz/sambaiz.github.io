<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/database/</link>
    <description>Recent content in Database on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Thu, 02 Jan 2025 11:55:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adding Custom Rules to the SQL Lint Tool SQLFluff</title>
      <link>https://www.sambaiz.net/en/article/519/</link>
      <pubDate>Thu, 02 Jan 2025 11:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/519/</guid>
      <description>&lt;p&gt;The SQL lint tool sqlfluff has a mechanism to add &lt;a href=&#34;https://docs.sqlfluff.com/en/2.2.0/developingrules.html&#34;&gt;custom rules&lt;/a&gt; via plugins.&lt;/p&gt;&#xA;&lt;p&gt;Create a plugin by referring to the example plugin.&lt;/p&gt;&#xA;&lt;p&gt;Implement &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/blob/2.2.0/src/sqlfluff/core/rules/base.py#L761&#34;&gt;_eval()&lt;/a&gt; that evaluates rules and returns a &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/blob/2.2.0/src/sqlfluff/core/rules/base.py#L72&#34;&gt;LintResult&lt;/a&gt; in a Rule_XXXX class that inherits from &lt;a href=&#34;https://github.com/sqlfluff/sqlfluff/blob/2.2.0/src/sqlfluff/core/rules/base.py#L670&#34;&gt;BaseRule&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# my_custom_rules/rules.py&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; sqlfluff.core.rules &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BaseRule,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LintResult,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    RuleContext,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; sqlfluff.core.rules.crawlers &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; SegmentSeekerCrawler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Rule_Example_L001&lt;/span&gt;(BaseRule):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;    test rule&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    groups &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;all&amp;#34;&lt;/span&gt;,)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    config_keywords &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    crawl_behaviour &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; SegmentSeekerCrawler({&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;select_clause&amp;#34;&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    is_fix_compatible &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; __init__(self, &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#ff79c6&#34;&gt;**&lt;/span&gt;kwargs):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;()&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;__init__(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#ff79c6&#34;&gt;**&lt;/span&gt;kwargs)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;---- init ----&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;parameter: aaa=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;{&lt;/span&gt;self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;aaa&lt;span style=&#34;color:#f1fa8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;_eval&lt;/span&gt;(self, context: RuleContext):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;---- eval ----&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; seg &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; context&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;segment&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;segments:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(seg&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get_type(), seg&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;raw&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;lower())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; seg&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get_type() &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;select_clause_element&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;and&lt;/span&gt; seg&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;raw&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;lower() &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; LintResult(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    anchor&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;seg,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    description&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Don&amp;#39;t select b!&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Return this class in get_rules() in __init__.py.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Copy and Query S3 Data in Snowflake</title>
      <link>https://www.sambaiz.net/en/article/518/</link>
      <pubDate>Tue, 31 Dec 2024 23:57:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/518/</guid>
      <description>&lt;p&gt;Snowflake is a fully managed data platform that runs on AWS, GCP, and Azure. It &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/intro-key-concepts#database-storage&#34;&gt;stores data&lt;/a&gt; in columnar format and is built with &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/intro-key-concepts#snowflake-architecture&#34;&gt;hybrid shared-nothing architecture&lt;/a&gt; where nodes cache portions of shared datasets locally to suppress network traffic, enabling efficient large-scale query execution.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/386/&#34;&gt;Columnar format Parquet structure and read optimization - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;In addition to eliminating the need to manage infrastructure like Hadoop clusters, it offers features such as &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/data-time-travel&#34;&gt;time travel&lt;/a&gt; similar to BigQuery and easily &lt;a href=&#34;https://docs.snowflake.com/en/user-guide/data-sharing-intro&#34;&gt;data sharing&lt;/a&gt; between accounts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Compare Redshift Serverless and Athena performances by TPC-DS queries</title>
      <link>https://www.sambaiz.net/en/article/397/</link>
      <pubDate>Sun, 20 Feb 2022 01:49:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/397/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/392/&#34;&gt;Redshift Serverless and other serverless aggregation services, run query with Glue Data Catalog - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Compare the performance between Redshift Serverless (Preview) and Athena by queries of TPC-DS, which is a database benchmark.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;(PS: 2022-07-13) Following values were calculated at the rate at the time of preview. When it became &lt;a href=&#34;https://aws.amazon.com/jp/blogs/aws/amazon-redshift-serverless-now-generally-available-with-new-capabilities/&#34;&gt;GA&lt;/a&gt;, the rate dropped by about 30%.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/393/&#34;&gt;Generate data with TPC-DS Connector for Glue - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;First, executed the following query to the json and parquet data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generate data with TPC-DS Connector for Glue</title>
      <link>https://www.sambaiz.net/en/article/393/</link>
      <pubDate>Tue, 18 Jan 2022 21:26:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/393/</guid>
      <description>&lt;p&gt;Previously, I tried to generate 250GB of data with Athena&amp;rsquo;s TPC-DS Connector and output it to S3 but it timed out even if I increased the Lambda resource to the maximum, so I do it with Glue this time.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/391/&#34;&gt;Generate data with TPC-DS Connector in Athena&amp;rsquo;s Federated Query - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Subscribe and activate &lt;a href=&#34;https://aws.amazon.com/marketplace/pp/prodview-xtty6azr4xgey&#34;&gt;TPC-DS connector&lt;/a&gt; for Glue.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;img_container&#34;&gt;&lt;a href=&#34;https://www.sambaiz.net/article/393/images/activate.png&#34;&gt;&#xA;    &lt;img style=&#34;max-width: 100%; width: auto; height: auto;&#34; src=&#34;https://www.sambaiz.net/article/393/images/activate_hu_838d08cc29ec6674.png&#34; width=&#34;450&#34; height=&#34;370&#34; alt=&#34;Activate TPC-DS connector for Glue&#34;&gt;&#xA;&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Write a script like following. The scale is in GB, the same as Athena&amp;rsquo;s one.&#xA;Tables are added to a catalog at the time of upload.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generate data with TPC-DS Connector in Athena&#39;s Federated Query</title>
      <link>https://www.sambaiz.net/en/article/391/</link>
      <pubDate>Sat, 25 Dec 2021 23:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/391/</guid>
      <description>&lt;p&gt;Athena&amp;rsquo;s &lt;a href=&#34;https://docs.aws.amazon.com/athena/latest/ug/connect-to-a-data-source.html&#34;&gt;Federated Query&lt;/a&gt; is a feature to execute queries on non-S3 data sources such as DynamoDB and RDS through Lambda function which is a data sources connector.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/en/article/402/&#34;&gt;Implement Athena&amp;rsquo;s data source connectors and user defined functions (UDF) - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;img_container&#34;&gt;&lt;a href=&#34;https://www.sambaiz.net/article/391/images/datasource.png&#34;&gt;&#xA;    &lt;img style=&#34;max-width: 100%; width: auto; height: auto;&#34; src=&#34;https://www.sambaiz.net/article/391/images/datasource_hu_db42a44fc1fb3cc3.png&#34; width=&#34;372&#34; height=&#34;370&#34; alt=&#34;Data sources&#34;&gt;&#xA;&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;This article uses TPC-DS Connector in the &lt;a href=&#34;https://github.com/awslabs/aws-athena-query-federation/tree/master/athena-tpcds&#34;&gt;AWS official repository&lt;/a&gt;. It generates the data of &lt;a href=&#34;http://www.tpc.org/tpcds/&#34;&gt;TPC-DS&lt;/a&gt;, which is a database benchmark in Decision Support.&lt;/p&gt;&#xA;&lt;p&gt;Although it is in the official repository, it is a custom connector, so you need to build it yourself. Basically, you can do it according to &lt;a href=&#34;https://github.com/awslabs/aws-athena-query-federation/tree/master/athena-tpcds#readme&#34;&gt;README&lt;/a&gt;, but it fails to build in jdk16, so install jdk8.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
