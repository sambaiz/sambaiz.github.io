<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/docker/</link>
    <description>Recent content in Docker on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Wed, 27 Dec 2023 19:50:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git pull a private repository on docker build by mounting 1Password SSH agent</title>
      <link>https://www.sambaiz.net/en/article/462/</link>
      <pubDate>Wed, 27 Dec 2023 19:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/462/</guid>
      <description>When building a docker image, it may need to pull a private repository. Mounting a secret key as a secret works, but someone may be using an SSH agent such as 1Password&amp;rsquo;s one. Specifying the SSH agent&amp;rsquo;s socket or the key as &amp;ndash;ssh, Dockerfile doesn&amp;rsquo;t need to care about the difference. Buildkitとは - sambaiz-net SSH_AUTH_SOCK is referred by default. $ export</description>
    </item>
    <item>
      <title>Check records of operations for AWS resources with CloudTrail</title>
      <link>https://www.sambaiz.net/en/article/431/</link>
      <pubDate>Tue, 06 Dec 2022 21:12:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/431/</guid>
      <description>AWS CloudTrail records AWS API call history, which is used for security auditing and other services such as GuardDuty.&#xA;Check security issues detected by GuardDuty, Inspector, and Macie, etc. in AWS Security Hub collectively - sambaiz-net&#xA;Event history Event history is recorded per region by default, which is free. The retention period is 90 days, and data events, such as Lambda&amp;rsquo;s invoke and object-level operations in S3, are not included.</description>
    </item>
    <item>
      <title>Pass AWS credentials to services for Docker Compose</title>
      <link>https://www.sambaiz.net/en/article/426/</link>
      <pubDate>Wed, 23 Nov 2022 15:30:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/426/</guid>
      <description>When you run a docker container locally, you can mount ~/.aws to pass AWS credentials, and similarly, you can do that with volumes in Docker Compose. Besides, there is also a secrets field. According to the document, it looks to depend on Swarm, but actually, it can run standalone. However, this is for development, and it seems to just bind the file.&#xA;version: &amp;#39;3&amp;#39; secrets: aws_creds: file: ~/.aws services: aws_cli: image: amazon/aws-cli:2.</description>
    </item>
    <item>
      <title>Run Apache Airflow with Docker Compose and execute a workflow</title>
      <link>https://www.sambaiz.net/en/article/425/</link>
      <pubDate>Sat, 19 Nov 2022 16:52:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/425/</guid>
      <description>Apache Airflow is an OSS that schedules workflows and visualize pipelines. It is scalable and has abundant features. Also, it can be extended with your own Operators in addition to third-party, such as AWS and Slack, providers packages existing in the repository.&#xA;Run Airflow Download docker-compose.yaml.&#xA;$ curl -LfO &amp;#39;https://airflow.apache.org/docs/apache-airflow/2.4.3/docker-compose.yaml&amp;#39; $ cat docker-compose.yaml ... x-airflow-common: &amp;amp;airflow-common image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.4.3} ... volumes: - ./dags:/opt/airflow/dags - ./logs:/opt/airflow/logs - ./plugins:/opt/airflow/plugins ... services: postgres: image: postgres:13 .</description>
    </item>
    <item>
      <title>Increase the maximum number of file descriptors</title>
      <link>https://www.sambaiz.net/en/article/41/</link>
      <pubDate>Thu, 08 Dec 2016 21:36:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/41/</guid>
      <description>What is file descriptors? File desecriptors is an identifier for interacting with an outside of a process. In POSIX, it is an int type, 0 is stdin, 1 is stdout, and 2 is stderr. It is assigned by a system call such as open() to open files and devices, and socket() to create sockets to communicate with other processes. Maximum number of file descriptors There is a limit on the</description>
    </item>
  </channel>
</rss>
