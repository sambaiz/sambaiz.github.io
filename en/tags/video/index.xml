<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Video on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/video/</link>
    <description>Recent content in Video on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Thu, 13 Mar 2025 22:14:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/video/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overlaying Text and Audio on Videos with MoviePy library in Python</title>
      <link>https://www.sambaiz.net/en/article/529/</link>
      <pubDate>Thu, 13 Mar 2025 22:14:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/529/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy/&#34;&gt;MoviePy&lt;/a&gt; is a library for video editing tasks such as trimming, combining, and applying effects.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install moviepy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Load the video with VideoFileClip and overlay other Clips like &lt;a href=&#34;https://zulko.github.io/moviepy/user_guide/loading.html#textclip&#34;&gt;TextClip&lt;/a&gt; with &lt;a href=&#34;https://zulko.github.io/moviepy/reference/reference/moviepy.video.compositing.CompositeVideoClip.html#module-moviepy.video.compositing.CompositeVideoClip&#34;&gt;CompositeVideoClip&lt;/a&gt;. In the following example, text is displayed at 40% from the left and 70% from the top for 3 seconds, starting 5 seconds after the video begins.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; moviepy &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; VideoFileClip, TextClip, CompositeVideoClip, AudioFileClip, CompositeAudioClip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;video &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; VideoFileClip(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;video.mp4&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;txt_clip &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; TextClip(font&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Arial Unicode.ttf&amp;#34;&lt;/span&gt;, text&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;テスト&amp;#34;&lt;/span&gt;, font_size&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;70&lt;/span&gt;, color&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;) \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;with_start(&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;) \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;with_duration(&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;) \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;with_position((&lt;span style=&#34;color:#bd93f9&#34;&gt;0.4&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0.7&lt;/span&gt;), relative&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;final_video &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; CompositeVideoClip([video, txt_clip])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;final_video&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;write_videofile(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;result.mp4&amp;#34;&lt;/span&gt;, codec&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;libx264&amp;#39;&lt;/span&gt;, audio_codec&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;aac&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;img_container&#34;&gt;&lt;img style=&#34;max-width: 100%; width: auto; height: auto;&#34; src=&#34;https://www.sambaiz.net/article/529/images/video.gif&#34; width=&#34;800&#34; height=&#34;413&#34; alt=&#34;edited video&#34;&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;Similarly, you can overlay audio using &lt;a href=&#34;https://zulko.github.io/moviepy/reference/reference/moviepy.audio.AudioClip.CompositeAudioClip.html#moviepy.audio.AudioClip.CompositeAudioClip&#34;&gt;CompositeAudioClip&lt;/a&gt;. In the following example, the original video&amp;rsquo;s volume is set to 20% and plays seconds 1-3 of the audio file starting 5 seconds after the video begins.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
