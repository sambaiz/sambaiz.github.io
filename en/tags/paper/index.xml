<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paper on sambaiz-net</title>
    <link>https://www.sambaiz.net/en/tags/paper/</link>
    <description>Recent content in Paper on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Mon, 02 Sep 2024 21:08:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/en/tags/paper/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Avoiding OOM in count-distinct operations on massive datasets using HyperLogLog&#43;&#43;, a probabilistic cardinality estimation algorithm</title>
      <link>https://www.sambaiz.net/en/article/497/</link>
      <pubDate>Mon, 02 Sep 2024 21:08:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/497/</guid>
      <description>When counting unique elements, such as the number of users in access logs, we often execute queries like &amp;ldquo;count(distinct column_name)&amp;rdquo;. For massive datasets, regular count() operations can be scaled by splitting the data and summing the results. However, this method doesn&amp;rsquo;t work with distinct operations, which can lead to extreme slowdowns due to memory shortages or, in the worst case, failure due to OOM errors.&#xA;This issue is known as the Count-distinct problem (cardinality estimation problem), and several algorithms have been proposed to estimate cardinality (unique count) without retaining all elements.</description>
    </item>
    <item>
      <title>The Scheduler which allocates resources in Hadoop YARN, and Dominant Resource Fairness (DRF)</title>
      <link>https://www.sambaiz.net/en/article/433/</link>
      <pubDate>Sat, 24 Dec 2022 22:15:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/en/article/433/</guid>
      <description>YARN&amp;rsquo;s ResourceManager consists of ApplicationsManager, which receives applications from clients and launches ApplicationMaster, and Scheduler, which receives requests from ApplicationMaster and allocates resources.&#xA;How Hadoop YARN allocates resources to applications and check how much resources are allocated - sambaiz-net&#xA;Scheduler Scheduler has implementations such as CapacityScheduler, which aims to maximize the throughput in multi-tenant clusters, and FairScheduler, which allocates fair resources to all applications. You can choose to use which one with yarn.</description>
    </item>
  </channel>
</rss>
