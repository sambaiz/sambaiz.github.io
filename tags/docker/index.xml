<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/docker/</link>
    <description>Recent content in Docker on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Wed, 27 Dec 2023 19:50:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>docker build 時に 1Password の SSH agent をマウントして プライベートリポジトリを git pull できるようにする</title>
      <link>https://www.sambaiz.net/article/462/</link>
      <pubDate>Wed, 27 Dec 2023 19:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/462/</guid>
      <description>&lt;p&gt;docker build 時にコンテナ内から SSH 通信するのに、秘密鍵を secret としてマウントしたりする方法があるが、&lt;a href=&#34;https://developer.1password.com/docs/ssh/agent/compatibility/#ssh-auth-sock&#34;&gt;1Password&lt;/a&gt; などの SSH agent を用いている場合もある。&#xA;&lt;a href=&#34;https://docs.docker.com/build/building/context/#private-repositories&#34;&gt;&amp;ndash;ssh&lt;/a&gt; で SSH Agent のソケットや鍵を指定すると Dockerfile ではその辺りの違いを意識することなく SSH 通信できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CloudTrail で AWS 上のリソースの操作記録を確認する</title>
      <link>https://www.sambaiz.net/article/431/</link>
      <pubDate>Tue, 06 Dec 2022 21:12:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/431/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/cloudtrail&#34;&gt;AWS CloudTrail&lt;/a&gt; は AWS の API の呼び出しを記録するサービスで、セキュリティ監査や GuardDuty など他のサービスで用いられる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/430/&#34;&gt;GuardDuty, Inspector, Macie などによって検出されたセキュリティ上の問題を AWS Security Hub で確認する - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Compose の service に AWS のクレデンシャルを渡す</title>
      <link>https://www.sambaiz.net/article/426/</link>
      <pubDate>Wed, 23 Nov 2022 15:30:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/426/</guid>
      <description>&lt;p&gt;ローカルで Docker コンテナを動かす際に AWS のクレデンシャルを渡すため ~/.aws を&lt;a href=&#34;https://docs.docker.com/storage/volumes/&#34;&gt;マウント&lt;/a&gt;することがあるが、&#xA;Docker Compose でも &lt;a href=&#34;https://docs.docker.com/compose/compose-file/compose-file-v3/#volumes&#34;&gt;volumes&lt;/a&gt; で同様のことができる。&#xA;また、&lt;a href=&#34;https://docs.docker.com/compose/compose-file/compose-file-v3/#secrets&#34;&gt;secrets&lt;/a&gt; というのもあって、&#xA;&lt;a href=&#34;https://docs.docker.com/engine/swarm/secrets/&#34;&gt;ドキュメント&lt;/a&gt; によると Swarm 前提の機能に見えるが、実際は&lt;a href=&#34;https://github.com/docker/compose/issues/8707&#34;&gt;スタンドアロンで動く&lt;/a&gt;。&#xA;ただし、これは開発用のためのもので実際はただ bind しているだけのようだ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Compose で Apache Airflow を起動しワークフローを実行する</title>
      <link>https://www.sambaiz.net/article/425/</link>
      <pubDate>Sat, 19 Nov 2022 16:52:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/425/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://airflow.apache.org/&#34;&gt;Apache Airflow&lt;/a&gt;はワークフローのスケジューリングやパイプラインの可視化などを行うOSS。&#xA;スケーラブルで豊富な機能を持ち、&#xA;リポジトリに含まれている AWS や Slack といったサードパーティの &lt;a href=&#34;https://airflow.apache.org/docs/#providers-packagesdocsapache-airflow-providersindexhtml&#34;&gt;Providers packages&lt;/a&gt; に加えて、&#xA;自前の Operator を実装して拡張できるようになっている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CDKでALBとECS(EC2)クラスタを作成し、ecs-cliでDocker Composeの構成をデプロイする</title>
      <link>https://www.sambaiz.net/article/377/</link>
      <pubDate>Sun, 15 Aug 2021 16:05:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/377/</guid>
      <description>&lt;p&gt;以前、CloudFormationでLBなしのECS(EC2)最小構成を構築したが、今回はALBのTargetGroupまでをCDKで作成し、Serviceのデプロイをecs-cliで行う。&#xA;EC2をECSクラスタに登録する際の &lt;code&gt;echo ECS_CLUSTER=&amp;lt;cluster_name&amp;gt; &amp;gt;&amp;gt; /etc/ecs/ecs.config&lt;/code&gt; といった処理は&#xA;クラスタの&lt;code&gt;AsgCapacityProvider&lt;/code&gt;にASGを指定すると&lt;a href=&#34;https://github.com/aws/aws-cdk/blob/v1.118.0/packages/@aws-cdk/aws-ecs/lib/cluster.ts#L377&#34;&gt;追加される&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS X-rayでアプリケーションのリクエストをトレースし可視化する</title>
      <link>https://www.sambaiz.net/article/376/</link>
      <pubDate>Thu, 05 Aug 2021 02:32:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/376/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/jp/xray/&#34;&gt;AWS X-ray&lt;/a&gt;はリクエストをトレースして、タイムラインやサービスマップを可視化、分析できるサービス。&#xA;サービスの数が増えると見えづらくなる、どこにどれくらいのトラフィックがあって、どこで問題が起きているのかといったことを一目で確認できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>127.0.0.1(localhost)と0.0.0.0</title>
      <link>https://www.sambaiz.net/article/359/</link>
      <pubDate>Mon, 24 May 2021 23:15:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/359/</guid>
      <description>&lt;p&gt;ホストで動かしていたコンポーネント群をdocker-composeに乗せたところ、コンポーネント間の通信が通らなくなってしまった。&#xA;いずれもdocker-composeが作った&lt;a href=&#34;https://docs.docker.jp/compose/networking.html&#34;&gt;デフォルトのネットワーク&lt;/a&gt;で動いているのでpingは通る。&#xA;コードを見てみたところサーバーが localhost で listen していたので 0.0.0.0 に修正した。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windowsでの開発環境を構築する(WSL2, Docker, VSCode)</title>
      <link>https://www.sambaiz.net/article/358/</link>
      <pubDate>Sun, 16 May 2021 11:53:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/358/</guid>
      <description>&lt;h2 id=&#34;wsl2&#34;&gt;WSL2&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/ja-jp/windows/wsl/install-win10&#34;&gt;WSL2を有効化&lt;/a&gt;してストアからUbuntuとWindows Terminalをインストールする。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# PowerShell&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wsl --set-default-version &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ubuntuのユーザー設定後、Windows Terminalの既定のプロファイルをUbuntuに変更するとMacのターミナルのように使うことができる。&#xA;&lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go&lt;/a&gt;や&lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/cli/latest/userguide/install-cliv2-linux.html&#34;&gt;AWS CLI&lt;/a&gt;など必要なものをUbuntuに入れていく。&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub ActionsのDocker container actionを作る</title>
      <link>https://www.sambaiz.net/article/310/</link>
      <pubDate>Sun, 22 Nov 2020 01:25:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/310/</guid>
      <description>&lt;p&gt;GitHub ActionsのActionにはランナーで直接実行される&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/creating-a-javascript-action&#34;&gt;JavaScript action&lt;/a&gt;と、&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/creating-a-docker-container-action&#34;&gt;Docker container action&lt;/a&gt;、複数のステップをまとめた&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/creating-a-composite-run-steps-action&#34;&gt;Composite run steps action&lt;/a&gt;がある。&#xA;Docker container actionは環境を固定できるが、イメージを取得する分JavaScript actionと比べて時間がかかり、DockerがインストールされているLinuxでしか使えない。&#xA;今回はこのDocker container actionを作って動かしてみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCodeのdevcontainerにSAM CLIをインストールしlocal invokeする</title>
      <link>https://www.sambaiz.net/article/301/</link>
      <pubDate>Mon, 12 Oct 2020 09:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/301/</guid>
      <description>&lt;p&gt;VSCodeのdevcontainerにAWS SAM CLIをインストールしてDockerを用いたlocal invokeもできるようにする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/289/&#34;&gt;VSCodeのRemote DevelopmentでSageMakerのコンテナ環境でモデルを開発する - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCodeのDocker開発コンテナでJupyter Notebookを開いてAthenaのクエリを実行し可視化する</title>
      <link>https://www.sambaiz.net/article/294/</link>
      <pubDate>Fri, 04 Sep 2020 19:34:04 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/294/</guid>
      <description>&lt;p&gt;ローカルでJupyter Notebookを動かすために以前は&lt;a href=&#34;https://hub.docker.com/r/jupyter/datascience-notebook/&#34;&gt;jupyter/datascience-notebook&lt;/a&gt;のイメージを立ち上げていた。&#xA;Notebookはエディタとしての機能に乏しいため通常のコードを書くのが大変だったのだが、&#xA;VSCodeのPython extensionにはJupyter notebookサポートが入っていてそのまま開けて実行できるのを知ったので移行することにした。&#xA;今回はVSCodeのDocker開発コンテナからNotebookを開いてAthenaのクエリを実行し可視化する。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCodeのRemote DevelopmentでSageMakerのコンテナ環境でモデルを開発する</title>
      <link>https://www.sambaiz.net/article/289/</link>
      <pubDate>Sun, 19 Jul 2020 19:34:04 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/289/</guid>
      <description>&lt;p&gt;SageMakerで学習させるモデルを開発するにあたって、Notebooks上ではコードを書きづらいのでVS Codeで書いているのだが、ローカルに依存パッケージをインストールして実行しているため&#xA;エディタ上では警告が出ていなくても、実際の環境にはパッケージがなかったりすることがある。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Buildkitとは</title>
      <link>https://www.sambaiz.net/article/258/</link>
      <pubDate>Tue, 11 Feb 2020 01:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/258/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/moby/buildkit&#34;&gt;Buildkit&lt;/a&gt;は高速でセキュアなコンテナイメージのビルドツール。&#xA;Docker本体にも18.09から&lt;a href=&#34;https://docs.docker.com/develop/develop-images/build_enhancements/&#34;&gt;統合され&lt;/a&gt;、&#xA;&lt;code&gt;DOCKER_BUILDKIT=1 docker build&lt;/code&gt; するとBuildkitが使われるようになった。&lt;/p&gt;&#xA;&lt;h3 id=&#34;llb-low-level-builder&#34;&gt;LLB (low-level builder)&lt;/h3&gt;&#xA;&lt;p&gt;BuildkitはDockerfileなどをLLBという中間言語にコンパイルする。&#xA;LLBは依存関係を表すDAG(Directed acyclic graph; 有向非巡回グラフ)で、&#xA;protobufで&lt;a href=&#34;https://github.com/moby/buildkit/blob/758c61e8730eac0da8a8cce72ec4009868c92165/solver/pb/ops.proto&#34;&gt;定義されている&lt;/a&gt;。&#xA;これによって処理を並列に実行したり、Dockerfileを変更してもそれ以降のステージのキャッシュを全て破棄する必要がなくなった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lambda環境でできない処理をECSで実行する</title>
      <link>https://www.sambaiz.net/article/245/</link>
      <pubDate>Mon, 28 Oct 2019 22:54:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/245/</guid>
      <description>&lt;p&gt;以前&lt;a href=&#34;https://github.com/sambaiz/cdkbot&#34;&gt;cdkbot&lt;/a&gt;というツールを出した。これはGitHubのPRからCDKのデプロイなどを実行できるツールでlambda上で動いていた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/235/&#34;&gt;PR上でCDKのレビューやデプロイを行うツールcdkbotを作った - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;npmやgitといった外部コマンドを実行するため、layerにバイナリを詰めて上げていた。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/233/&#34;&gt;Lambda上でnpm installできるLayerを作った - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL InnoDBのロックの挙動</title>
      <link>https://www.sambaiz.net/article/158/</link>
      <pubDate>Sat, 03 Mar 2018 19:44:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/158/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/innodb-locking.html&#34;&gt;https://dev.mysql.com/doc/refman/5.7/en/innodb-locking.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;トランザクション分離レベルはデフォルトのREPEATABLE-READ。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;@@&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;GLOBAL&lt;/span&gt;.tx_isolation, &lt;span style=&#34;color:#ff79c6&#34;&gt;@@&lt;/span&gt;tx_isolation;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-----------------------+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;@@&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;GLOBAL&lt;/span&gt;.tx_isolation &lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;@@&lt;/span&gt;tx_isolation  &lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-----------------------+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;REPEATABLE&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;READ&lt;/span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;REPEATABLE&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;READ&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-----------------------+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;準備&#34;&gt;準備&lt;/h2&gt;&#xA;&lt;p&gt;DBを立ち上げてテーブルとレコードを入れる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat schema_and_data.&lt;span style=&#34;color:#ff79c6&#34;&gt;sql&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; a (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;BIGINT&lt;/span&gt; UNSIGNED AUTO_INCREMENT &lt;span style=&#34;color:#ff79c6&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;KEY&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;VARCHAR&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;128&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; b (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;BIGINT&lt;/span&gt; UNSIGNED AUTO_INCREMENT &lt;span style=&#34;color:#ff79c6&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;KEY&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a_id &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;BIGINT&lt;/span&gt; UNSIGNED &lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;KEY&lt;/span&gt; (a_id) &lt;span style=&#34;color:#ff79c6&#34;&gt;REFERENCES&lt;/span&gt; a (id)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; a (id, name) &lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; a (id, name) &lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; a (id, name) &lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;3&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; a (id, name) &lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;8&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; a (id, name) &lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#bd93f9&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; a (id, name) &lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt; (&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;10&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat &lt;span style=&#34;color:#ff79c6&#34;&gt;start&lt;/span&gt;.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker rm &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;f try&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;mysql&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;lock&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#6272a4&#34;&gt;--name try-mysql-lock -p 4306:3306 -e &amp;#34;MYSQL_ALLOW_EMPTY_PASSWORD=yes&amp;#34; -e &amp;#34;MYSQL_DATABASE=try-mysql-lock&amp;#34; -e &amp;#34;TZ=Asia/Tokyo&amp;#34; --health-cmd=&amp;#39;mysqladmin ping --silent&amp;#39; -d mysql:5.6 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;while [[ $(docker inspect &lt;span style=&#34;color:#6272a4&#34;&gt;--format &amp;#34;{{.State.Health.Status}}&amp;#34; try-mysql-lock) != &amp;#34;healthy&amp;#34; ]]; do printf &amp;#34;.&amp;#34;; sleep 1; done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;mysql &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;u root &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;h &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;P &lt;span style=&#34;color:#bd93f9&#34;&gt;4306&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;D try&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;mysql&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;lock&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; schema_and_data.&lt;span style=&#34;color:#ff79c6&#34;&gt;sql&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;共有sharedロック&#34;&gt;共有(Shared)ロック&lt;/h2&gt;&#xA;&lt;p&gt;その行を他がSELECTしたり共有ロックを取ることは許す。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ElasticsearchをDockerで動かしてGrafanaで可視化する</title>
      <link>https://www.sambaiz.net/article/52/</link>
      <pubDate>Sun, 29 Jan 2017 17:08:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/52/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;vm.max_map_count&#xA;(&lt;a href=&#34;http://www.atmarkit.co.jp/flinux/special/proctune/proctune02b.html&#34;&gt;バーチャルメモリにマッピングできる最大ページ数&lt;/a&gt;)&#xA;を262144以上にする。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sysctl vm.max_map_count&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ grep vm.max_map_count /etc/sysctl.conf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vm.max_map_count=262144&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# sysctl -w vm.max_map_count=262144&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;30日トライアル後、有償ライセンスが必要になるxpackのsecurity(旧sheild)がデフォルトで有効になっているのでfalseにしている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ファイルディスクリプタの上限を増やす</title>
      <link>https://www.sambaiz.net/article/41/</link>
      <pubDate>Thu, 08 Dec 2016 21:36:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/41/</guid>
      <description>&lt;h2 id=&#34;ファイルディスクリプタとは&#34;&gt;ファイルディスクリプタとは&lt;/h2&gt;&#xA;&lt;p&gt;プロセスの外部とやりとりするための識別子。POSIXではint型で、0がstdin、1がstdout、2がstderrとなっている。&#xA;ファイルやデバイスに対する&lt;code&gt;open()&lt;/code&gt;や、&#xA;ネットワーク(INETドメインソケット)やホスト内(UNIXドメインソケット)で&#xA;通信するためのソケットを生成する&lt;code&gt;socket()&lt;/code&gt;などのシステムコールで割り当てられる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenVPNサーバーPritunlをDockerで動かす</title>
      <link>https://www.sambaiz.net/article/39/</link>
      <pubDate>Fri, 02 Dec 2016 21:05:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/39/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://pritunl.com/&#34;&gt;Pritunl&lt;/a&gt;でVPNサーバーを立てる。&lt;/p&gt;&#xA;&lt;p&gt;Dockerfileはこんな感じ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/sambaiz/pritunl/&#34;&gt;https://hub.docker.com/r/sambaiz/pritunl/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; mongo:3.4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# https://docs.pritunl.com/docs/installation&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;RUN&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;deb http://repo.pritunl.com/stable/apt jessie main&amp;#39;&lt;/span&gt; &amp;gt; /etc/apt/sources.list.d/pritunl.list &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;    apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 7568D9BB55FF9E5287D586017AE645C0CF8E292A &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;    apt-get --assume-yes update &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;    apt-get --assume-yes upgrade &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;    apt-get --assume-yes install pritunl iptables&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;EXPOSE&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; 80 443 12345/udp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CMD&lt;/span&gt; mongod --fork --logpath /data/db/mongod.log &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Setup Key:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;`&lt;/span&gt;pritunl setup-key&lt;span style=&#34;color:#f1fa8c&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; pritunl start&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker run -itd -p 80:80 -p 443:443 -p 12345:12345/udp --privileged sambaiz/pritunl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker logs &amp;lt;id&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Setup Key: ***********&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;--privileged&lt;/code&gt;を付けているのはStart Server時にこれで失敗しないように。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker公式ドキュメント&#34;network コマンドを使う&#34;を読む</title>
      <link>https://www.sambaiz.net/article/7/</link>
      <pubDate>Fri, 15 Jul 2016 00:38:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/7/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Docker version 1.12.0-rc2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;公式ドキュメント&lt;a href=&#34;http://docs.docker.jp/engine/userguide/networking/work-with-networks.html&#34;&gt;network コマンドを使う&lt;/a&gt;&#xA;の内容をまとめてみた。&lt;/p&gt;&#xA;&lt;p&gt;dockerには3つのデフォルトネットワークが存在する。&lt;code&gt;docker run&lt;/code&gt;時に&lt;code&gt;--net&lt;/code&gt;オプションでネットワークを指定しない限り、&#xA;docker0として表示されるbridgeネットワークにコンテナを接続する。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
