<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Airflow on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/airflow/</link>
    <description>Recent content in Airflow on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sun, 18 Dec 2022 17:00:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/tags/airflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Airflow の Callback で複数の Task からなる処理のリトライを行う</title>
      <link>https://www.sambaiz.net/article/432/</link>
      <pubDate>Sun, 18 Dec 2022 17:00:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/432/</guid>
      <description>&lt;p&gt;EMR クラスタで処理を行う際、EmrAddStepsOperator で EMR クラスタに Step を追加した後、EmrStepSensor でその実行が終わるのを待つが、&#xA;Step の処理が失敗しても Failed するのは Sensor の方なので、リトライしても Step が再実行されないという問題がある。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Airflow で 過去の Task への依存を表す</title>
      <link>https://www.sambaiz.net/article/429/</link>
      <pubDate>Wed, 30 Nov 2022 09:34:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/429/</guid>
      <description>&lt;p&gt;定期的な集計の際に過去の集計値が必要になることがあるが、そのようなワークフローを単純に定期実行すると、処理が間に合わなかったり失敗した際にそれ以後の処理が連鎖的に失敗してしまう。&#xA;Airflow では次の方法で過去の Task への依存を記述することができ、これによって過去の集計が終わるのを待ったり、失敗時に依存しているものだけをまとめて再実行することができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CDK で Amazon Managed Workflow for Apache Airflow (MWAA) の環境を作成しワークフローを実行する</title>
      <link>https://www.sambaiz.net/article/428/</link>
      <pubDate>Mon, 28 Nov 2022 19:34:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/428/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/managed-workflows-for-apache-airflow&#34;&gt;Amazon Managed Workflow for Apache Airflow (MWAA)&lt;/a&gt; は&#xA;&lt;a href=&#34;https://airflow.apache.org/&#34;&gt;Apache Airflow&lt;/a&gt; のマネージドサービス。&#xA;サーバーレスの Step Functions とは異なりインスタンス時間のコストが&lt;a href=&#34;https://aws.amazon.com/managed-workflows-for-apache-airflow/pricing/&#34;&gt;かかる&lt;/a&gt;が、&#xA;Airflow の豊富な機能や、AWSを含むサードパーティの &lt;a href=&#34;https://airflow.apache.org/docs/#providers-packagesdocsapache-airflow-providersindexhtml&#34;&gt;Providers packages&lt;/a&gt; が利用できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Compose で Apache Airflow を起動しワークフローを実行する</title>
      <link>https://www.sambaiz.net/article/425/</link>
      <pubDate>Sat, 19 Nov 2022 16:52:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/425/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://airflow.apache.org/&#34;&gt;Apache Airflow&lt;/a&gt;はワークフローのスケジューリングやパイプラインの可視化などを行うOSS。&#xA;スケーラブルで豊富な機能を持ち、&#xA;リポジトリに含まれている AWS や Slack といったサードパーティの &lt;a href=&#34;https://airflow.apache.org/docs/#providers-packagesdocsapache-airflow-providersindexhtml&#34;&gt;Providers packages&lt;/a&gt; に加えて、&#xA;自前の Operator を実装して拡張できるようになっている。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
