<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sun, 29 May 2022 19:18:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Segment TreeとBineary Indexed Tree (BIT)で部分和を求める</title>
      <link>https://www.sambaiz.net/article/406/</link>
      <pubDate>Sun, 29 May 2022 19:18:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/406/</guid>
      <description>Segment Tree 配列の各区間での計算結果をノードに持つことで任意の区間での計算をO(log n)で行えるようにした完全二分木。 以下の例では和を持っているが</description>
    </item>
    <item>
      <title>Union-Find木で無向グラフに閉路があるかを判定する</title>
      <link>https://www.sambaiz.net/article/390/</link>
      <pubDate>Sun, 12 Dec 2021 16:39:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/390/</guid>
      <description>Union-Find木 Union-Find木はいくつかの素集合の木を持つデータ構造で、 2つの集合を結合するUnionと、要素の含まれる集合を</description>
    </item>
    <item>
      <title>ラビン-カープアルゴリズムをC&#43;&#43;で実装する</title>
      <link>https://www.sambaiz.net/article/387/</link>
      <pubDate>Sat, 04 Dec 2021 22:38:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/387/</guid>
      <description>ラビン-カープアルゴリズムはローリングハッシュを用いて部分文字列を探索するアルゴリズム。 ローリングハッシュは前のハッシュから先頭の要素を取り</description>
    </item>
    <item>
      <title>C&#43;&#43;のstructとclass</title>
      <link>https://www.sambaiz.net/article/385/</link>
      <pubDate>Tue, 30 Nov 2021 18:12:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/385/</guid>
      <description>C++のclassとstructは同じ機能を持っているが、classのデフォルトがprivateなのに対してstructはpublicになっ</description>
    </item>
    <item>
      <title>C&#43;&#43; STLのmapやunordered_mapのkeyにstructを使えるようにする</title>
      <link>https://www.sambaiz.net/article/371/</link>
      <pubDate>Fri, 09 Jul 2021 23:13:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/371/</guid>
      <description>map operator&amp;lt; を実装する。 #include &amp;lt;iostream&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;map&amp;gt; using namespace std; struct Item { string name; int point; }; bool operator&amp;lt;(const Item&amp;amp; a, const Item&amp;amp; b) { return tie(a.name, a.point) &amp;lt; tie(b.name, b.point); } int main() { map&amp;lt;Item, bool&amp;gt; M; M[{&amp;#34;sambaiz&amp;#34;, 1024}] = true; cout &amp;lt;&amp;lt; M[{&amp;#34;sambaiz&amp;#34;, 1024}] &amp;lt;&amp;lt; endl; return 0; } unordered_map operator== とハッシュ関数を実</description>
    </item>
    <item>
      <title>剰余を取った値の四則演算</title>
      <link>https://www.sambaiz.net/article/321/</link>
      <pubDate>Sat, 16 Jan 2021 18:03:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/321/</guid>
      <description>競プロの64bit整数でもオーバーフローする大きな値が出てくる問題では、言語による差が出ないよう \(10^9+7\) といった数で割ったときの余りが要求される。</description>
    </item>
    <item>
      <title>C&#43;&#43;で標準入力から数が不定なスペース区切りの文字列を読み込んで分割する</title>
      <link>https://www.sambaiz.net/article/320/</link>
      <pubDate>Tue, 12 Jan 2021 21:32:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/320/</guid>
      <description>std::getline(basic_istream, basic_string, delim) を使う。 この関数は第三引数 delim か EOF に達するとそこまでの文字列を、delim を渡さないと is.widen(&amp;rsquo;\n&amp;rsquo;) が渡されるので一行出力する。 一度 stringstream にしているのは</description>
    </item>
    <item>
      <title>C&#43;&#43;でnext_permutationを使わずに順列を列挙する</title>
      <link>https://www.sambaiz.net/article/277/</link>
      <pubDate>Wed, 03 Jun 2020 01:23:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/277/</guid>
      <description>Permutations - LeetCode 配列が渡されてそれを並び替えてできる全ての順列を返す問題。 まさにSTLのalgorithmに辞書順で次の順列を返すnext_permu</description>
    </item>
    <item>
      <title>C&#43;&#43;でO(1)で読み書きできるLRUキャッシュを実装する</title>
      <link>https://www.sambaiz.net/article/270/</link>
      <pubDate>Sun, 26 Apr 2020 18:23:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/270/</guid>
      <description>LRU Cache - LeetCode 最初次のようなコードを書いたがタイムアウトしてしまった。 C++のstd::mapは二分木で実装されているので各操作にO(log n)か</description>
    </item>
    <item>
      <title>貪欲法(Greedy algorithm)で問題を解く</title>
      <link>https://www.sambaiz.net/article/255/</link>
      <pubDate>Mon, 13 Jan 2020 21:17:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/255/</guid>
      <description>貪欲法(Greedy algorithm)は問題を分割し、それぞれにおいて貪欲に最適な選択をしていくアルゴリズムの総称。 必ずしも最適解になると</description>
    </item>
    <item>
      <title>C&#43;&#43; STLのContainersとAlgorithms</title>
      <link>https://www.sambaiz.net/article/253/</link>
      <pubDate>Sat, 04 Jan 2020 21:25:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/253/</guid>
      <description>STL(Standard Template Library)はC++の標準ライブラリ。 その名の通りtemplateで実装され、様々な型で使えるようになっている。 // https://github.com/microsoft/STL/blob/1e8b8d4eef4b2dddeb7533c5231c876383bd0ea6/stl/inc/algorithm#L3501 template &amp;lt;class _RanIt, class _Pr&amp;gt; void sort(const _RanIt</description>
    </item>
    <item>
      <title>MacのVSCodeでC&#43;&#43;を書く環境構築</title>
      <link>https://www.sambaiz.net/article/252/</link>
      <pubDate>Sat, 04 Jan 2020 01:36:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/252/</guid>
      <description>(追記:2021-02-05) 今はdevcontainerで環境を作っている。mirosoft/vscode-remote-try-cppを</description>
    </item>
    <item>
      <title>動的計画法(DP)で計算結果を再利用して計算量を減らす</title>
      <link>https://www.sambaiz.net/article/251/</link>
      <pubDate>Mon, 30 Dec 2019 19:28:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/251/</guid>
      <description>動的計画法(DP, Dynamic Programming)は、 例えばフィボナッチ数列の項f(x)を記録しておいたf(x-1)とf(x-2)から計算するよう</description>
    </item>
    <item>
      <title>単調性のある式の解を二分法で数値的に求める</title>
      <link>https://www.sambaiz.net/article/246/</link>
      <pubDate>Mon, 28 Oct 2019 22:54:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/246/</guid>
      <description>AtCoder Beginner Contest 144の D - Water Bottleをやってみた。 高橋君は、底面が1辺 a cm の正方形であり、高さが b cm であるような直方体型の水筒を持っています。(</description>
    </item>
  </channel>
</rss>
