<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sambaiz-net</title>
    <link>http://sambaiz.net/tags/elasticsearch/index.xml</link>
    <language>ja</language>
    <author>sambaiz</author>
    <rights>(C) 2017</rights>
    <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>CuratorでElasticsearchの古いindexを削除する</title>
          <link>http://sambaiz.net/article/86/</link>
          <pubDate>Wed, 22 Mar 2017 00:10:00 &#43;0900</pubDate>
          <author></author>
          <guid>http://sambaiz.net/article/86/</guid>
          <description>

&lt;h2 id=&#34;curatorとは-https-www-elastic-co-guide-en-elasticsearch-client-curator-current-index-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/curator/current/index.html&#34;&gt;Curatorとは&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;indexやsnapshotを管理するのに使えるツール。&lt;/p&gt;

&lt;h2 id=&#34;インストール-https-www-elastic-co-guide-en-elasticsearch-client-curator-current-installation-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/curator/current/installation.html&#34;&gt;インストール&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;インストールする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /etc/yum.repos.d/curator.repo
[curator-4]
name=CentOS/RHEL 7 repository for Elasticsearch Curator 4.x packages
baseurl=http://packages.elastic.co/curator/4/centos/7
gpgcheck=1
gpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch
enabled=1

$ yum install -y elasticsearch-curator
$ curator --version
curator, version 4.2.6
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;config-https-www-elastic-co-guide-en-elasticsearch-client-curator-current-configfile-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/curator/current/configfile.html&#34;&gt;config&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;configファイルを書く。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;client:
  hosts:
    - 127.0.0.1
  port: 9200

logging:
  loglevel: INFO
  logfile:
  logformat: default
  blacklist: [&#39;elasticsearch&#39;, &#39;urllib3&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;action-https-www-elastic-co-guide-en-elasticsearch-client-curator-current-actions-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/curator/current/actions.html&#34;&gt;action&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;今回はindexを削除するので&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/curator/current/ex_delete_indices.html&#34;&gt;delete_indices&lt;/a&gt;。
対象は&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/curator/current/filters.html&#34;&gt;filter&lt;/a&gt;で指定する。
logstash formatだとhogehoge-2017.01.01のようなindex名になるので&lt;code&gt;%Y.%m.%d&lt;/code&gt;。&lt;code&gt;okder than 3 days&lt;/code&gt;のものを削除する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;actions:
  1:
    action: delete_indices
    description: &amp;gt;-
      3日前より古いhogehoge-* indexを消す
    filters:
    - filtertype: pattern
      kind: prefix
      value: hogehoge-
    - filtertype: age
      source: name
      direction: older
      timestring: &#39;%Y.%m.%d&#39;
      unit: days
      unit_count: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;実行-https-www-elastic-co-guide-en-elasticsearch-client-curator-current-command-line-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/curator/current/command-line.html&#34;&gt;実行&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;configとactionファイルを指定して実行する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curator --config curator_config.yml curator_action.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;毎日00:05に実行するようにしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ crontab -l
5 0 * * * curator --config curator_config.yml curator_action.yml
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Elasticsearchで期間ごとの集計値を出す</title>
          <link>http://sambaiz.net/article/77/</link>
          <pubDate>Sun, 05 Mar 2017 01:10:00 &#43;0900</pubDate>
          <author></author>
          <guid>http://sambaiz.net/article/77/</guid>
          <description>

&lt;p&gt;Bucket(SQLでいうGROUP BY)にまとめて(Bucket Aggreagtion)、集計(Metric Aggregation)する。&lt;/p&gt;

&lt;p&gt;使うデータは&lt;a href=&#34;http://sambaiz.net/article/76/&#34;&gt;作ったツール&lt;/a&gt;で生成したこんなの。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{&amp;quot;@timestamp&amp;quot;:1488635130,&amp;quot;os_name&amp;quot;:&amp;quot;linux&amp;quot;,&amp;quot;score&amp;quot;:82}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;bucket-aggregations-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-search-aggregations-bucket-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations-bucket.html&#34;&gt;Bucket Aggregations&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;date-range-aggregation-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-search-aggregations-bucket-daterange-aggregation-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations-bucket-daterange-aggregation.html&#34;&gt;Date Range Aggregation&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;date_range&lt;/code&gt;で期間のBucketを作る。この例だと今から10分前の00秒~今の分の00秒まで。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200/hoge/_search -d&#39;
{
    &amp;quot;aggs&amp;quot;: {
        &amp;quot;range_10minutes&amp;quot;: {
            &amp;quot;date_range&amp;quot;: {
                &amp;quot;field&amp;quot;: &amp;quot;@timestamp&amp;quot;,
                &amp;quot;format&amp;quot;: &amp;quot;HH-mm-ssZ&amp;quot;,
                &amp;quot;ranges&amp;quot;: [                               
                    { &amp;quot;to&amp;quot;: &amp;quot;now/m&amp;quot;, &amp;quot;from&amp;quot;: &amp;quot;now-10m/m&amp;quot; }
                ]
            }
        }
    }
}&#39; | jq .aggregations
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;range_10minutes&amp;quot;: {
    &amp;quot;buckets&amp;quot;: [
      {
        &amp;quot;key&amp;quot;: &amp;quot;15-17+0000-15-27+0000&amp;quot;,
        &amp;quot;from&amp;quot;: 1488640620000,
        &amp;quot;from_as_string&amp;quot;: &amp;quot;15-17+0000&amp;quot;,
        &amp;quot;to&amp;quot;: 1488641220000,
        &amp;quot;to_as_string&amp;quot;: &amp;quot;15-27+0000&amp;quot;,
        &amp;quot;doc_count&amp;quot;: 600
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;date-histogram-aggregation-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-search-aggregations-bucket-datehistogram-aggregation-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations-bucket-datehistogram-aggregation.html&#34;&gt;Date Histogram Aggregation&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;date_histogram&lt;/code&gt;で日付の間隔でBucketを作る。この例だと1分ごとにBucketが作られる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200/hoge/_search -d&#39;
{
    &amp;quot;aggs&amp;quot;: {   
        &amp;quot;histogram_1minute&amp;quot;: {                  
            &amp;quot;date_histogram&amp;quot;: {
                &amp;quot;field&amp;quot;: &amp;quot;@timestamp&amp;quot;,
                &amp;quot;interval&amp;quot;: &amp;quot;1m&amp;quot;
            }
        }
    }
}&#39; | jq .aggregations
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;histogram_1minute&amp;quot;: {
    &amp;quot;buckets&amp;quot;: [
      ...
      {
        &amp;quot;key_as_string&amp;quot;: &amp;quot;1488640560&amp;quot;,
        &amp;quot;key&amp;quot;: 1488640560000,
        &amp;quot;doc_count&amp;quot;: 60
      },
      {
        &amp;quot;key_as_string&amp;quot;: &amp;quot;1488640620&amp;quot;,
        &amp;quot;key&amp;quot;: 1488640620000,
        &amp;quot;doc_count&amp;quot;: 31
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;terms-aggregation-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-search-aggregations-bucket-terms-aggregation-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations-bucket-terms-aggregation.html&#34;&gt;Terms Aggregation&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;terms&lt;/code&gt;で値ごとにBucketを作る。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200/hoge/_search -d&#39;
{
    &amp;quot;aggs&amp;quot;: {   
        &amp;quot;os_names&amp;quot;:{                  
            &amp;quot;terms&amp;quot;: { &amp;quot;field&amp;quot;: &amp;quot;os_name&amp;quot; }
        }
    }
}&#39; | jq .aggregations
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;os_names&amp;quot;: {
    &amp;quot;doc_count_error_upper_bound&amp;quot;: 0,
    &amp;quot;sum_other_doc_count&amp;quot;: 0,
    &amp;quot;buckets&amp;quot;: [
      {
        &amp;quot;key&amp;quot;: &amp;quot;windows&amp;quot;,
        &amp;quot;doc_count&amp;quot;: 458
      },
      {
        &amp;quot;key&amp;quot;: &amp;quot;android&amp;quot;,
        &amp;quot;doc_count&amp;quot;: 456
      },
      {
        &amp;quot;key&amp;quot;: &amp;quot;mac&amp;quot;,
        &amp;quot;doc_count&amp;quot;: 455
      },
      {
        &amp;quot;key&amp;quot;: &amp;quot;linux&amp;quot;,
        &amp;quot;doc_count&amp;quot;: 447
      },
      {
        &amp;quot;key&amp;quot;: &amp;quot;ios&amp;quot;,
        &amp;quot;doc_count&amp;quot;: 404
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;metrics-aggregations-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-search-aggregations-metrics-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations-metrics.html&#34;&gt;Metrics Aggregations&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;avg-aggregation-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-search-aggregations-metrics-avg-aggregation-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations-metrics-avg-aggregation.html&#34;&gt;Avg Aggregation&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;avg&lt;/code&gt;で平均を出す。&lt;code&gt;max&lt;/code&gt;、&lt;code&gt;min&lt;/code&gt;、&lt;code&gt;sum&lt;/code&gt;も同様。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200/hoge/_search -d &#39;
{
    &amp;quot;aggs&amp;quot;: {      
        &amp;quot;avg_score&amp;quot;: { &amp;quot;avg&amp;quot;: { &amp;quot;field&amp;quot; : &amp;quot;score&amp;quot; } }
    }
}&#39; | jq .aggregations
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;avg_score&amp;quot;: {
    &amp;quot;value&amp;quot;: 50.34639639639639
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;集計する&#34;&gt;集計する&lt;/h2&gt;

&lt;p&gt;aggsを組み合わせて集計する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200/hoge/_search -d&#39;
{             
    &amp;quot;aggs&amp;quot;: {
        &amp;quot;range&amp;quot;: {
            &amp;quot;date_range&amp;quot;: {
                &amp;quot;field&amp;quot;: &amp;quot;@timestamp&amp;quot;,
                &amp;quot;format&amp;quot;: &amp;quot;HH-mm-ssZ&amp;quot;,
                &amp;quot;ranges&amp;quot;: [                               
                    { &amp;quot;to&amp;quot;: &amp;quot;now/m&amp;quot;, &amp;quot;from&amp;quot;: &amp;quot;now-10m/m&amp;quot; }
                ]
            },
            &amp;quot;aggs&amp;quot;: {
                &amp;quot;histogram&amp;quot;: {                  
                    &amp;quot;date_histogram&amp;quot;: {
                        &amp;quot;field&amp;quot;: &amp;quot;@timestamp&amp;quot;,
                        &amp;quot;interval&amp;quot;: &amp;quot;1m&amp;quot;
                    },
                    &amp;quot;aggs&amp;quot;: {
                        &amp;quot;os_names&amp;quot;:{
                            &amp;quot;terms&amp;quot;: { &amp;quot;field&amp;quot; : &amp;quot;os_name&amp;quot; },
                            &amp;quot;aggs&amp;quot;: {
                                &amp;quot;avg_score&amp;quot;: { &amp;quot;avg&amp;quot;: { &amp;quot;field&amp;quot;: &amp;quot;score&amp;quot; }}
                            }
                        }
                    }
                }
            }
        }
    }
}&#39; | jq .aggregations
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;range&amp;quot;: {
    &amp;quot;buckets&amp;quot;: [
      {
        &amp;quot;key&amp;quot;: &amp;quot;15-55-00+0000-16-05-00+0000&amp;quot;,
        &amp;quot;from&amp;quot;: 1488642900000,
        &amp;quot;from_as_string&amp;quot;: &amp;quot;15-55-00+0000&amp;quot;,
        &amp;quot;to&amp;quot;: 1488643500000,
        &amp;quot;to_as_string&amp;quot;: &amp;quot;16-05-00+0000&amp;quot;,
        &amp;quot;doc_count&amp;quot;: 25,
        &amp;quot;histogram&amp;quot;: {
          &amp;quot;buckets&amp;quot;: [
            {
              &amp;quot;key_as_string&amp;quot;: &amp;quot;1488643440&amp;quot;,
              &amp;quot;key&amp;quot;: 1488643440000,
              &amp;quot;doc_count&amp;quot;: 25,
              &amp;quot;os_names&amp;quot;: {
                &amp;quot;doc_count_error_upper_bound&amp;quot;: 0,
                &amp;quot;sum_other_doc_count&amp;quot;: 0,
                &amp;quot;buckets&amp;quot;: [
                  {
                    &amp;quot;key&amp;quot;: &amp;quot;linux&amp;quot;,
                    &amp;quot;doc_count&amp;quot;: 9,
                    &amp;quot;avg_score&amp;quot;: {
                      &amp;quot;value&amp;quot;: 41.44444444444444
                    }
                  },
                  {
                    &amp;quot;key&amp;quot;: &amp;quot;ios&amp;quot;,
                    &amp;quot;doc_count&amp;quot;: 5,
                    &amp;quot;avg_score&amp;quot;: {
                      &amp;quot;value&amp;quot;: 63.6
                    }
                  },
                  {
                    &amp;quot;key&amp;quot;: &amp;quot;mac&amp;quot;,
                    &amp;quot;doc_count&amp;quot;: 5,
                    &amp;quot;avg_score&amp;quot;: {
                      &amp;quot;value&amp;quot;: 53.6
                    }
                  },
                  {
                    &amp;quot;key&amp;quot;: &amp;quot;android&amp;quot;,
                    &amp;quot;doc_count&amp;quot;: 4,
                    &amp;quot;avg_score&amp;quot;: {
                      &amp;quot;value&amp;quot;: 41.25
                    }
                  },
                  {
                    &amp;quot;key&amp;quot;: &amp;quot;windows&amp;quot;,
                    &amp;quot;doc_count&amp;quot;: 2,
                    &amp;quot;avg_score&amp;quot;: {
                      &amp;quot;value&amp;quot;: 67
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>ElasticsearchのCircuit Breaker</title>
          <link>http://sambaiz.net/article/71/</link>
          <pubDate>Fri, 24 Feb 2017 21:45:00 &#43;0900</pubDate>
          <author></author>
          <guid>http://sambaiz.net/article/71/</guid>
          <description>&lt;p&gt;&lt;a href=&#34;http://sambaiz.net/article/52/&#34;&gt;ElasticsearchをDockerで動かしてGrafanaで可視化する - sambaiz.net&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ESに送られるデータの量が増えてくるとGrafanaのDashboardにグラフが表示されなくなってしまった。
表示されたエラーはこういうの。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;root_cause&amp;quot;: [
    {
        &amp;quot;type&amp;quot;: &amp;quot;circuit_breaking_exception&amp;quot;,
        &amp;quot;reason&amp;quot;: &amp;quot;[request] Data too large, data for [] would be larger than limit of [8998512230/8.3gb]&amp;quot;,
        &amp;quot;bytes_wanted&amp;quot;: 10464007168,
        &amp;quot;bytes_limit&amp;quot;: 8998512230
    }
],
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これは1リクエストの集計などで使うメモリ量がしきい値をこえて
&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/circuit-breaker.html&#34;&gt;Circuit Breaker&lt;/a&gt;が発動したということ。
メモリを食いつぶしてOutOfMemoryになる前に焼き切れるようになっている。&lt;/p&gt;

&lt;p&gt;情報は&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/cluster-nodes-stats.html&#34;&gt;stats&lt;/a&gt;のapiでも取得できる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200/_nodes/stats | jq .nodes[].breakers.request
{
  &amp;quot;limit_size_in_bytes&amp;quot;: 8998512230,
  &amp;quot;limit_size&amp;quot;: &amp;quot;8.3gb&amp;quot;,
  &amp;quot;estimated_size_in_bytes&amp;quot;: 10348347504,
  &amp;quot;estimated_size&amp;quot;: &amp;quot;9.6gb&amp;quot;,
  &amp;quot;overhead&amp;quot;: 1,
  &amp;quot;tripped&amp;quot;: 470
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回ひっかかったのは&lt;code&gt;indices.breaker.request.limit&lt;/code&gt;。デフォルトではJVMのヒープメモリの60%になっているが、
これを80%にまで緩和する。併せてparent-levelのbreakerも上げる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPUT localhost:9200/_cluster/settings -d &#39;{
    &amp;quot;persistent&amp;quot; : {
        &amp;quot;indices.breaker.request.limit&amp;quot;: &amp;quot;80%&amp;quot;,
        &amp;quot;indices.breaker.total.limit&amp;quot;: &amp;quot;80%&amp;quot;
    }
}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPUT localhost:9200/_cluster/settings -d &#39;{
    &amp;quot;persistent&amp;quot; : {
        &amp;quot;indices.breaker.request.limit&amp;quot;: &amp;quot;80%&amp;quot;,
        &amp;quot;indices.breaker.total.limit&amp;quot;: &amp;quot;80%&amp;quot;
    }
}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;必要なメモリ量を上回ったのでひとまずは返せるようになった。
これは一時しのぎで、定常的に大量にメモリが必要なリクエストを処理する必要があるなら、そもそもメモリが足りないので増やさなければならない。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200/_nodes/stats | jq .nodes[].breakers.request
{
  &amp;quot;limit_size_in_bytes&amp;quot;: 11998016307,
  &amp;quot;limit_size&amp;quot;: &amp;quot;11.1gb&amp;quot;,
  &amp;quot;estimated_size_in_bytes&amp;quot;: 10473078896,
  &amp;quot;estimated_size&amp;quot;: &amp;quot;9.7gb&amp;quot;,
  &amp;quot;overhead&amp;quot;: 1,
  &amp;quot;tripped&amp;quot;: 470
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Elasticsearchのmapping</title>
          <link>http://sambaiz.net/article/62/</link>
          <pubDate>Thu, 09 Feb 2017 21:00:00 &#43;0900</pubDate>
          <author></author>
          <guid>http://sambaiz.net/article/62/</guid>
          <description>

&lt;p&gt;Dynamic mappingがあるので、自分で設定しなくてもデータは入るけど、
自分でやるとindexやanalyzerなどの設定が詳細にできるし、意図しないmappingを避けることもできる。
バージョンは5.2。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPOST &#39;localhost:9200/test_hoge/fuga?pretty&#39; -d&#39;
{
    &amp;quot;name&amp;quot;: 0 
}
&#39;

$ curl -XPOST &#39;localhost:9200/test_hoge/fuga?pretty&#39; -d&#39;
{
    &amp;quot;name&amp;quot;: &amp;quot;sambaiz&amp;quot;
}
&#39;

{
  &amp;quot;error&amp;quot; : {
    &amp;quot;root_cause&amp;quot; : [
      {
        &amp;quot;type&amp;quot; : &amp;quot;mapper_parsing_exception&amp;quot;,
        &amp;quot;reason&amp;quot; : &amp;quot;failed to parse [name]&amp;quot;
      }
    ],
    &amp;quot;type&amp;quot; : &amp;quot;mapper_parsing_exception&amp;quot;,
    &amp;quot;reason&amp;quot; : &amp;quot;failed to parse [name]&amp;quot;,
    &amp;quot;caused_by&amp;quot; : {
      &amp;quot;type&amp;quot; : &amp;quot;number_format_exception&amp;quot;,
      &amp;quot;reason&amp;quot; : &amp;quot;For input string: \&amp;quot;sambaiz\&amp;quot;&amp;quot;
    }
  },
  &amp;quot;status&amp;quot; : 400
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mapping-parameters-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-mapping-params-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-params.html&#34;&gt;Mapping parameters&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;index-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-mapping-index-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-index.html&#34;&gt;index&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;falseにするとindexしない。クエリで必要ないものはfalseにする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;memo&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;text&amp;quot;, &amp;quot;index&amp;quot;: false }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;store-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-mapping-store-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-store.html&#34;&gt;store&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;デフォルトでフィールドはindexされるがstoreはされず、metaの&lt;code&gt;_source&lt;/code&gt;としてオリジナルのJSONがstoreされている。
サイズの大きなフィールドがあるなど、選んでstoreする場合はtrueにする。stored_fieldsで必要なものだけとってくることができる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;memo&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;text&amp;quot;, &amp;quot;store&amp;quot;: true }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;meta-fields-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-mapping-fields-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-fields.html&#34;&gt;Meta fields&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;all-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-mapping-all-field-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-all-field.html&#34;&gt;_all&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;全てのフィールドをスペースでつなげた一つの文字列にしてanalyzeし、indexする。storeはされない。&lt;/p&gt;

&lt;p&gt;フィールドの区別なく検索できたりするけどindexするのにコストがかかるので必要ないならfalseにする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;_all&amp;quot;: { &amp;quot;enabled&amp;quot;: false }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;source-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-mapping-source-field-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-source-field.html&#34;&gt;_source&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;オリジナルのJSONを含み、indexはされずstoreされる。&lt;/p&gt;

&lt;p&gt;無効にするとストレージを節約できるが、
まずは&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/index-modules.html#index-codec&#34;&gt;compression level&lt;/a&gt;を上げてみる。
無効にするとupdateやreindexができなくなったりするので有効のままにしている。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;_source&amp;quot;: { &amp;quot;enabled&amp;quot;: false }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;analysis-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-analysis-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/analysis.html&#34;&gt;analysis&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;textをどのようにanalyzeするか。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/analyzer-anatomy.html&#34;&gt;Analyzer&lt;/a&gt;は
Character filtersで文字列を加工してTokenizerでトークンに分割してからToken filtersでトークンを取り除いたり変更したりするもの。
自分でこれらを組み合わせて&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/analysis-custom-analyzer.html&#34;&gt;定義する&lt;/a&gt;こともできる。&lt;/p&gt;

&lt;p&gt;日本語のAnalyzerとして&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/plugins/5.2/analysis-kuromoji.html&#34;&gt;kuromoji&lt;/a&gt;がある。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bin/elasticsearch-plugin install analysis-kuromoji
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;name&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;keyword&amp;quot;, &amp;quot;analyzer&amp;quot;: &amp;quot;kuromoji&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XGET &#39;localhost:9200/_analyze?pretty&#39; -d &#39;
{
  &amp;quot;analyzer&amp;quot; : &amp;quot;kuromoji&amp;quot;,
  &amp;quot;text&amp;quot; : &amp;quot;Character filtersで文字列を加工します&amp;quot;
}&#39;

{
  &amp;quot;tokens&amp;quot; : [
    {
      &amp;quot;token&amp;quot; : &amp;quot;character&amp;quot;,
      &amp;quot;start_offset&amp;quot; : 0,
      &amp;quot;end_offset&amp;quot; : 9,
      &amp;quot;type&amp;quot; : &amp;quot;word&amp;quot;,
      &amp;quot;position&amp;quot; : 0
    },
    {
      &amp;quot;token&amp;quot; : &amp;quot;filters&amp;quot;,
      &amp;quot;start_offset&amp;quot; : 10,
      &amp;quot;end_offset&amp;quot; : 17,
      &amp;quot;type&amp;quot; : &amp;quot;word&amp;quot;,
      &amp;quot;position&amp;quot; : 1
    },
    {
      &amp;quot;token&amp;quot; : &amp;quot;文字&amp;quot;,
      &amp;quot;start_offset&amp;quot; : 18,
      &amp;quot;end_offset&amp;quot; : 20,
      &amp;quot;type&amp;quot; : &amp;quot;word&amp;quot;,
      &amp;quot;position&amp;quot; : 3
    },
    {
      &amp;quot;token&amp;quot; : &amp;quot;列&amp;quot;,
      &amp;quot;start_offset&amp;quot; : 20,
      &amp;quot;end_offset&amp;quot; : 21,
      &amp;quot;type&amp;quot; : &amp;quot;word&amp;quot;,
      &amp;quot;position&amp;quot; : 4
    },
    {
      &amp;quot;token&amp;quot; : &amp;quot;加工&amp;quot;,
      &amp;quot;start_offset&amp;quot; : 22,
      &amp;quot;end_offset&amp;quot; : 24,
      &amp;quot;type&amp;quot; : &amp;quot;word&amp;quot;,
      &amp;quot;position&amp;quot; : 6
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;datatype-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-mapping-types-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-types.html&#34;&gt;datatype&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;文字列-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-string-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/string.html&#34;&gt;文字列&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;5.Xからstringは廃止され
&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/text.html&#34;&gt;text&lt;/a&gt;と
&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/keyword.html&#34;&gt;keyword&lt;/a&gt;になった。&lt;/p&gt;

&lt;p&gt;textはメールの文章のようなfull-textの値で、ある単語がそれぞれの文章に含まれるかということを調べることができる。
メールアドレスのようなデータの場合はkeywordを使う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;email&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;keyword&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;数値-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-number-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/number.html&#34;&gt;数値&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;long(64bit), integer(32bit), short(16bit, ~32767), byte(8bit, ~127), double, floatとか。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;age&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;short&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;日付-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-date-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/date.html&#34;&gt;日付&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;こんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;date&amp;quot;: {
  &amp;quot;type&amp;quot;:   &amp;quot;date&amp;quot;,
  &amp;quot;format&amp;quot;: &amp;quot;yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;boolean-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-boolean-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/boolean.html&#34;&gt;Boolean&lt;/a&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;success&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;object-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-object-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/object.html&#34;&gt;Object&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;propertiesの中に書く。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;hoge&amp;quot;: {
  &amp;quot;properties&amp;quot;: {
    &amp;quot;fuga&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;nested-https-www-elastic-co-guide-en-elasticsearch-reference-5-2-nested-html&#34;&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/nested.html&#34;&gt;nested&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;objectの配列。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;hoge&amp;quot;: {
  &amp;quot;type&amp;quot;: &amp;quot;nested&amp;quot;
  &amp;quot;properties&amp;quot;: {
    &amp;quot;fuga&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;hoge&amp;quot;: [{&amp;quot;fuga&amp;quot;: true}]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;登録&#34;&gt;登録&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPUT &#39;localhost:9200/test_index?pretty&#39; -d&#39;
{
  &amp;quot;mappings&amp;quot;: {
    &amp;quot;test_type&amp;quot;: { 
      &amp;quot;_all&amp;quot;:       { &amp;quot;enabled&amp;quot;: false  }, 
      &amp;quot;properties&amp;quot;: { 
        &amp;quot;name&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;keyword&amp;quot;, &amp;quot;store&amp;quot;: true },
        &amp;quot;description&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;text&amp;quot;, &amp;quot;analyzer&amp;quot;: &amp;quot;kuromoji&amp;quot; },
        &amp;quot;memo&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;text&amp;quot;, &amp;quot;index&amp;quot;: false }
      }
    }
  }
}
&#39;

$ curl -XPOST &#39;localhost:9200/test_index/test_type?pretty&#39; -d&#39;
{
    &amp;quot;name&amp;quot;: &amp;quot;sambaiz&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;青い海&amp;quot;,
    &amp;quot;memo&amp;quot;: &amp;quot;白い空&amp;quot;
}
&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;logstashのようにindex名に日付が付いているような場合は
&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/indices-templates.html&#34;&gt;indices-template&lt;/a&gt;で設定する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPUT localhost:9200/_template/hogefuga-template -d &#39;
{
  &amp;quot;template&amp;quot; : &amp;quot;hogefuga-*&amp;quot;,
  &amp;quot;mappings&amp;quot; : {
    ...
  }
}
&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;取得&#34;&gt;取得&lt;/h2&gt;

&lt;p&gt;まずはデータが入っていることを確認。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl &#39;localhost:9200/test_index/test_type/_search?pretty&#39;
{
  &amp;quot;took&amp;quot; : 1,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 5,
    &amp;quot;successful&amp;quot; : 5,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 1,
    &amp;quot;max_score&amp;quot; : 1.0,
    &amp;quot;hits&amp;quot; : [
      {
        &amp;quot;_index&amp;quot; : &amp;quot;test_index&amp;quot;,
        &amp;quot;_type&amp;quot; : &amp;quot;test_type&amp;quot;,
        &amp;quot;_id&amp;quot; : &amp;quot;AVodMAubr8EtIroFs0eP&amp;quot;,
        &amp;quot;_score&amp;quot; : 1.0,
        &amp;quot;_source&amp;quot; : {
          &amp;quot;name&amp;quot; : &amp;quot;sambaiz&amp;quot;,
          &amp;quot;description&amp;quot; : &amp;quot;青い海&amp;quot;,
          &amp;quot;memo&amp;quot; : &amp;quot;白い空&amp;quot;
        }
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;stored_fieldsを付けてリクエスト。_sourceが含まれず、storeがtrueなnameだけが返ってくる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl &#39;localhost:9200/test_index/_search?pretty&amp;amp;stored_fields=name,description,memo&#39;
{
  &amp;quot;took&amp;quot; : 1,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 5,
    &amp;quot;successful&amp;quot; : 5,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 1,
    &amp;quot;max_score&amp;quot; : 1.0,
    &amp;quot;hits&amp;quot; : [
      {
        &amp;quot;_index&amp;quot; : &amp;quot;test_index&amp;quot;,
        &amp;quot;_type&amp;quot; : &amp;quot;test_type&amp;quot;,
        &amp;quot;_id&amp;quot; : &amp;quot;AVodMAubr8EtIroFs0eP&amp;quot;,
        &amp;quot;_score&amp;quot; : 1.0,
        &amp;quot;fields&amp;quot; : {
          &amp;quot;name&amp;quot; : [
            &amp;quot;sambaiz&amp;quot;
          ]
        }
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;クエリを付けてリクエスト。indexされてないmemoではひっかからない。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPOST &#39;localhost:9200/test_index/test_type/_search?pretty&#39; -d &#39;
{
  &amp;quot;query&amp;quot;:{
    &amp;quot;query_string&amp;quot;:{
      &amp;quot;default_field&amp;quot; : &amp;quot;description&amp;quot;,
      &amp;quot;query&amp;quot;: &amp;quot;青い海&amp;quot;
    }
  }
}&#39;

{
  &amp;quot;took&amp;quot; : 2,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 5,
    &amp;quot;successful&amp;quot; : 5,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 1,
    ...
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPOST &#39;localhost:9200/test_index/test_type/_search?pretty&#39; -d &#39;
{
  &amp;quot;query&amp;quot;:{
    &amp;quot;query_string&amp;quot;:{
      &amp;quot;default_field&amp;quot; : &amp;quot;memo&amp;quot;,
      &amp;quot;query&amp;quot;: &amp;quot;白い空&amp;quot;
    }
  }
}&#39;

{
  &amp;quot;took&amp;quot; : 1,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 5,
    &amp;quot;successful&amp;quot; : 5,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 0,
    &amp;quot;max_score&amp;quot; : null,
    &amp;quot;hits&amp;quot; : [ ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.johtani.info/blog/2014/09/09/performance-considerations-for-elasticsearch-indexing/&#34;&gt;Elasticsearchのインデキシングに関するパフォーマンス検討 - @johtaniの日記 2nd&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>fluentdのrecord_transformerでログを加工する</title>
          <link>http://sambaiz.net/article/55/</link>
          <pubDate>Fri, 03 Feb 2017 21:14:00 &#43;0900</pubDate>
          <author></author>
          <guid>http://sambaiz.net/article/55/</guid>
          <description>&lt;p&gt;&lt;a href=&#34;http://docs.fluentd.org/v0.12/articles/filter_record_transformer&#34;&gt;http://docs.fluentd.org/v0.12/articles/filter_record_transformer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;追加したり、編集したり、削除したりできるフィルタ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;source&amp;gt;
  @type forward
  port 24224
  bind 0.0.0.0
&amp;lt;/source&amp;gt;

&amp;lt;filter hoge.log&amp;gt;
  @type record_transformer
  enable_ruby
  auto_typecast true
  remove_keys b,d

  &amp;lt;record&amp;gt;
    what_is_tag ${tag}
    what_is_a ${record[&amp;quot;a&amp;quot;]}
    what_is_c_of_b_add_1 ${record[&amp;quot;b&amp;quot;][&amp;quot;c&amp;quot;] + 1}
  &amp;lt;/record&amp;gt;
&amp;lt;/filter&amp;gt;

&amp;lt;match hoge.log&amp;gt;
  @type stdout
&amp;lt;/match&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この例だとタグを値に持つ&amp;rdquo;what_is_tag&amp;rdquo;、aを値に持つ&amp;rdquo;what_is_a&amp;rdquo;、b.cの値に1を足す&amp;rdquo;what_is_c_of_b_add_1&amp;rdquo;が追加され、
bとdが削除される。一旦まっさらにして入れるものだけを指定することもできる。&lt;/p&gt;

&lt;p&gt;auto_typecastをtrueにしないと&amp;rdquo;what_is_c_of_b_add_1&amp;rdquo;の値がstringになる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo &#39;{&amp;quot;a&amp;quot;: &amp;quot;hoge&amp;quot;, &amp;quot;b&amp;quot;: {&amp;quot;c&amp;quot;: 1}, &amp;quot;d&amp;quot;: &amp;quot;fuga&amp;quot;}&#39; | /opt/td-agent/embedded/bin/fluent-cat hoge.log
$ tail /var/log/td-agent/td-agent.log
hoge.log: {&amp;quot;a&amp;quot;:&amp;quot;hoge&amp;quot;,&amp;quot;what_is_tag&amp;quot;:&amp;quot;hoge.log&amp;quot;,&amp;quot;what_is_a&amp;quot;:&amp;quot;hoge&amp;quot;,&amp;quot;what_is_c_of_b_add_1&amp;quot;:2}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラーが起きるとnullになるが、それ以外の処理はされる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo &#39;{&amp;quot;a&amp;quot;: &amp;quot;hoge&amp;quot;, &amp;quot;b&amp;quot;: {&amp;quot;c&amp;quot;: &amp;quot;error!&amp;quot;}, &amp;quot;d&amp;quot;: &amp;quot;fuga&amp;quot;}&#39; | /opt/td-agent/embedded/bin/fluent-cat hoge.log
$ tail /var/log/td-agent/td-agent.log
[warn]: failed to expand `record[&amp;quot;b&amp;quot;][&amp;quot;c&amp;quot;] + 1` error_class=TypeError error=&amp;quot;no implicit conversion of Fixnum into String&amp;quot;
...
hoge.log: {&amp;quot;a&amp;quot;:&amp;quot;hoge&amp;quot;,&amp;quot;what_is_tag&amp;quot;:&amp;quot;hoge.log&amp;quot;,&amp;quot;what_is_a&amp;quot;:&amp;quot;hoge&amp;quot;,&amp;quot;what_is_c_of_b_add_1&amp;quot;:null}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;フィルタ適用前と後をそれぞれoutputしてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;match hoge.log&amp;gt;
  @type copy

  &amp;lt;store&amp;gt;
    @type stdout
  &amp;lt;/store&amp;gt;
 
  &amp;lt;store&amp;gt;
    @type relabel
    @label @fuga
  &amp;lt;/store&amp;gt;
&amp;lt;/match&amp;gt;

&amp;lt;label @fuga&amp;gt;
  &amp;lt;filter hoge.log&amp;gt;
    @type record_transformer
    enable_ruby
    auto_typecast true
    remove_keys b,d
  
    &amp;lt;record&amp;gt;
      what_is_tag ${tag}
      what_is_a ${record[&amp;quot;a&amp;quot;]}
      what_is_c_of_b_add_1 ${record[&amp;quot;b&amp;quot;][&amp;quot;c&amp;quot;] + 1}
    &amp;lt;/record&amp;gt;
  &amp;lt;/filter&amp;gt;

  &amp;lt;match hoge.log&amp;gt;
    @type stdout
  &amp;lt;/match&amp;gt;
&amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;hoge.log: {&amp;quot;a&amp;quot;:&amp;quot;hoge&amp;quot;,&amp;quot;b&amp;quot;:{&amp;quot;c&amp;quot;:1},&amp;quot;d&amp;quot;:&amp;quot;fuga&amp;quot;}
hoge.log: {&amp;quot;a&amp;quot;:&amp;quot;hoge&amp;quot;,&amp;quot;what_is_tag&amp;quot;:&amp;quot;hoge.log&amp;quot;,&amp;quot;what_is_a&amp;quot;:&amp;quot;hoge&amp;quot;,&amp;quot;what_is_c_of_b_add_1&amp;quot;:2}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>fluentdでElasticsearchに送る</title>
          <link>http://sambaiz.net/article/54/</link>
          <pubDate>Wed, 01 Feb 2017 21:51:00 &#43;0900</pubDate>
          <author></author>
          <guid>http://sambaiz.net/article/54/</guid>
          <description>&lt;p&gt;&lt;a href=&#34;https://github.com/uken/fluent-plugin-elasticsearch&#34;&gt;uken/fluent-plugin-elasticsearch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;必要なものをいれていく。Amazon LinuxのAMIから。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Failed to build gem native extension.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ yum install -y ruby-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;serverengine requires Ruby version &amp;gt;= 2.1.0.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/rbenv/rbenv&#34;&gt;rbenv&lt;/a&gt;でバージョンを上げる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/rbenv/rbenv.git ~/.rbenv
$ cd ~/.rbenv &amp;amp;&amp;amp; src/configure &amp;amp;&amp;amp; make -C src
$ echo &#39;export PATH=&amp;quot;$HOME/.rbenv/bin:$PATH&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
$ ~/.rbenv/bin/rbenv init
$ echo &#39;eval &amp;quot;$(rbenv init -)&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
$ source ~/.bash_profile
$ git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv -v
rbenv 1.1.0-2-g4f8925a
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ruby install aborted due to missing extensions&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ yum install -y openssl-devel readline-devel zlib-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv install -l
1.8.5-p113
1.8.5-p114
1.8.5-p115
...

$ rbenv install 2.4.0
$ rbenv global 2.4.0
$ ruby -v
ruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-linux]
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ td-agent-gem install fluent-plugin-elasticsearch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;td-agent.confはこんな感じ。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;source&amp;gt;
  @type forward
  port 24224
  bind 0.0.0.0
&amp;lt;/source&amp;gt;

&amp;lt;match hoge.log&amp;gt;
  @type elasticsearch
  host *****
  port 9200
  index_name test_index
  type_name test_type
&amp;lt;/match&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ echo &#39;{&amp;quot;a&amp;quot;: &amp;quot;b&amp;quot;}&#39; | /opt/td-agent/embedded/bin/fluent-cat hoge.log
$ curl *****:9200/test_index/test_type/_search?pretty
{
  &amp;quot;took&amp;quot; : 2,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 5,
    &amp;quot;successful&amp;quot; : 5,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 1,
    &amp;quot;max_score&amp;quot; : 1.0,
    &amp;quot;hits&amp;quot; : [
      {
        &amp;quot;_index&amp;quot; : &amp;quot;test_index&amp;quot;,
        &amp;quot;_type&amp;quot; : &amp;quot;test_type&amp;quot;,
        &amp;quot;_id&amp;quot; : &amp;quot;AVn5puy79PEDL_x5e_u3&amp;quot;,
        &amp;quot;_score&amp;quot; : 1.0,
        &amp;quot;_source&amp;quot; : {
          &amp;quot;a&amp;quot; : &amp;quot;b&amp;quot;
        }
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;logstash formatでも入れてみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;source&amp;gt;
  @type forward
  port 24224
  bind 0.0.0.0
&amp;lt;/source&amp;gt;

&amp;lt;match hoge.log&amp;gt;
  @type elasticsearch
  host *****
  port 9200
  logstash_format true
  logstash_prefix aaaa
  type_name test_type
&amp;lt;/match&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ echo &#39;{&amp;quot;a&amp;quot;: &amp;quot;b&amp;quot;}&#39; | /opt/td-agent/embedded/bin/fluent-cat hoge.log
$ curl *****:9200/aaaa-2017.02.02/_search?pretty
{
  &amp;quot;took&amp;quot; : 1,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 5,
    &amp;quot;successful&amp;quot; : 5,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 1,
    &amp;quot;max_score&amp;quot; : 1.0,
    &amp;quot;hits&amp;quot; : [
      {
        &amp;quot;_index&amp;quot; : &amp;quot;aaaa-2017.02.02&amp;quot;,
        &amp;quot;_type&amp;quot; : &amp;quot;test_type&amp;quot;,
        &amp;quot;_id&amp;quot; : &amp;quot;AVn_FyQP7q9Gyu5HC4Mq&amp;quot;,
        &amp;quot;_score&amp;quot; : 1.0,
        &amp;quot;_source&amp;quot; : {
          &amp;quot;a&amp;quot; : &amp;quot;b&amp;quot;,
          &amp;quot;@timestamp&amp;quot; : &amp;quot;2017-02-02T22:49:33+09:00&amp;quot;
        }
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;forwardと同じく
&lt;a href=&#34;http://docs.fluentd.org/v0.12/articles/buffer-plugin-overview&#34;&gt;Buffered Output plugin&lt;/a&gt;を
&lt;a href=&#34;https://github.com/uken/fluent-plugin-elasticsearch#buffered-output-options&#34;&gt;継承しているので&lt;/a&gt;
buffer_typeのデフォルトはmemory。必要ならfileにする。いずれにせよスパイクなどでbuffer_queue_limitを超えないように余裕をもっておく。
また、buffer_chunk_limitがElasticsearchのhttp.max_content_length(デフォルト100mb)を超えないようにする。&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>ElasticsearchをDockerで動かしてGrafanaで可視化する</title>
          <link>http://sambaiz.net/article/52/</link>
          <pubDate>Sun, 29 Jan 2017 17:08:00 &#43;0900</pubDate>
          <author></author>
          <guid>http://sambaiz.net/article/52/</guid>
          <description>

&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;vm.max_map_count
(&lt;a href=&#34;http://www.atmarkit.co.jp/flinux/special/proctune/proctune02b.html&#34;&gt;バーチャルメモリにマッピングできる最大ページ数&lt;/a&gt;)
を262144以上にする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sysctl vm.max_map_count
$ grep vm.max_map_count /etc/sysctl.conf
vm.max_map_count=262144
# sysctl -w vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;30日トライアル後、有償ライセンスが必要になるxpackのsecurity(旧sheild)がデフォルトで有効になっているのでfalseにしている。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-cap-add=IPC_LOCK&lt;/code&gt;でLock memory(スワップアウトしないようにする)を
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#/runtime-privilege-and-linux-capabilities&#34;&gt;許可&lt;/a&gt;する。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/heap-size.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/heap-size.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ES_HEAP_SIZEでヒープ領域を設定する。デフォルトでは2GB。多いほどキャッシュに使用できる。
ただし、物理RAMの50%以下で、&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/guide/current/heap-sizing.html#compressed_oops&#34;&gt;32GB近辺の境界を超えないようにする&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p ~/do/elasticsearch/data
$ docker run -itd -v elasticsearch:/usr/share/elasticsearch/data \
--name elasticsearch \
-p 9200:9200 \
-e xpack.security.enabled=false \
-e bootstrap.memory_lock=true -e cluster.name=hogehoge-cluster -e ES_JAVA_OPTS=&amp;quot;-Xms28g -Xmx28g&amp;quot; \
--cap-add=IPC_LOCK --ulimit memlock=-1:-1 --ulimit nofile=65536:65536 \
--restart=always \
docker.elastic.co/elasticsearch/elasticsearch:5.1.2

$ docker volume ls
local               elasticsearch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;問題なく起動しているか確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl localhost:9200 | jq
{
  &amp;quot;name&amp;quot;: &amp;quot;eqIkJ48&amp;quot;,
  &amp;quot;cluster_name&amp;quot;: &amp;quot;docker-cluster&amp;quot;,
  &amp;quot;cluster_uuid&amp;quot;: &amp;quot;Lsu_C7wORS6G-0m9PJ9sFQ&amp;quot;,
  &amp;quot;version&amp;quot;: {
    &amp;quot;number&amp;quot;: &amp;quot;5.1.2&amp;quot;,
    &amp;quot;build_hash&amp;quot;: &amp;quot;c8c4c16&amp;quot;,
    &amp;quot;build_date&amp;quot;: &amp;quot;2017-01-11T20:18:39.146Z&amp;quot;,
    &amp;quot;build_snapshot&amp;quot;: false,
    &amp;quot;lucene_version&amp;quot;: &amp;quot;6.3.0&amp;quot;
  },
  &amp;quot;tagline&amp;quot;: &amp;quot;You Know, for Search&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic-mapping.html&#34;&gt;dynamic mapping&lt;/a&gt;
を無効にする場合&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPUT &#39;localhost:9200/_template/template_all?pretty&#39; -d&#39;
{
  &amp;quot;template&amp;quot;: &amp;quot;*&amp;quot;,
  &amp;quot;order&amp;quot;:0,
  &amp;quot;settings&amp;quot;: {
    &amp;quot;index.mapper.dynamic&amp;quot;: false 
  }
}
&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kuromojiを入れる場合&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker exec -it ***** bin/elasticsearch-plugin install analysis-kuromoji
$ docker restart  *****
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;grafanaで可視化する&#34;&gt;Grafanaで可視化する&lt;/h2&gt;

&lt;p&gt;前は&lt;a href=&#34;http://sambaiz.net/article/19/&#34;&gt;InfluxDBとつなげた&lt;/a&gt;が、Elasticsearchにも対応している。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p /var/lib/grafana/plugins
$ docker run -itd --restart=always -p 3000:3000 -v grafana:/var/lib/grafana grafana/grafana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.grafana.org/datasources/elasticsearch/&#34;&gt;http://docs.grafana.org/datasources/elasticsearch/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;admin/adminでログインして、data sourceを追加する。AccessはProxyにする。&lt;/p&gt;

&lt;p&gt;適当にデータを入れて表示してみる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -XPUT &#39;localhost:9200/test_index?pretty&#39; -H &#39;Content-Type: application/json&#39; -d&#39;
{
  &amp;quot;mappings&amp;quot;: {
    &amp;quot;test_type&amp;quot;: { 
      &amp;quot;_all&amp;quot;:       { &amp;quot;enabled&amp;quot;: false  }, 
      &amp;quot;properties&amp;quot;: { 
        &amp;quot;name&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; },
        &amp;quot;age&amp;quot;:    { &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;  },
        &amp;quot;timestamp&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;date&amp;quot;, &amp;quot;format&amp;quot;: &amp;quot;epoch_millis&amp;quot; }
      }
    }
  }
}
&#39;

$ curl &#39;localhost:9200/_cat/indices?format=json&amp;amp;pretty&#39;
[
  {
    &amp;quot;health&amp;quot; : &amp;quot;yellow&amp;quot;,
    &amp;quot;status&amp;quot; : &amp;quot;open&amp;quot;,
    &amp;quot;index&amp;quot; : &amp;quot;test_index&amp;quot;,
    &amp;quot;uuid&amp;quot; : &amp;quot;kVbt2V-rS2m6vhplIkMKNg&amp;quot;,
    &amp;quot;pri&amp;quot; : &amp;quot;5&amp;quot;,
    &amp;quot;rep&amp;quot; : &amp;quot;1&amp;quot;,
    &amp;quot;docs.count&amp;quot; : &amp;quot;0&amp;quot;,
    &amp;quot;docs.deleted&amp;quot; : &amp;quot;0&amp;quot;,
    &amp;quot;store.size&amp;quot; : &amp;quot;260b&amp;quot;,
    &amp;quot;pri.store.size&amp;quot; : &amp;quot;260b&amp;quot;
  },
  ...
]

$ curl -XPOST &#39;localhost:9200/test_index/test_type?pretty&#39; -H &#39;Content-Type: application/json&#39; -d&#39;
{
    &amp;quot;name&amp;quot;: &amp;quot;hoge fuga&amp;quot;,
    &amp;quot;age&amp;quot;: 24,
    &amp;quot;timestamp&amp;quot;: 1485676393044
}
&#39;

$ curl &#39;localhost:9200/test_index/test_type/_search?pretty&#39;
{
  &amp;quot;took&amp;quot; : 2,
  &amp;quot;timed_out&amp;quot; : false,
  &amp;quot;_shards&amp;quot; : {
    &amp;quot;total&amp;quot; : 5,
    &amp;quot;successful&amp;quot; : 5,
    &amp;quot;failed&amp;quot; : 0
  },
  &amp;quot;hits&amp;quot; : {
    &amp;quot;total&amp;quot; : 1,
    &amp;quot;max_score&amp;quot; : 1.0,
    &amp;quot;hits&amp;quot; : [
      {
        &amp;quot;_index&amp;quot; : &amp;quot;test_index&amp;quot;,
        &amp;quot;_type&amp;quot; : &amp;quot;test_type&amp;quot;,
        &amp;quot;_id&amp;quot; : &amp;quot;AVnpOGrseo3fDHi0SK-P&amp;quot;,
        &amp;quot;_score&amp;quot; : 1.0,
        &amp;quot;_source&amp;quot; : {
          &amp;quot;name&amp;quot; : &amp;quot;hoge fuga&amp;quot;,
          &amp;quot;age&amp;quot; : 24,
          &amp;quot;timestamp&amp;quot; : 1485676393044
        }
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;//sambaiz.net/images/52.png&#34; alt=&#34;表示してみた&#34; /&gt;&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
