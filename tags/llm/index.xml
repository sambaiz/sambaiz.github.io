<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Llm on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/llm/</link>
    <description>Recent content in Llm on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Wed, 30 Apr 2025 00:56:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/tags/llm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MCP で Todoist にタスクを登録する</title>
      <link>https://www.sambaiz.net/article/532/</link>
      <pubDate>Wed, 30 Apr 2025 00:56:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/532/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://modelcontextprotocol.io/introduction&#34;&gt;MCP (Model Context Protocol)&lt;/a&gt; は Function calling を&lt;a href=&#34;https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#session-management&#34;&gt;セッション&lt;/a&gt;や&lt;a href=&#34;https://modelcontextprotocol.io/specification/2025-03-26/basic/authorization&#34;&gt;認証&lt;/a&gt;、&lt;a href=&#34;https://modelcontextprotocol.io/docs/concepts/resources&#34;&gt;リソース&lt;/a&gt;の subscribe などを含めて標準化したプロトコル。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/488/&#34;&gt;Langchain の SQL Database Toolkits の AgentExecutor で自然言語からSQLを生成しデータベースにアクセスする - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-tsx&#34; data-lang=&#34;tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; server &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; Server({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  name&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;example-server&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  version&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  capabilities&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tools&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// Define available tools&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;server.setRequestHandler(ListToolsRequestSchema, &lt;span style=&#34;color:#ff79c6&#34;&gt;async&lt;/span&gt; () &lt;span style=&#34;color:#ff79c6&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tools&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; [{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      name&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;calculate_sum&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      description&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Add two numbers together&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      inputSchema&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        properties&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          a&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#ff79c6&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          b&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#ff79c6&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        required&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// Handle tool execution&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;server.setRequestHandler(CallToolRequestSchema, &lt;span style=&#34;color:#ff79c6&#34;&gt;async&lt;/span&gt; (request) &lt;span style=&#34;color:#ff79c6&#34;&gt;=&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (request.params.name &lt;span style=&#34;color:#ff79c6&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;calculate_sum&amp;#34;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; { a, b } &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; request.params.arguments;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      content&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#ff79c6&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          text: &lt;span style=&#34;color:#8be9fd&#34;&gt;String&lt;/span&gt;(a &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; b)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;Error&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Tool not found&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まだまだ対応しているサービスも少ないが、多くの非公式な MCP Server が有志によって開発されている。今回使うのも&lt;a href=&#34;https://github.com/abhiz123/todoist-mcp-server&#34;&gt;非公式のもの&lt;/a&gt;。&lt;a href=&#34;https://github.com/Doist/todoist-api-typescript&#34;&gt;公式の TypeScript クライアント&lt;/a&gt;を&lt;a href=&#34;https://github.com/abhiz123/todoist-mcp-server/blob/cc6dca796b99028b482f84d387511d57c6b4b475/src/index.ts#L235&#34;&gt;呼び出す&lt;/a&gt;薄いラッパーになっている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Agents for Bedrock で時間がかかったり重すぎたりする Actions を RETURN_CONTROL して Go クライアントでハンドリングする</title>
      <link>https://www.sambaiz.net/article/496/</link>
      <pubDate>Tue, 27 Aug 2024 20:06:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/496/</guid>
      <description>&lt;p&gt;Agents for Bedrock は Actions として Lambda 関数を登録して呼び出させることができる。ただ、その処理に時間がかる場合、Lambda のタイムアウトやリソース上限に当たったりすることが考えられる。また、重い処理を並列で実行したり、進行状況をユーザーに通知したりすることを考えると、Agent から呼び出すには都合が悪いことがある。それを解決するのが ReturnControls で Agent 側で Actions のハンドリングを行うのではなく、クライアントに呼び出すべき Action とその入力を返し、クライアントはその結果を Agent に渡すことができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>CDK で Agents for Bedrock を作成し入力に基づいて Lambda 関数が呼び出されることを確認する</title>
      <link>https://www.sambaiz.net/article/495/</link>
      <pubDate>Tue, 27 Aug 2024 09:39:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/495/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/bedrock/agents/&#34;&gt;Agents for Amazon Bedrock&lt;/a&gt; は Bedrock の各種基盤モデルを用いて、複数のステップからなる処理を行う生成AIのエージェントを構築する機能。必要に応じて Lambda を呼び出したり、OpenSearch Serverless などと接続して RAG を行ったりできる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Langchain の SQL Database Toolkits の AgentExecutor で自然言語からSQLを生成しデータベースにアクセスする</title>
      <link>https://www.sambaiz.net/article/488/</link>
      <pubDate>Sun, 26 May 2024 20:43:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/488/</guid>
      <description>&lt;p&gt;Langchain の &lt;a href=&#34;https://python.langchain.com/v0.1/docs/integrations/toolkits/sql_database/&#34;&gt;SQL Database Toolkits&lt;/a&gt; は SQL を生成しデータベースにアクセスする機能を提供する。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/community/langchain_community/agent_toolkits/sql/base.py#L44&#34;&gt;create_sql_agent()&lt;/a&gt; は &lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/community/langchain_community/agent_toolkits/sql/toolkit.py#L34&#34;&gt;SQLDatabaseToolkit.get_tools()&lt;/a&gt; の&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/community/langchain_community/tools/sql_database/tool.py#L50&#34;&gt;query_sql_database_tool&lt;/a&gt;: SQLを実行する&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/community/langchain_community/tools/sql_database/tool.py#L76&#34;&gt;info_sql_database_tool&lt;/a&gt;: テーブルのスキーマを取得する&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/community/langchain_community/tools/sql_database/tool.py#L98&#34;&gt;list_sql_database_tool&lt;/a&gt;: テーブル名の一覧を取得する&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/community/langchain_community/tools/sql_database/prompt.py#L14&#34;&gt;query_sql_checker_tool&lt;/a&gt;: SQLが誤っている場合は修正する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;を tools として追加し&lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/community/langchain_community/agent_toolkits/sql/prompt.py#L3&#34;&gt;プロンプト&lt;/a&gt;に埋めるなどした LLM の &lt;a href=&#34;https://github.com/langchain-ai/langchain/blob/v0.1.16/libs/langchain/langchain/agents/agent.py#L915&#34;&gt;AgentExecutor&lt;/a&gt; を返す。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LangChain のエコシステム LangGraph で cycle を含むグラフから LLM のエージェントを作る</title>
      <link>https://www.sambaiz.net/article/485/</link>
      <pubDate>Sun, 12 May 2024 21:38:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/485/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://python.langchain.com/v0.1/docs/langgraph/&#34;&gt;LangGraph&lt;/a&gt; は LangChain のエコシステムで、次のように StateGraph あるいは List[BaseMessage] をステートとする MessageGraph にノードを追加し add_edge() や add_conditional_edges() で繋げて compile() することで &lt;a href=&#34;https://python.langchain.com/v0.1/docs/expression_language/interface/&#34;&gt;Runnable&lt;/a&gt; を作る。&lt;a href=&#34;https://python.langchain.com/v0.1/docs/expression_language/&#34;&gt;LangChain Expression Language (LCEL)&lt;/a&gt; でも Runnable を繋げて DAG を作ることはできるが LangGraph だと cycle も表現できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAIのGPTを国会会議録の総理大臣の発言でファインチューニングする</title>
      <link>https://www.sambaiz.net/article/452/</link>
      <pubDate>Mon, 11 Sep 2023 23:22:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/452/</guid>
      <description>&lt;p&gt;OpenAI は GPT による&lt;a href=&#34;https://platform.openai.com/docs/api-reference/chat/create&#34;&gt;会話文の生成&lt;/a&gt;や&#xA;文章を&lt;a href=&#34;https://platform.openai.com/docs/api-reference/embeddings/create&#34;&gt;ベクトルに変換する&lt;/a&gt;ほかに&#xA;独自のデータセットによってモデルを&lt;a href=&#34;https://platform.openai.com/docs/guides/fine-tuning&#34;&gt;ファインチューニング&lt;/a&gt;する API を提供しており、&#xA;これを用いることで出力の質を上げたり few-shot learning の例示にかかるコストを節約したりすることができる。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
