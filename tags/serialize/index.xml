<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>serialize on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/serialize/</link>
    <description>Recent content in serialize on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Fri, 03 Dec 2021 20:00:00 +0900</lastBuildDate><atom:link href="https://www.sambaiz.net/tags/serialize/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>カラムナフォーマットParquetの構造とReadの最適化</title>
      <link>https://www.sambaiz.net/article/386/</link>
      <pubDate>Fri, 03 Dec 2021 20:00:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/386/</guid>
      <description>Parquetは主にHadoopのエコシステムで使われるカラムナフォーマット。 CSVのようなrow-basedのフォーマットと比べて、必要ないデータを読まずに済むため効率的にクエリを実行することができる。
構造 データはいくつかのRow Groupに水平分割される。カラムはいくつかのColumn Chunkに切られ、圧縮やエンコーディングされる単位であるPageに分けられる。
ファイルの構造は次のようになっていて、カラムごとに1つのColumn Chunkを持ついくつかのRow Groupとそのメタデータが順に並んでいる。
ネストしたスキーマにも対応していて、 子要素をフラットにした後、Repetiton LevelとDefinition Levelで繰り返しや階層を表している。
Readの最適化 ColumnMetadataにレコード数や最小最大値、圧縮コーデックやサイズが含まれているため、Readerは必要なものだけを展開して読むことができる。 したがって取得するカラムを絞ったり、フィルタに用いるカラムをソートしておくと読むPageを減らすことができる。
参考 What is Apache Parquet? - Databricks</description>
    </item>
    
    <item>
      <title>汎用シリアライズ方法(MessagePack/Protocol Buffers/FlatBuffers)</title>
      <link>https://www.sambaiz.net/article/46/</link>
      <pubDate>Fri, 30 Dec 2016 18:48:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/46/</guid>
      <description>MessagePackとは JSONのように使うことができ、速くてサイズが小さい。
{&amp;#34;compact&amp;#34;:true,&amp;#34;スキーマ&amp;#34;:{&amp;#34;number&amp;#34;: 999, &amp;#34;string&amp;#34;: &amp;#34;aaa&amp;#34;}} のjson(61bytes)をMessagePack(45bytes)に変換したのがこれ。見やすいように改行している。
82 a7 63 6f 6d 70 61 63 74 c3 ac e3 82 b9 e3 82 ad e3 83 bc e3 83 9e 82 a6 6e 75 6d 62 65 72 cd 03 e7 a6 73 74 72 69 6e 67 a3 61 61 61 一行目の82は要素数2のfixmap(要素数15まで)を表す。
二行目のa7が7バイトのfixstr(31bytesまで)で、 63 6f 6d 70 61 63 74が&amp;quot;compact&amp;quot;。c3はtrue。
三行目のacは12バイトのfixstrで、e3 82 b9 e3 82 ad e3 83 bc e3 83 9eが&amp;quot;スキーマ&amp;quot;。</description>
    </item>
    
  </channel>
</rss>
