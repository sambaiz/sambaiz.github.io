<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/ops/index.xml</link>
    <language>ja</language>
    <author>sambaiz</author>
    <rights>(C) 2018</rights>
    <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>SlackのInteractive messagesでボタンの入力を受け付ける</title>
          <link>https://www.sambaiz.net/article/148/</link>
          <pubDate>Tue, 16 Jan 2018 21:59:00 &#43;0900</pubDate>
          <author></author>
          <guid>https://www.sambaiz.net/article/148/</guid>
          <description>

&lt;p&gt;&lt;a href=&#34;https://api.slack.com/interactive-messages&#34;&gt;Interactive messages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.sambaiz.net/images/148.gif&#34; alt=&#34;ボタンを押す&#34; /&gt;&lt;/p&gt;

&lt;p&gt;まずはサーバーを用意する。コードは&lt;a href=&#34;https://github.com/sambaiz/node-slack-interactive-messages-sample&#34;&gt;ここ&lt;/a&gt;にあって、
Interactive messagesのハンドリングはSlack公式の&lt;a href=&#34;https://github.com/slackapi/node-slack-interactive-messages&#34;&gt;node-slack-interactive-messages&lt;/a&gt;を使っている。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app.use(&#39;/slack&#39;, slackMessages.expressMiddleware());

slackMessages.action(&#39;question_button&#39;, (payload) =&amp;gt; {
  let replacement = payload.original_message;
  replacement.text =`${payload.user.name} likes ${payload.actions[0].value}`;
  delete replacement.attachments[0].actions;
  return replacement;
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ボタンの表示はattachmentsを使う。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;web.chat.postMessage(channelId, &#39;Question&#39;, {
  attachments: [
    {
      text: &amp;quot;Which buttons do you like?&amp;quot;,
      color: &amp;quot;#f9a41b&amp;quot;,
      callback_id: &amp;quot;question_button&amp;quot;,
      actions: [
        {
          name: &amp;quot;primary_button&amp;quot;,
          type: &amp;quot;button&amp;quot;,
          style: &amp;quot;primary&amp;quot;,
          text: &amp;quot;Primary&amp;quot;,
          value: &amp;quot;Primary Button&amp;quot;,
        },
        {
          name: &amp;quot;normal_button&amp;quot;,
          type: &amp;quot;button&amp;quot;,
          text: &amp;quot;Normal&amp;quot;,
          value: &amp;quot;Normal Button&amp;quot;
        },
        {
          name: &amp;quot;danger_button&amp;quot;,
          type: &amp;quot;button&amp;quot;,
          style: &amp;quot;danger&amp;quot;,
          text: &amp;quot;Danger&amp;quot;,
          value: &amp;quot;Danger Button&amp;quot;,
          confirm: {
            title: &amp;quot;Really?&amp;quot;,
            text: &amp;quot;This is danger&amp;quot;,
            ok_text: &amp;quot;Yes&amp;quot;,
            dismiss_text: &amp;quot;No&amp;quot;
          }
        },
      ]
    }
  ]
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;外に公開する必要があるので、メッセージの送信のエンドポイントはBasic認証をかけてみた。
Interactive messagesのエンドポイントはVerification tokenが一致することを確認している。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app.use(bodyParser.urlencoded({ extended: false }));
app.all(&#39;/auth/*&#39;, (req, res, next) =&amp;gt; {
  const credentials = auth(req);
  if (!credentials || !check(credentials.name, credentials.pass)) {
    res.status(401).send(&#39;Unauthorized&#39;);
  } else {
    next();
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ curl https://*****.ngrok.com/auth/message -H &amp;quot;Authorization: Basic $(echo -n &#39;foobar:dolphins&#39; | base64)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://api.slack.com/apps&#34;&gt;Build&lt;/a&gt;からWorkspaceを選択してAppを作成し、
Appに紐づくBot Userを設定し、Install Appすると&lt;code&gt;Bot User OAuth Access Token&lt;/code&gt;、
が表示されるので、これで&lt;a href=&#34;https://api.slack.com/methods/chat.postMessage&#34;&gt;postMessage&lt;/a&gt;し、Basic InformationのApp Credentialsにある&lt;code&gt;Verification Token&lt;/code&gt;をInteractive messagesのチェックに使う。&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://tech.mercari.com/entry/2017/05/23/095500&#34;&gt;GolangでSlack Interactive Messageを使ったBotを書く - Mercari Engineering Blog&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
