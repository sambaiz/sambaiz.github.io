<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/python/</link>
    <description>Recent content in Python on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Thu, 13 Mar 2025 22:14:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python の動画加工ライブラリ MoviePy で文字や音声を被せる</title>
      <link>https://www.sambaiz.net/article/529/</link>
      <pubDate>Thu, 13 Mar 2025 22:14:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/529/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy/&#34;&gt;MoviePy&lt;/a&gt; は切り取りや結合、エフェクトをかけたりといった動画の加工を行うためのライブラリ。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install moviepy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;VideoFileClip で動画を読み込み、&lt;a href=&#34;https://zulko.github.io/moviepy/reference/reference/moviepy.video.compositing.CompositeVideoClip.html#module-moviepy.video.compositing.CompositeVideoClip&#34;&gt;CompositeVideoClip&lt;/a&gt; で &lt;a href=&#34;https://zulko.github.io/moviepy/user_guide/loading.html#textclip&#34;&gt;TextClip&lt;/a&gt; など別の Clip を重ねる。次の例は 動画の開始 5 秒後から 3 秒間、左から 40%、上から 70% の位置に文字を表示させる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>EMR Studio の Jupyter Notebook から EMR Serverless で Spark の MLlib を動かす</title>
      <link>https://www.sambaiz.net/article/527/</link>
      <pubDate>Tue, 11 Feb 2025 14:52:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/527/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-studio.html&#34;&gt;EMR Studio&lt;/a&gt; はEMR クラスタで実行される Jupyter Notebook ベースの IDE。クラスタや S3 の料金はかかるがこれ自体は無料。&lt;a href=&#34;https://aws.amazon.com/emr/serverless&#34;&gt;EMR Serverless&lt;/a&gt; で動かすことで常時クラスタを立てておくことなく手軽に使うことができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Streamlit でウィジェットの値を元にデータを描画するアプリケーションを作って公開する</title>
      <link>https://www.sambaiz.net/article/521/</link>
      <pubDate>Sat, 18 Jan 2025 14:25:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/521/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://streamlit.io/&#34;&gt;Streamlit&lt;/a&gt; は Python でデータアプリケーションを開発するためのツール。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install streamlit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ streamlit --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Streamlit, version 1.41.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;button や slider、radio といった &lt;a href=&#34;https://docs.streamlit.io/develop/api-reference/widgets&#34;&gt;widgets&lt;/a&gt; で入力した値をもとに Dataframe を作って write() や line_chart() で描画できる。widgets の値を変更するたびに&lt;a href=&#34;https://docs.streamlit.io/get-started/fundamentals/main-concepts#data-flow&#34;&gt;更新が走る&lt;/a&gt;ので、必要に応じて session_state に値を保持したり重い処理の結果を&lt;a href=&#34;https://docs.streamlit.io/develop/concepts/architecture/caching&#34;&gt;キャッシュ&lt;/a&gt;したりする。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LivyのREST APIを呼んでSparkジョブを実行する</title>
      <link>https://www.sambaiz.net/article/489/</link>
      <pubDate>Wed, 29 May 2024 23:27:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/489/</guid>
      <description>&lt;p&gt;Livy の &lt;a href=&#34;https://livy.apache.org/docs/latest/rest-api.html&#34;&gt;REST API&lt;/a&gt; を呼んで Spark ジョブを実行してみる。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/486/&#34;&gt;Livy を EMR on EKS にインストールしSparkmagic でローカルの Jupyter Notebook から Spark のジョブを実行する - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;まず &lt;a href=&#34;https://livy.apache.org/docs/latest/rest-api.html#session&#34;&gt;Session&lt;/a&gt; を作成し idle 状態になるまで待つ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python の cProfile や line_profile でプロファイルを取って遅いコードを改善する</title>
      <link>https://www.sambaiz.net/article/463/</link>
      <pubDate>Wed, 03 Jan 2024 23:15:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/463/</guid>
      <description>&lt;p&gt;Python でヒープソートを実装したのだが、ビルトインの heapq を用いたものと比べて遥かに遅い。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/436/&#34;&gt;Python の組み込みコンテナ、collections.deque と heapq - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python-fireでコマンドライン引数が関数やメソッドに渡るようにする</title>
      <link>https://www.sambaiz.net/article/454/</link>
      <pubDate>Tue, 26 Sep 2023 09:22:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/454/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/google/python-fire&#34;&gt;python-fire&lt;/a&gt; は&#xA;Python のオブジェクトから CLI を作れるライブラリ。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install fire&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次のように fire.Fire() でラップするだけでコマンドライン引数を関数やメソッドに渡すことができる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; fire&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;FizzBuzz&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;fizzbuzz&lt;/span&gt;(&lt;span style=&#34;font-style:italic&#34;&gt;self&lt;/span&gt;, num):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ret &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; num &lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ret &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;fizz&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; num &lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ret &lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;buzz&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;len&lt;/span&gt;(ret) &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; ret&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;str&lt;/span&gt;(num)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;fizzbuzzs&lt;/span&gt;(&lt;span style=&#34;font-style:italic&#34;&gt;self&lt;/span&gt;, nums):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; [&lt;span style=&#34;font-style:italic&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;fizzbuzz(num) &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; num &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; nums]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;__name__&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  fire&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Fire(FizzBuzz)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python main&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;py fizzbuzzs &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;nums&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;[2,21,30]&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fizz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fizzbuzz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;引数は ast.literal_eval() で文字列や数値、list などに&lt;a href=&#34;https://github.com/google/python-fire/blob/master/fire/parser.py#L114&#34;&gt;評価される&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAIのGPTを国会会議録の総理大臣の発言でファインチューニングする</title>
      <link>https://www.sambaiz.net/article/452/</link>
      <pubDate>Mon, 11 Sep 2023 23:22:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/452/</guid>
      <description>&lt;p&gt;OpenAI は GPT による&lt;a href=&#34;https://platform.openai.com/docs/api-reference/chat/create&#34;&gt;会話文の生成&lt;/a&gt;や&#xA;文章を&lt;a href=&#34;https://platform.openai.com/docs/api-reference/embeddings/create&#34;&gt;ベクトルに変換する&lt;/a&gt;ほかに&#xA;独自のデータセットによってモデルを&lt;a href=&#34;https://platform.openai.com/docs/guides/fine-tuning&#34;&gt;ファインチューニング&lt;/a&gt;する API を提供しており、&#xA;これを用いることで出力の質を上げたり few-shot learning の例示にかかるコストを節約したりすることができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SageMaker Inference Recommender でコスト最適なインスタンスタイプの推論エンドポイントを立てる</title>
      <link>https://www.sambaiz.net/article/447/</link>
      <pubDate>Thu, 15 Jun 2023 09:38:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/447/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/sagemaker/latest/dg/inference-recommender.html&#34;&gt;SageMaker Inference Recommender&lt;/a&gt; は、&#xA;推論エンドポイントのインスタンスタイプや設定の候補を挙げてくれる機能。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/290/&#34;&gt;SageMakerで学習したPyTorchのモデルをElastic Inferenceを有効にしてデプロイする - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;以前作成した MNIST の PyTorch モデルに対して Inference Recommender の Job を実行し、最もコストが低いインスタンスタイプで推論エンドポイントを立ててみる。&#xA;全体のコードは &lt;a href=&#34;https://github.com/sambaiz/sagemaker-inference-recommendation-test&#34;&gt;GitHub&lt;/a&gt; にある。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spark の MLlib で k-means法によるクラスタリングを行う</title>
      <link>https://www.sambaiz.net/article/446/</link>
      <pubDate>Sun, 09 Apr 2023 17:08:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/446/</guid>
      <description>&lt;p&gt;Spark には &lt;a href=&#34;https://spark.apache.org/docs/latest/ml-guide.html&#34;&gt;MLlib&lt;/a&gt; という機械学習のライブラリがあり、&#xA;今回はその中の &lt;a href=&#34;https://spark.apache.org/docs/latest/ml-clustering.html#k-means&#34;&gt;Kmeans&lt;/a&gt; によるクラスタリングを行う。&#xA;k-means法は各データのクラスタを事前に決めた数からランダムに決めて、クラスタごとに中心を取ってから、各データのクラスタを最も近い中心のクラスタに変更する、というのを収束するまで繰り返すという手法。&#xA;Kmeans には収束が早い k-means++法が実装されており、distanceMeasure はデフォルトで euclidean となっている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>相関比でカテゴリ変数と目的変数の相関の強さを表す</title>
      <link>https://www.sambaiz.net/article/441/</link>
      <pubDate>Thu, 09 Mar 2023 23:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/441/</guid>
      <description>&lt;p&gt;単に相関係数というと共分散 \(\mathrm{Cov}(x,y) = E[(x - \bar{x})(y - \bar{y})]\) と標準偏差 \(\sigma_x = \sqrt{E[(x-\bar{x})^2]}\) で表されるピアソンの積率相関係数のことを指すことが多い。&lt;/p&gt;&#xA;&lt;p&gt;$$ \rho_{xy} = \frac{\mathrm{Cov}(x,y)}{\sigma_x \sigma_y} $$&lt;/p&gt;&#xA;&lt;p&gt;ただ、この係数は量的変数同士の線形な相関を表すものなので質的変数であるカテゴリ変数に対しては用いることができない。&#xA;質的変数と量的変数の相関は、全変動 \(\Sigma(x-\bar{x})^2\) に対する級間変動 (= 全変動 - 級内変動) の割合である相関比で表すことができる。&#xA;0から1までの値を取り1に近いほど相関が強いと言える。例えば全カテゴリの平均値が等しい場合0となり相関がないということになる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Athena for Apache Spark の Notebook で DataFrame.toPandas().plot() した際の日本語が文字化けしないようにする</title>
      <link>https://www.sambaiz.net/article/438/</link>
      <pubDate>Mon, 06 Feb 2023 23:58:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/438/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/athena/latest/ug/notebooks-spark.html&#34;&gt;Athena for Apache Spark&lt;/a&gt; は re:Invent 2022 で発表された マネージドでサーバーレスな Jupyter Notebook からインタラクティブに Spark による分析が行える機能。&#xA;Athena は アドホックに SQL を実行して分析できる手軽さと、サーバーレスによって使ってない時間帯は料金がかからない利点があったが、&#xA;重いクエリを実行すると scale factor やタイムアウトによって失敗することがあったので今回 Spark が動かせるようになり用途の幅の広がりを感じる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python の組み込みコンテナ、collections.deque と heapq</title>
      <link>https://www.sambaiz.net/article/436/</link>
      <pubDate>Mon, 09 Jan 2023 16:32:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/436/</guid>
      <description>&lt;p&gt;(C)Python には list, tuple, dict, set が組み込まれており、&lt;a href=&#34;https://docs.python.org/3/library/collections.html&#34;&gt;collections&lt;/a&gt; モジュールで deque が、heapq モジュールで優先度付きキューが実装されている。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python3 &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Python &lt;span style=&#34;color:#bd93f9&#34;&gt;3.10&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;list&#34;&gt;&lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#list&#34;&gt;list&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;連結リストではなく可変長配列で&lt;a href=&#34;https://docs.python.org/3/faq/design.html#how-are-lists-implemented-in-cpython&#34;&gt;実装されている&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sparkでstructをmapとして扱いexplodeで複数行に展開できるようにする</title>
      <link>https://www.sambaiz.net/article/384/</link>
      <pubDate>Wed, 13 Oct 2021 02:30:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/384/</guid>
      <description>&lt;p&gt;Sparkでschemaを指定せずjsonなどを&lt;a href=&#34;https://spark.apache.org/docs/3.1.1/api/python/reference/api/pyspark.sql.DataFrameReader.json.html&#34;&gt;読み込むと&lt;/a&gt;次のように入力データから自動で決定される。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/415/&#34;&gt;Athena v2でparquetをソースとしmapフィールドを持つテーブルのクエリが成功したり失敗したりする原因 - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS GlueのJobのBookmarkを有効にして前回の続きから処理を行う</title>
      <link>https://www.sambaiz.net/article/333/</link>
      <pubDate>Fri, 16 Apr 2021 20:00:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/333/</guid>
      <description>&lt;p&gt;GlueのJobの&lt;a href=&#34;https://docs.aws.amazon.com/ja_jp/glue/latest/dg/monitor-continuations.html&#34;&gt;Bookmark&lt;/a&gt;は&#xA;どこまで処理したかを記録し、次回はその続きから実行できるようにする機能。&#xA;1.0以前は対応していなかったParquetやORCも今は対応している。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PythonのProtocolによるstructural subtypingでインタフェースを記述する</title>
      <link>https://www.sambaiz.net/article/325/</link>
      <pubDate>Fri, 12 Feb 2021 02:53:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/325/</guid>
      <description>&lt;p&gt;interfaceが文法に存在しないPythonで関数が呼べることを保証する方法の一つに&#xA;組み込み関数&lt;a href=&#34;https://docs.python.org/ja/3/library/functions.html#hasattr&#34;&gt;hasattr()&lt;/a&gt;によるチェックがあるが、&#xA;都度処理を挟む必要があるのと、実行してみないと分からない問題があった。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pythonのmoduleとpackage</title>
      <link>https://www.sambaiz.net/article/323/</link>
      <pubDate>Sat, 23 Jan 2021 19:03:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/323/</guid>
      <description>&lt;p&gt;Python ではファイルがそのまま module となる。&#xA;module をコンパイルした pyc ファイルは &lt;strong&gt;py_cache&lt;/strong&gt; にキャッシュされ、ソースの変更日時を見て再利用される。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/ja/3/tutorial/modules.html&#34;&gt;6. モジュール — Python 3.9.1 ドキュメント&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCodeのDocker開発コンテナでJupyter Notebookを開いてAthenaのクエリを実行し可視化する</title>
      <link>https://www.sambaiz.net/article/294/</link>
      <pubDate>Fri, 04 Sep 2020 19:34:04 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/294/</guid>
      <description>&lt;p&gt;ローカルでJupyter Notebookを動かすために以前は&lt;a href=&#34;https://hub.docker.com/r/jupyter/datascience-notebook/&#34;&gt;jupyter/datascience-notebook&lt;/a&gt;のイメージを立ち上げていた。&#xA;Notebookはエディタとしての機能に乏しいため通常のコードを書くのが大変だったのだが、&#xA;VSCodeのPython extensionにはJupyter notebookサポートが入っていてそのまま開けて実行できるのを知ったので移行することにした。&#xA;今回はVSCodeのDocker開発コンテナからNotebookを開いてAthenaのクエリを実行し可視化する。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SageMakerでTensorFlowのモデルを学習させる</title>
      <link>https://www.sambaiz.net/article/293/</link>
      <pubDate>Mon, 10 Aug 2020 13:39:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/293/</guid>
      <description>&lt;p&gt;以前PyTorchのモデルを学習させたが、そのTensorFlow版。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/287/&#34;&gt;SageMakerでPyTorchのモデルを学習させる - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;コード&#34;&gt;コード&lt;/h2&gt;&#xA;&lt;p&gt;全体のコードは&lt;a href=&#34;https://github.com/sambaiz/sagemaker-tensorflow-titanic&#34;&gt;GitHub&lt;/a&gt;にある。&lt;/p&gt;&#xA;&lt;h3 id=&#34;モデル&#34;&gt;モデル&lt;/h3&gt;&#xA;&lt;p&gt;モデルはTitanicのを使う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/291/&#34;&gt;TensorFlow2のKeras APIでTitanicのモデルを作る - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlow2のKeras APIでTitanicのモデルを作る</title>
      <link>https://www.sambaiz.net/article/291/</link>
      <pubDate>Sat, 08 Aug 2020 18:32:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/291/</guid>
      <description>&lt;h2 id=&#34;データセット&#34;&gt;データセット&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;TensorFlow Datasets&lt;/a&gt;の&#xA;&lt;a href=&#34;https://www.tensorflow.org/datasets/catalog/titanic&#34;&gt;Titanic&lt;/a&gt;を使う。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install tensorflow-datasets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/datasets/api_docs/python/tfds/load&#34;&gt;tfds.load()&lt;/a&gt;して&#xA;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/data/Dataset&#34;&gt;tf.data.Dataset&lt;/a&gt;を作る。&#xA;&lt;code&gt;tf.data&lt;/code&gt; はCPUやGPUがなるべくアイドル状態にならないようにする効率的な入力パイプラインを構築するAPI。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/195/&#34;&gt;TensorFlowのtf.data API - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SageMakerで学習したPyTorchのモデルをElastic Inferenceを有効にしてデプロイする</title>
      <link>https://www.sambaiz.net/article/290/</link>
      <pubDate>Sun, 26 Jul 2020 02:43:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/290/</guid>
      <description>&lt;p&gt;学習させたモデルをSageMakerのホスティングサービスにデプロイする。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/287/&#34;&gt;SageMakerでPyTorchのモデルを学習させる - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;推論時に呼ばれる関数&#34;&gt;推論時に呼ばれる関数&lt;/h2&gt;&#xA;&lt;p&gt;推論時には次の関数が&lt;a href=&#34;https://sagemaker.readthedocs.io/en/stable/frameworks/pytorch/using_pytorch.html#serve-a-pytorch-model&#34;&gt;呼ばれる&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;model_fn(model_dir): モデルをロードする&lt;/li&gt;&#xA;&lt;li&gt;input_fn(request_body, request_content_type): リクエストボディのデシリアライズ&lt;/li&gt;&#xA;&lt;li&gt;predict_fn(input_data, model): モデルで推論する&lt;/li&gt;&#xA;&lt;li&gt;output_fn(prediction, content_type): Content-Typeに応じたシリアライズ&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;input_fn()&lt;/code&gt; と &lt;code&gt;output_fn()&lt;/code&gt; はJSON, CSV, NPYに対応した実装が、&lt;code&gt;predict_fn()&lt;/code&gt; はモデルを呼び出す実装が&lt;a href=&#34;https://github.com/aws/sagemaker-pytorch-inference-toolkit/blob/4894d509f60ecd43d34356c9c571b9fb9e8b97ad/src/sagemaker_pytorch_serving_container/default_pytorch_inference_handler.py&#34;&gt;デフォルト&lt;/a&gt;として用意されていて、&#xA;&lt;code&gt;model_fn()&lt;/code&gt; も後述するElastic Inferenceを使う場合&lt;code&gt;model.pt&lt;/code&gt;というファイルをロードするデフォルト実装が使われる。&#xA;ただしその場合モデルが&lt;code&gt;torch.jit.save()&lt;/code&gt;で&lt;a href=&#34;https://pytorch.org/docs/stable/jit.html&#34;&gt;TorchScript&lt;/a&gt;として保存してある&lt;a href=&#34;https://sagemaker.readthedocs.io/en/stable/frameworks/pytorch/using_pytorch.html#save-the-model&#34;&gt;必要がある&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SageMakerでPyTorchのモデルを学習させる</title>
      <link>https://www.sambaiz.net/article/287/</link>
      <pubDate>Fri, 24 Jul 2020 22:59:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/287/</guid>
      <description>&lt;p&gt;AWSの機械学習サービス&lt;a href=&#34;https://aws.amazon.com/jp/sagemaker/&#34;&gt;SageMaker&lt;/a&gt;でPyTorchのモデルを学習させる。&lt;/p&gt;&#xA;&lt;h2 id=&#34;コード&#34;&gt;コード&lt;/h2&gt;&#xA;&lt;p&gt;まず学習させるモデルとそれを呼び出すエントリーポイントになるコードを書く。全体のコードは&lt;a href=&#34;https://github.com/sambaiz/sagemaker-pytorch-mnist&#34;&gt;GitHub&lt;/a&gt;にある。&#xA;実際の環境と同じSageMakerのコンテナをローカルで動かしてVSCodeのRemote Developmentで接続して開発すると入っていないパッケージは警告が出たりして良い。&lt;/p&gt;</description>
    </item>
    <item>
      <title>VSCodeのRemote DevelopmentでSageMakerのコンテナ環境でモデルを開発する</title>
      <link>https://www.sambaiz.net/article/289/</link>
      <pubDate>Sun, 19 Jul 2020 19:34:04 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/289/</guid>
      <description>&lt;p&gt;SageMakerで学習させるモデルを開発するにあたって、Notebooks上ではコードを書きづらいのでVS Codeで書いているのだが、ローカルに依存パッケージをインストールして実行しているため&#xA;エディタ上では警告が出ていなくても、実際の環境にはパッケージがなかったりすることがある。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PoetryでPythonの依存パッケージを管理する</title>
      <link>https://www.sambaiz.net/article/288/</link>
      <pubDate>Sat, 18 Jul 2020 21:23:04 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/288/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/python-poetry/poetry&#34;&gt;Poetry&lt;/a&gt;は比較的新しいPythonの依存管理ツールで、&#xA;&lt;a href=&#34;https://github.com/pypa/pipenv&#34;&gt;pipenv&lt;/a&gt;の&lt;a href=&#34;https://github.com/python-poetry/poetry#what-about-pipenv&#34;&gt;依存解決に失敗することがある&lt;/a&gt;問題を解消したり、ライブラリを開発しやすくしたものらしい。&#xA;まだスターはpipenvの半分ほどだがバージョンもv1.0.0に到達したしpipenvよりも速くて安定しているという話もあるので使ってみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pythonで時系列データを検定(Shapiro-Wilk test, runs test, Ljung-Box test)する</title>
      <link>https://www.sambaiz.net/article/273/</link>
      <pubDate>Sun, 21 Jun 2020 01:20:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/273/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/271/&#34;&gt;統計的仮説検定 - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;テストデータ&#34;&gt;テストデータ&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.chicagobooth.edu/research/kilts/datasets/dominicks&#34;&gt;Dominick&amp;rsquo;s dataset&lt;/a&gt;のビールの週売上データを使う。&#xA;UPC(Universal Product Code)に対応する商品データと、店(STORE)で週(WEEK)に売れた数(MOVE)と価格(PRICE)、収益(PROFIT)を含むMovementデータがCSVで提供されている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>カテゴリカル変数を変換するsklearnのLabel/OneHotEncoderとpandasのget_dummies</title>
      <link>https://www.sambaiz.net/article/220/</link>
      <pubDate>Mon, 06 May 2019 15:59:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/220/</guid>
      <description>&lt;p&gt;次のデータを用いる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;tokyo&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;berlin&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;paris&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;amsterdam&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;paris&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;amsterdam&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;berlin&amp;#34;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;partial_data &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; data[:&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;preprocessinglabelencoder&#34;&gt;&lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html&#34;&gt;preprocessing.LabelEncoder&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;カテゴリカル変数を数値のラベルに変換する。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; sklearn &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; preprocessing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;le &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; preprocessing&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;LabelEncoder()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;le&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;fit(data)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;encoded &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; le&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;transform(partial_data)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(encoded) &lt;span style=&#34;color:#6272a4&#34;&gt;# [3 1 2 0]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(le&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;inverse_transform(encoded)) &lt;span style=&#34;color:#6272a4&#34;&gt;# [&amp;#39;tokyo&amp;#39; &amp;#39;berlin&amp;#39; &amp;#39;paris&amp;#39; &amp;#39;amsterdam&amp;#39;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;preprocessingonehotencoder&#34;&gt;&lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html&#34;&gt;preprocessing.OneHotEncoder&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;p&gt;One-hot vectorに変換する。デフォルトだとカテゴリーと同じ数の次元に変換されるので変数同士に相関がある多重共線性が生まれてしまうが、&lt;code&gt;drop=&#39;first&#39;&lt;/code&gt;で最初の次元を消すことで回避できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Box-Cox transformationで非正規分布のデータを正規分布に近づける</title>
      <link>https://www.sambaiz.net/article/218/</link>
      <pubDate>Tue, 30 Apr 2019 17:35:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/218/</guid>
      <description>&lt;p&gt;Box-Cox Transormationは次の式による変換。λ=0のときはlog(x)。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://www.sambaiz.net/images/218-1.png&#34; alt=&#34;式&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;λが1より大きい場合は小さな値の間隔が圧縮され、小さい場合は大きな値の間隔が圧縮されるように変換される。&lt;/p&gt;</description>
    </item>
    <item>
      <title>KaggleのHouse Prices CompetitionのKernelからデータの探り方を学ぶ</title>
      <link>https://www.sambaiz.net/article/216/</link>
      <pubDate>Mon, 08 Apr 2019 21:01:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/216/</guid>
      <description>&lt;p&gt;Kaggleの家の売値を予測するCompetitionのKernelからデータの探り方を学ぶ。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python&#34;&gt;Comprehensive data exploration with Python&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;正規化&#34;&gt;正規化&lt;/h2&gt;&#xA;&lt;p&gt;予測する値であるSalePriceの分布を出すと、やや左に寄った非対称の分布をしている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>HI-VAE(Heterogeneous-Incomple VAE)の論文を読んで処理を追う</title>
      <link>https://www.sambaiz.net/article/214/</link>
      <pubDate>Fri, 22 Mar 2019 20:22:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/214/</guid>
      <description>&lt;p&gt;HI-VAE(Heterogeneous-Incomple VAE)は現実のデータセットにありがちな連続値と離散値が混ざっていたり欠損値を含んでいるものを扱えるようにしたVAE。&lt;/p&gt;&#xA;&lt;p&gt;論文: &lt;a href=&#34;https://arxiv.org/abs/1807.03653&#34;&gt;Alfredo Nazabal, Pablo M. Olmos, Zoubin Ghahramani, Isabel Valera (2018) Handling Incomplete Heterogeneous Data using VAEs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>VAEでエンコードしたMNISTの潜在空間をt-SNEで可視化する</title>
      <link>https://www.sambaiz.net/article/213/</link>
      <pubDate>Sun, 10 Mar 2019 19:03:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/213/</guid>
      <description>&lt;p&gt;t-SNEは多次元のデータを2,3次元上にマッピングして可視化できるようにする手法の一つで、&#xA;Stochastic Neighbor Embedding(SNE, 確率的近傍埋め込み)という手法をベースに、t分布を用いるなどして改良したもの。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyTorchでVAEのモデルを実装してMNISTの画像を生成する</title>
      <link>https://www.sambaiz.net/article/212/</link>
      <pubDate>Thu, 07 Mar 2019 19:35:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/212/</guid>
      <description>&lt;p&gt;PyTorchでVAEを実装しMNISTの画像を生成する。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/201/&#34;&gt;生成モデルVAE(Variational Autoencoder) - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;学習データ&#34;&gt;学習データ&lt;/h2&gt;&#xA;&lt;p&gt;datasetsのMNIST画像を使う。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; torchvision &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; datasets, transforms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;transform &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; transforms&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Compose([&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    transforms&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;ToTensor(), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    transforms&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Lambda(&lt;span style=&#34;color:#ff79c6&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;view(&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;))])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataset_train &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; datasets&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;MNIST(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;~/mnist&amp;#39;&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    train&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    download&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    transform&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;transform)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataset_valid &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; datasets&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;MNIST(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;~/mnist&amp;#39;&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    train&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;False&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    download&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;, &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    transform&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;transform)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataloader_train &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;data&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataLoader(dataset_train,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          batch_size&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1000&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          shuffle&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          num_workers&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dataloader_valid &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;data&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataLoader(dataset_valid,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          batch_size&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1000&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          shuffle&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                          num_workers&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;vae&#34;&gt;VAE&lt;/h2&gt;&#xA;&lt;p&gt;それぞれ3層のEncoderとDecoder。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SageMaker NotebookでGitリポジトリにSSHでpush/pullできるようにする</title>
      <link>https://www.sambaiz.net/article/211/</link>
      <pubDate>Mon, 04 Mar 2019 22:00:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/211/</guid>
      <description>&lt;p&gt;Sagemaker NotebookはAWSの機械学習のワークフローを提供する&lt;a href=&#34;https://aws.amazon.com/jp/sagemaker/&#34;&gt;SageMaker&lt;/a&gt;の一部である&#xA;マネージドなJupyter Notebooksで、可視化などはもちろん、ここから複数インタンスでの学習ジョブを実行したりすることができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyTorchでMNISTする</title>
      <link>https://www.sambaiz.net/article/205/</link>
      <pubDate>Sat, 19 Jan 2019 23:35:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/205/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt;はFacebookによるOSSの機械学習フレームワーク。&#xA;TensorFlow(v1)よりも簡単に使うことができる。&#xA;TensorFlow 2.0ではPyTorchのようにDefine-by-runなeager executionがデフォルトになるのに加え、パッケージも整理されるようなのでいくらか近くなると思われる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS GlueでCSVを加工しParquetに変換してパーティションを切りAthenaで参照する</title>
      <link>https://www.sambaiz.net/article/203/</link>
      <pubDate>Tue, 01 Jan 2019 17:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/203/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/jp/glue/&#34;&gt;AWS Glue&lt;/a&gt;はマネージドなETL(Extract/Transform/Load)サービスで、&lt;a href=&#34;https://spark.apache.org/&#34;&gt;Spark&lt;/a&gt;を使ってS3などにあるデータを読み込み加工して変換出力したり、AthenaやRedshift Spectrumで参照できるデータカタログを提供する。&#xA;今回はS3のCSVを読み込んで加工し、列指向フォーマットParquetに変換しパーティションを切って出力、その後クローラを回してデータカタログにテーブルを作成してAthenaで参照できることを確認する。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PythonのType Hintsとmypy</title>
      <link>https://www.sambaiz.net/article/188/</link>
      <pubDate>Sun, 30 Sep 2018 14:13:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/188/</guid>
      <description>&lt;p&gt;動的型付け言語であるPythonで型アノテーションを書けるようにするための構文。&#xA;&lt;a href=&#34;https://www.python.org/dev/peps/pep-0484/&#34;&gt;PEP 484&lt;/a&gt;で提案され、Python 3.5で実装された。&#xA;実行には影響せず、&lt;a href=&#34;https://github.com/python/mypy&#34;&gt;mypy&lt;/a&gt;のようなツールで静的解析したりするために使われる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>numpyの関数</title>
      <link>https://www.sambaiz.net/article/187/</link>
      <pubDate>Sun, 23 Sep 2018 23:03:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/187/</guid>
      <description>&lt;h2 id=&#34;ndarrayの生成&#34;&gt;ndarrayの生成&lt;/h2&gt;&#xA;&lt;p&gt;ndarrayはnumpyの多次元の配列を表すオブジェクトで、[start:stop:step, &amp;hellip;]の&#xA;&lt;a href=&#34;https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html&#34;&gt;index&lt;/a&gt;でアクセスできる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;], [&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(x[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# 2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(x[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# [2 3]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(x[:,&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# [3 6]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(x[:,::&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# [[1 3] [2 6]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(x[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,::&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# [8 6 4 2]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html&#34;&gt;array()&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fromiter.html&#34;&gt;fromiter()&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;arrayやiteratableオブジェクトからndarrayを生成する。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pandasの操作</title>
      <link>https://www.sambaiz.net/article/170/</link>
      <pubDate>Wed, 13 Jun 2018 23:47:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/170/</guid>
      <description>&lt;h2 id=&#34;seriesとdataframe&#34;&gt;SeriesとDataframe&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; np&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Series([&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(s[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# 3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(s&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;values) &lt;span style=&#34;color:#6272a4&#34;&gt;# [1 3] (ndarray)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dates &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;date_range(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2014-11-01 10:00&amp;#39;&lt;/span&gt;,periods&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, freq&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2H&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(dates) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# DatetimeIndex([&amp;#39;2014-11-01 10:00:00&amp;#39;, &amp;#39;2014-11-01 12:00:00&amp;#39;, &amp;#39;2014-11-01 14:00:00&amp;#39;], dtype=&amp;#39;datetime64[ns]&amp;#39;, freq=&amp;#39;2H&amp;#39;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;datestr &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;lambda&lt;/span&gt; d: pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;to_datetime(d)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; %H:%M&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#bd93f9&#34;&gt;1.&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt; : pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Series(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;),  index&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;date_range(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2014-11-01 10:00&amp;#39;&lt;/span&gt;,periods&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;, freq&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;H&amp;#39;&lt;/span&gt;)),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt; : [&lt;span style=&#34;color:#bd93f9&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}, index&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;dates)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}, index&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;dates)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(df)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|(index)            |A  |B|C|&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|-------------------|---|-|-|&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|2014-11-01 10:00:00|1.0|0|9|&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|2014-11-01 12:00:00|1.0|2|1|&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|2014-11-01 14:00:00|1.0|4|5|&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;indexを指定しないと0始まりの数値になる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ベイズ最適化でランダムフォレストとXGBoostの良いハイパーパラメータを探す</title>
      <link>https://www.sambaiz.net/article/169/</link>
      <pubDate>Sun, 10 Jun 2018 17:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/169/</guid>
      <description>&lt;p&gt;ベイズ最適化で良いハイパーパラメータを総当りのグリッドサーチより効率的に探す。&lt;/p&gt;&#xA;&lt;p&gt;ベイズ最適化はSMBO(Sequential Model-based Global Optimization)と呼ばれる、目的関数を近似するモデルと、ある値を探索すべきか評価する関数を用いて探索を進め、&#xA;実際の目的関数での評価とモデルの修正を行っていく手法の一種。&#xA;ベイズ最適化ではモデルとして、直近探索したパラメータとスコアの組の集合&lt;code&gt;D&lt;/code&gt;の条件付き事後確率分布&lt;code&gt;P(y|x, D)&lt;/code&gt;を用いる。&#xA;確率モデルは、任意の入力&lt;code&gt;(x1, x2, ... , xn)&lt;/code&gt;に対応する出力&lt;code&gt;(y1, y2, ..., yn)&lt;/code&gt;がガウス分布(=正規分布)に従うガウス過程(GP)や、TPE(Tree-structured Parzen Estimator)が仮定される。&lt;/p&gt;</description>
    </item>
    <item>
      <title>KaggleのTitanicのチュートリアルをXGBoostで解く</title>
      <link>https://www.sambaiz.net/article/168/</link>
      <pubDate>Sat, 02 Jun 2018 18:16:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/168/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://xgboost.readthedocs.io/en/latest/&#34;&gt;XGBoost&lt;/a&gt;は高性能なGradient Boostingのライブラリ。&#xA;Boostingというのはアンサンブル学習の種類の一つで、ランダムフォレストのように弱学習器をそれぞれ並列に学習するBaggingに対して、&#xA;順番に前回までの結果を受けながら学習し、結果をまとめる際にそれぞれの重みを掛けるもの。&#xA;XGBoostではランダムフォレストと同様に決定木を弱学習器とする。&lt;/p&gt;</description>
    </item>
    <item>
      <title>KaggleのTitanicのチュートリアルをランダムフォレストで解く</title>
      <link>https://www.sambaiz.net/article/166/</link>
      <pubDate>Tue, 29 May 2018 09:33:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/166/</guid>
      <description>&lt;p&gt;ランダムフォレストはデータや特徴量をランダムにサンプリングして決定木を複数生成し並列に学習するアンサンブル学習のBaggingという種類の手法。&#xA;決定木なので特徴量の影響が分かりやすく、値の大小で分岐するので標準化の必要がないが、複数の変数で表現される特徴を学習しづらい。&#xA;また、単一の決定木と比べて過学習を防ぐことができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pythonのasyncioで非同期にリクエストを飛ばす</title>
      <link>https://www.sambaiz.net/article/162/</link>
      <pubDate>Sat, 14 Apr 2018 13:37:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/162/</guid>
      <description>&lt;p&gt;Pythonの&lt;a href=&#34;https://docs.python.org/3/library/asyncio.html&#34;&gt;asyncio&lt;/a&gt;はイベントループを回してシングルスレッドで並行に非同期処理を行う。&#xA;マルチスレッドで並列に実行するのが&lt;a href=&#34;https://docs.python.jp/3/library/threading.html&#34;&gt;threading&lt;/a&gt;で、&#xA;マルチプロセスで並列に実行するのが&lt;a href=&#34;https://docs.python.jp/3/library/multiprocessing.html&#34;&gt;multiprocessing&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; asyncio&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;sleep&lt;/span&gt;(s):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;await&lt;/span&gt; asyncio&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sleep(s)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(s)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loop &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; asyncio&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get_event_loop()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loop&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run_until_complete(sleep(&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;coros &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [sleep(&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;), sleep(&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;futures &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; asyncio&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;gather(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;coros)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loop&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run_until_complete(futures)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(futures&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;result())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loop&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python main.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[3, 2]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3.6/library/asyncio-eventloops.html#asyncio.AbstractEventLoopPolicy.get_event_loop&#34;&gt;get_event_loop()&lt;/a&gt;&#xA;でイベントループを取得し、&#xA;&lt;a href=&#34;https://docs.python.org/3/library/asyncio-task.html#asyncio.gather&#34;&gt;gather()&lt;/a&gt;で処理をまとめたりして、&#xA;&lt;a href=&#34;https://docs.python.org/3/library/asyncio-task.html#example-future-with-run-until-complete&#34;&gt;run_until_complete()&lt;/a&gt;で&#xA;&lt;a href=&#34;https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future&#34;&gt;Future&lt;/a&gt;の完了を待ち、&#xA;結果を取得してイベントループを close() している。&lt;/p&gt;</description>
    </item>
    <item>
      <title>KubernetesにHelmでLocustによる分散負荷試験環境を立てる</title>
      <link>https://www.sambaiz.net/article/161/</link>
      <pubDate>Sun, 18 Mar 2018 22:35:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/161/</guid>
      <description>&lt;p&gt;OSSの負荷試験ツール&lt;a href=&#34;https://locust.io/&#34;&gt;Locust&lt;/a&gt;をK8sクラスタに立てる。&#xA;K8sならworkerの増減も簡単だし、HelmのChartもあるので立てるのも楽。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/297/&#34;&gt;CDKでEKSクラスタの作成からHelm ChartでのLocustのインストールまでを一気に行う - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pythonのインタラクティブな可視化ライブラリBokehでグラフを描く</title>
      <link>https://www.sambaiz.net/article/129/</link>
      <pubDate>Sat, 26 Aug 2017 18:02:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/129/</guid>
      <description>&lt;p&gt;Pythonの可視化というと&lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;matplotlib&lt;/a&gt;や、&#xA;そのラッパーの&lt;a href=&#34;https://github.com/mwaskom/seaborn&#34;&gt;seaborn&lt;/a&gt;、&#xA;データ解析ライブラリの&lt;a href=&#34;https://github.com/pandas-dev/pandas&#34;&gt;Pandas&lt;/a&gt;にもそのような機能があるが、&#xA;これらが静止画を描画するのに対して、&#xA;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;Bokeh&lt;/a&gt;はD3.jsによって拡大やスクロールができるグラフを描画する。Bokehはカメラのボケ。&#xA;似たようなものに&lt;a href=&#34;https://github.com/plotly/plotly.py&#34;&gt;Plotly&lt;/a&gt;というのもあって、&#xA;こちらはPandasと同じpydata.orgドメインでスターが多い。&lt;/p&gt;</description>
    </item>
    <item>
      <title>PythonのLintとFormatter</title>
      <link>https://www.sambaiz.net/article/125/</link>
      <pubDate>Fri, 11 Aug 2017 14:57:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/125/</guid>
      <description>&lt;h2 id=&#34;yapf&#34;&gt;&lt;a href=&#34;https://github.com/google/yapf&#34;&gt;YAPF&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;スタイルに沿って整形してくれる、Goでいう go fmt みたいなもの。&#xA;デフォルトはPython公式のスタイルガイド&lt;a href=&#34;https://www.python.org/dev/peps/pep-0008/&#34;&gt;PEP8&lt;/a&gt;でフォーマットされる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install yapf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;VSCodeでPythonを書くときは、&#xA;&lt;a href=&#34;https://github.com/DonJayamanne/pythonVSCode/wiki&#34;&gt;Pythonプラグイン&lt;/a&gt;&#xA;を入れてこんな設定をWorkspaceのconfigに入れておいて、&#xA;保存した時にフォーマットがかかるようにすると快適。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
