<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>server on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/server/</link>
    <description>Recent content in server on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Tue, 17 Sep 2019 09:42:00 +0900</lastBuildDate>
    
	<atom:link href="https://www.sambaiz.net/tags/server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ansibleでnginxを入れてLoad Balancingさせる</title>
      <link>https://www.sambaiz.net/article/239/</link>
      <pubDate>Tue, 17 Sep 2019 09:42:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/239/</guid>
      <description>EC2でUbuntu Server 18.04 LTS (ami-07d0cf3af28718ef8) の t3.medium (2vCPU, 4GiB) インスタンスを3台立ち上げた。この内1台をLB用とし、2台のAppサーバーに負荷分散させる。
https://github.com/sambaiz/ansible-nginx-lb-example
nginx.conf LBとAppのnginx.conf。upstreamはデフォルトでラウンドロビンする。
$ cat conf/lb/nginx.conf ... http { ... upstream app-server { server ip-172-31-94-208.ec2.internal; server ip-172-31-88-90.ec2.internal; } server { listen 80; server_name .compute-1.amazonaws.com; access_log /var/log/nginx/app-server.log main; location / { proxy_pass http://app-server; } } } $ cat conf/app/nginx.conf ... http { ... server { listen 80; server_name .compute-1.amazonaws.com; location / { proxy_pass http://127.0.0.1:8080; } } } Ansibleの実行 まずInventoryを書いて疎通確認する。
$ pip install --user ansible $ cat hosts [lb] ec2-3-227-2-54.</description>
    </item>
    
    <item>
      <title>H2OでHTTPS-&gt;HTTPのリバースプロキシを立てる</title>
      <link>https://www.sambaiz.net/article/75/</link>
      <pubDate>Thu, 02 Mar 2017 20:50:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/75/</guid>
      <description>良くチューニングされたNginxと同じくらい速いと 評判のHTTP/2サーバーH2Oでリバースプロキシを立ててみる。 HTTP/2だけではなく1.xにも対応しているので古い環境などでも大丈夫。
設定は Reverse Proxyと HTTP to HTTPSの サンプルをもとにして書いた。
hosts: &amp;quot;*&amp;quot;: listen: port: 443 ssl: certificate-file: /etc/h2o/oreore.crt key-file: /etc/h2o/server.key paths: &amp;quot;/&amp;quot;: proxy.reverse.url: http://127.0.0.1:3000/ access-log: /dev/stdout error-log: /dev/stderr とりあえずオレオレ証明書で試してみる。
$ openssl genrsa 2048 &amp;gt; server.key # private key $ openssl req -new -key server.key &amp;gt; server.csr # certificate signing request $ openssl x509 -days 365000 -req -signkey server.key &amp;lt; server.csr &amp;gt; oreore.crt # oreore certificate Dockerで動かす。lkwg82/h2o.docker
$ vi h2o.conf $ docker run -v $(pwd):/etc/h2o --net=host --name h2o --restart=always -itd lkwg82/h2o-http2-server $ curl --insecure https://127.</description>
    </item>
    
  </channel>
</rss>