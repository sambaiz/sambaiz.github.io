<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Istio on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/istio/</link>
    <description>Recent content in Istio on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Tue, 29 May 2018 22:33:00 +0900</lastBuildDate>
    
	<atom:link href="https://www.sambaiz.net/tags/istio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IstioでSidecar Envoyを付けるまで</title>
      <link>https://www.sambaiz.net/article/167/</link>
      <pubDate>Tue, 29 May 2018 22:33:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/167/</guid>
      <description>Istioとは サービスが増えるにしたがって複雑になるサービスメッシュ(マイクロサービス間のネットワーク)の、ロードバランシングや認証、モニタリングなどを一手に担うOSS。 概念は抽象化されていて、Kubernetes以外のサポートも考えられている。
Envoy Sidecarとしてデプロイされる、サービスメッシュでの全ての通信を通すプロキシ。したがってアプリケーションのコードに手を入れる必要がない。 CNCFのプロジェクトの一つで、 Istio用にオリジナルから拡張されている。 ロードバランシングやヘルスチェックなどを行い、メトリクスを取る。
Mixer AWSやGCPといったインフラの差異を吸収する。
Pilot サービスディスカバリしてEnvoyのトラフィックを制御する。A/Bテストやカナリアリリースをする場合や、障害に対応して適切にルーティングを行うことができる。
Istio-Auth サービスやエンドユーザーの認証を行い、ポリシーに従ってアクセス制御する。
Istioのインストール ローカルのminikubeに環境を作る。 apiserver.Admission.PluginNamesでは立ち上がらなかったので代わりに apiserver.admission-controlを指定している。
$ minikube version minikube version: v0.27.0 $ minikube start \ --extra-config=apiserver.admission-control=&amp;quot;NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota&amp;quot; \ --kubernetes-version=v1.9.0 $ kubectl config current-context minikube  最新のistioを持ってきてapplyする。
$ curl -L https://git.io/getLatestIstio | sh - $ cd istio-0.7.1/ $ kubectl apply -f install/kubernetes/istio-auth.yaml  作成されたserviceとpodはこんな感じ。
$ kubectl get svc -o name -n istio-system NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE istio-ingress LoadBalancer 10.</description>
    </item>
    
  </channel>
</rss>