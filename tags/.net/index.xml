<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>.net on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/.net/</link>
    <description>Recent content in .net on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sun, 12 Mar 2017 21:15:00 +0900</lastBuildDate><atom:link href="https://www.sambaiz.net/tags/.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C#のdelegateとevent</title>
      <link>https://www.sambaiz.net/article/83/</link>
      <pubDate>Sun, 12 Mar 2017 21:15:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/83/</guid>
      <description>delegate カプセル化するためのdelegate(移譲)メソッドに使う型。
public class Converter{ private static double defaultConvert(double num){ return num; } public delegate double Convert(double num); public Convert convert = defaultConvert; public double run(double num){ return convert (num); } } 匿名メソッドやラムダ式を渡すこともできる。
var conv = new Converter (); print (conv.run (2)); // 2  // 匿名メソッドの例 conv.convert = delegate(double input) { return input + 1; }; print (conv.run (2)); // 2 + 1 = 3  // ラムダ式の例 conv.convert = s =&amp;gt; s * s; print (conv.</description>
    </item>
    
    <item>
      <title>Unityと.NETとMono</title>
      <link>https://www.sambaiz.net/article/78/</link>
      <pubDate>Sun, 05 Mar 2017 18:50:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/78/</guid>
      <description>.NETとかよくわからなかったのでまとめてみた。
.NET Framework .NET Framework - Wikipedia
Microsoftが開発したアプリケーション開発、実行環境。
各言語のコンパイラによって言語、環境によらない共通の中間言語(CIL, Common Intermediate Language)バイナリ(exeやdll)に変換し、 実行時に共通言語基盤(CLI, Common Language Infrastructure)の仮想実行システム(VES)が環境依存の機械語を動的に生成(JIT, Just in time)する。 CLIの仕様はECMAで標準化されていて、Microsoftが実装したCLIが共通言語ランタイム(CLR)。Windowsでしか動かない。
.NET Core .NET Core - .NET Core による .NET のクロスプラットフォームへの移行
Microsoft/dotnet
オープンソースで、クロスプラットフォームに対応した.NET。CoreCLRはWindowsだけではなくMacやLinuxでも動く。 .NET Frameworkと共通のAPIもあるが、GUIまわりでどちらかにしかないAPIが存在する。
Mono オープンソースで、クロスプラットフォームな.NET Framework互換ソフトウェア。C#のコンパイラとCLIが実装されている。 Unityはこれを使っているが、バージョンが古くて使えないライブラリがある。
.NET CoreでHello World インストール手順に沿って dotnetコマンドを使えるようにする。
Hello Worldまで。
$ dotnet console -o hwapp $ cd hwapp $ ls Program.cs	hwapp.csproj $ dotnet restore $ ls Program.cs	hwapp.csproj	obj $ ls obj hwapp.csproj.nuget.g.props	project.assets.json hwapp.</description>
    </item>
    
  </channel>
</rss>
