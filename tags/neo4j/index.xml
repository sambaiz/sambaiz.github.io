<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>neo4j on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/neo4j/</link>
    <description>Recent content in neo4j on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Thu, 21 Jul 2016 09:20:00 +0900</lastBuildDate>
    
	<atom:link href="https://www.sambaiz.net/tags/neo4j/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>グラフデータベースNeo4jを触ってみた</title>
      <link>https://www.sambaiz.net/article/10/</link>
      <pubDate>Thu, 21 Jul 2016 09:20:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/10/</guid>
      <description>社内勉強会でオープンソースの グラフデータベースNeo4jが紹介されていたので触ってみた。
What is a Graph Database? つながりも含めたグラフとしてデータを扱うデータベース。 データセットのサイズによらず、複雑なつながりや、クエリをうまく扱える。 無数のデータの中から、関係ないデータを見ることなく多数のノードとつながりからなる必要なデータだけを取れる。
インストール ここからCommunity Editionを選んで OSごとに用意されている実行ファイルをダウンロードしてくる。 ファイルを実行し、Startを押すとブラウザで開けるようになる。
グラフ グラフは以下の要素から構成される。
 Node: データそのもので、まとめるためのラベルを複数付けられる Relationships: typeを持つ、Nodeのつながり Properties: NodeやRelationshipsが持てるkey-valueの値  Cypher Neo4jで使うクエリ言語。
まずはCREATE文でNodeを作る。Personはラベルだ。
CREATE (ee:Person { name: &amp;quot;Emil&amp;quot;, from: &amp;quot;Sweden&amp;quot;, klout: 99 }) CREATE文では使われていなかった謎のeeだが、MATCH文を見るとデータが格納される変数だということがわかる。 このeeは次のCREATE文でも参照できて、(ee)-[:KNOWS {since: 2001}]-&amp;gt;(js)で 作ったNodeとのRelationshipsを張るのに使っている。
MATCH (ee:Person) WHERE ee.name = &amp;quot;Emil&amp;quot; RETURN ee; CREATE (js:Person { name: &amp;quot;Johan&amp;quot;, from: &amp;quot;Sweden&amp;quot;, learn: &amp;quot;surfing&amp;quot; }), (ir:Person { name: &amp;quot;Ian&amp;quot;, from: &amp;quot;England&amp;quot;, title: &amp;quot;author&amp;quot; }), (rvb:Person { name: &amp;quot;Rik&amp;quot;, from: &amp;quot;Belgium&amp;quot;, pet: &amp;quot;Orval&amp;quot; }), (ally:Person { name: &amp;quot;Allison&amp;quot;, from: &amp;quot;California&amp;quot;, hobby: &amp;quot;surfing&amp;quot; }), (ee)-[:KNOWS {since: 2001}]-&amp;gt;(js),(ee)-[:KNOWS {rating: 5}]-&amp;gt;(ir), (js)-[:KNOWS]-&amp;gt;(ir),(js)-[:KNOWS]-&amp;gt;(rvb), (ir)-[:KNOWS]-&amp;gt;(js),(ir)-[:KNOWS]-&amp;gt;(ally), (rvb)-[:KNOWS]-&amp;gt;(ally) 以下のようにパターンマッチもできる。この例だとEmilの友達が取得できる。</description>
    </item>
    
  </channel>
</rss>