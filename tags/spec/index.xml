<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spec on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/spec/</link>
    <description>Recent content in spec on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Sat, 02 Sep 2017 12:47:00 +0900</lastBuildDate><atom:link href="https://www.sambaiz.net/tags/spec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>floatやdoubleの表現と精度</title>
      <link>https://www.sambaiz.net/article/130/</link>
      <pubDate>Sat, 02 Sep 2017 12:47:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/130/</guid>
      <description>IEEE754で標準化されている浮動小数点の仕様。
符号と指数部(exponent)と仮数部(fraction)からなるデータ構造で± (基数)^(指数部) * 1.(仮数部)の値を表現する。 以下では基数を2とする。
例えばfloat(32bits)で-5.25を表す場合、まず2進数に変換して(-101.01)、± 2^n * 1.xxxxの形になるように小数点をずらす(- 2^2 * 1.0101)。その後、指数部のレンジを1-254にするため127を足した結果、 1(-) 10000001(2+127) 01010000000000000000000(.0101)となる。
ただし、指数部が0のときは± 2^-126 * 0.(仮数部) として扱い、絶対値が極端に小さい非正規数も表すことができるようになっている。 また、指数部が255のとき、仮数部が0ならInfinity、そ例外はNaNとなる。
 精度は仮数部の大きさに依存し、floatが10進数でMath.log10(2 ** 23) = 6.92桁で、doubleがMath.log10(2 ** 52) = 15.65桁。JavaScriptの数値はdoubleなので1234567890.1234569が1234567890.123457になり16~17桁目で値がおかしくなることが確認できる。
参考 IEEE 754 - Wikipedia
Double-precision floating-point format - Wikipedia</description>
    </item>
    
  </channel>
</rss>
