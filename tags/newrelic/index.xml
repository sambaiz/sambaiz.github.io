<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>newrelic on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/newrelic/</link>
    <description>Recent content in newrelic on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Wed, 30 Mar 2022 19:11:00 +0900</lastBuildDate><atom:link href="https://www.sambaiz.net/tags/newrelic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>New Relicでインフラやアプリケーションをモニタリングする</title>
      <link>https://www.sambaiz.net/article/399/</link>
      <pubDate>Wed, 30 Mar 2022 19:11:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/399/</guid>
      <description>New RelicはインフラやアプリケーションをモニタリングするSaaSで、同種のサービスとしてはDatadogがある。 2020年に製品や課金体系が変わり、転送量とユーザー数に対して課金されるようになったようだ。 ホストや機能に対して課金されるDatadogと比べると、少人数で多くのインスタンスを管理している場合に有利ということになる。また、Datadogの課金体系はやや複雑で頻繁に台数が増減する環境では請求がどの程度になるか読みづらいところがあるが、こちらは分かりやすい。新しい機能を使っても単価が上がることもないのでいろいろと試しやすいのも良いと思う。
一方、大人数で管理していたり、捌くリクエストが膨大な場合APMの転送量がかさむことでDatadogより高くなるケースがある。 また、トラブルシューティングが比較的難しい印象があり、なぜかメトリクスが送られないといったことがあったり、古いドキュメントを参照してしまったりしたが、ライブラリやドキュメントはOSSになっており、いざとなれば実装を読んだり修正のPRを出すことができるので大きな問題は感じていない。
AWS連携 New RelicのアカウントからAssumeRoleするReadOnlyAccessとbudgets:ViewBudgetを付与したRoleを作る。
AWSのAssumeRole - sambaiz-net
{ &amp;#34;Statement&amp;#34;: [ { &amp;#34;Action&amp;#34;: [ &amp;#34;budgets:ViewBudget&amp;#34; ], &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34; } ], &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34; } メトリクスの取得は従来の定期的にAPIを呼んでポーリングする方法と、FirehoseにストリーミングするCloudWatch Metric Steamsを用いる方法がサポートされていて、後者が推奨されている。用意されているCloudFormationのテンプレートにLicense Keyを渡してスタックを作成すると次のリソースが作成され、New Relicの画面上に各種リソースのメトリクスが表示されるようになる。
 作成されたMetric Streamsの設定を見るとすべての名前空間のメトリクスが送られるようになっている。
 メトリクスが送られない場合は誤ったKeyやKey IDをコピーしていないか確認するとよい。
 infrastructure monitoring agentのインストール インスタンスのCPU使用率やネットワークI/Oなどを取得するAgentをインストールする。以下はAmazon Linux 2 (arm64)の例。
$ echo &amp;#34;license_key: ****-&amp;#34; | sudo tee -a /etc/newrelic-infra.yml $ sudo curl -o /etc/yum.repos.d/newrelic-infra.repo https://download.newrelic.com/infrastructure_agent/linux/yum/amazonlinux/2/aarch64/newrelic-infra.repo $ sudo yum -q makecache -y --disablerepo=&amp;#39;*&amp;#39; --enablerepo=&amp;#39;newrelic-infra&amp;#39; $ sudo yum install newrelic-infra -y $ sudo systemctl start newrelic-infra   APM Goroutineの数やGCの実行時間といったランタイム情報や、X-Rayのようなリクエストトレースやそのサマリーを見ることができる。 C, Go, Java, .</description>
    </item>
    
  </channel>
</rss>
