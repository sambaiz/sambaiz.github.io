<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/github/</link>
    <description>Recent content in Github on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Mon, 20 May 2019 09:23:00 +0900</lastBuildDate>
    
	<atom:link href="https://www.sambaiz.net/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CDK/CircleCI/GitHubでAWSリソース管理リポジトリを作る</title>
      <link>https://www.sambaiz.net/article/223/</link>
      <pubDate>Mon, 20 May 2019 09:23:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/223/</guid>
      <description>AWS CDKでリソースを記述し、PullRequestに対して自動でcdk diffで変更があるものを表示して、mergeしたときにcdk deployする。 全体のコードはGitHubにある。
AWS CDKでCloudFormationのテンプレートをTypeScriptから生成しデプロイする - sambaiz-net
まずCI用のUserを作成する。AssumeRoleしかできないCIUserからCIAssumeRoleをassumeして使う。
AWSのAssumeRole - sambaiz-net
export class IAMCIStack extends cdk.Stack { constructor(scope: cdk.Construct, id: string, props?: cdk.StackProps) { super(scope, id, props); const ciGroup = new iam.Group(this, &#39;CIGroup&#39;, { groupName: &#39;CI&#39;, }) const ciAssumeRole = new iam.Role(this, &#39;CIAssumeRole&#39;, { roleName: &#39;CIAssumeRole&#39;, assumedBy: new iam.AccountPrincipal(cdk.Aws.accountId), managedPolicyArns: [&#39;arn:aws:iam::aws:policy/AdministratorAccess&#39;] }) const ciUserRole = new iam.Role(this, &#39;CIUserRole&#39;, { roleName: &#39;CIUserRole&#39;, assumedBy: new iam.AccountPrincipal(cdk.Aws.accountId) }) const ciUserPolicy = new iam.</description>
    </item>
    
  </channel>
</rss>