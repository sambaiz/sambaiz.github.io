<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tensorflow on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/tensorflow/</link>
    <description>Recent content in Tensorflow on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Mon, 10 Aug 2020 13:39:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/tags/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SageMakerでTensorFlowのモデルを学習させる</title>
      <link>https://www.sambaiz.net/article/293/</link>
      <pubDate>Mon, 10 Aug 2020 13:39:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/293/</guid>
      <description>&lt;p&gt;以前PyTorchのモデルを学習させたが、そのTensorFlow版。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/287/&#34;&gt;SageMakerでPyTorchのモデルを学習させる - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;コード&#34;&gt;コード&lt;/h2&gt;&#xA;&lt;p&gt;全体のコードは&lt;a href=&#34;https://github.com/sambaiz/sagemaker-tensorflow-titanic&#34;&gt;GitHub&lt;/a&gt;にある。&lt;/p&gt;&#xA;&lt;h3 id=&#34;モデル&#34;&gt;モデル&lt;/h3&gt;&#xA;&lt;p&gt;モデルはTitanicのを使う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/291/&#34;&gt;TensorFlow2のKeras APIでTitanicのモデルを作る - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlow2のKeras APIでTitanicのモデルを作る</title>
      <link>https://www.sambaiz.net/article/291/</link>
      <pubDate>Sat, 08 Aug 2020 18:32:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/291/</guid>
      <description>&lt;h2 id=&#34;データセット&#34;&gt;データセット&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;TensorFlow Datasets&lt;/a&gt;の&#xA;&lt;a href=&#34;https://www.tensorflow.org/datasets/catalog/titanic&#34;&gt;Titanic&lt;/a&gt;を使う。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install tensorflow-datasets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/datasets/api_docs/python/tfds/load&#34;&gt;tfds.load()&lt;/a&gt;して&#xA;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/data/Dataset&#34;&gt;tf.data.Dataset&lt;/a&gt;を作る。&#xA;&lt;code&gt;tf.data&lt;/code&gt; はCPUやGPUがなるべくアイドル状態にならないようにする効率的な入力パイプラインを構築するAPI。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/195/&#34;&gt;TensorFlowのtf.data API - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlowのモデルをTPUに対応させてColabで学習し実行時間を計測する</title>
      <link>https://www.sambaiz.net/article/199/</link>
      <pubDate>Tue, 27 Nov 2018 09:57:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/199/</guid>
      <description>&lt;p&gt;TPU(Tensor Processing Unit)は&#xA;Google開発のニューラルネットワークの学習に特化したASIC(Application Specific Integrated Circuit)。&#xA;&lt;a href=&#34;https://cloudplatform-jp.googleblog.com/2017/05/an-in-depth-look-at-googles-first-tensor-processing-unit-tpu.html&#34;&gt;一般的なGPUと比べて15~30倍もの性能が出る&lt;/a&gt;&#xA;らしく検索や翻訳などGoogleのサービスでも使われている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deep LearningのBatch Normalizationの効果をTensorFlowで確認する</title>
      <link>https://www.sambaiz.net/article/198/</link>
      <pubDate>Wed, 14 Nov 2018 02:52:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/198/</guid>
      <description>&lt;h2 id=&#34;batch-normalizationとは&#34;&gt;Batch Normalizationとは&lt;/h2&gt;&#xA;&lt;p&gt;Deep Learningでは各層の学習を同時に行うため、前の層の変更によって各層の入力の分布が変わってしまうinternal covariate shiftという現象が起こり、そのためにパラメータの初期化をうまくやる必要があったり、学習率を大きくできず多くのステップを要する。&#xA;以下の論文で発表されたBatch Normalization(BN)は各層の入力を正規化して分布を固定することでこれを解決するというもの。&#xA;画像認識のコンテスト&lt;a href=&#34;http://image-net.org/challenges/LSVRC/2015/results&#34;&gt;ILSVRC 2015&lt;/a&gt;で1位を取った&lt;a href=&#34;https://arxiv.org/abs/1512.03385&#34;&gt;ResNet(Residual Network)&lt;/a&gt;でも使われている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlow&#43;numpyでData Augmentationして画像の学習データを増やす</title>
      <link>https://www.sambaiz.net/article/197/</link>
      <pubDate>Sun, 11 Nov 2018 15:10:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/197/</guid>
      <description>&lt;p&gt;Data Augmentationは学習データを加工したものを学習データに加えることで数を増やすというもの。&#xA;加工したデータには通常元のものと同じラベルが付くことになるが、&#xA;例えば画像を反転や回転させても元々のものと同じだと認識されるべきだとしたら妥当だ。&#xA;つまり、なんでもすれば良いわけではなくデータセットに応じた、元のデータと同じラベルが付くような加工をする必要があり、&#xA;裏を返せばそのような違いがあっても同じものであることをモデルに学習させることができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlowのtf.data API</title>
      <link>https://www.sambaiz.net/article/195/</link>
      <pubDate>Sat, 03 Nov 2018 18:03:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/195/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/guide/datasets&#34;&gt;Importing Data  |  TensorFlow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;データを読み込み変換してイテレートする入力パイプラインを作るAPI。&#xA;通常、学習にGPU/TPUを使う場合CPU処理の間はアイドル状態となりボトルネックになるが、&#xA;パイプライン処理を行うことでCPUとGPU/TPUがなるべくアイドル状態にならないようになり、&#xA;&lt;a href=&#34;https://www.tensorflow.org/guide/performance/datasets&#34;&gt;学習時間が短縮される&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Destributed TensorFlowの流れとSavedModelの出力</title>
      <link>https://www.sambaiz.net/article/179/</link>
      <pubDate>Wed, 25 Jul 2018 23:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/179/</guid>
      <description>&lt;h2 id=&#34;distributed-tensorflowhttpswwwtensorfloworgdeploydistributed&#34;&gt;&lt;a href=&#34;https://www.tensorflow.org/deploy/distributed&#34;&gt;Distributed TensorFlow&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;クラスタを組んでGraphを分散実行する。&lt;/p&gt;&#xA;&lt;p&gt;クラスタは&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;master: sessionを作成し、workerを制御する&lt;/li&gt;&#xA;&lt;li&gt;worker: 計算を行う&lt;/li&gt;&#xA;&lt;li&gt;ps(parameter server): 変数の値を持ち、更新する&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;のjobからなり、gRPCの&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlowのMonitoredSessionとSessionRunHookとsummaryのエラー</title>
      <link>https://www.sambaiz.net/article/175/</link>
      <pubDate>Sun, 01 Jul 2018 23:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/175/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/train/MonitoredSession&#34;&gt;MonitoredSession&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;deprecatedになった&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/train/Supervisor&#34;&gt;Supervisor&lt;/a&gt;の後継。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/train/MonitoredTrainingSession&#34;&gt;MonitoredTrainingSession&lt;/a&gt;で学習用のMonitoredSessionを生成する。&#xA;このコンストラクタの引数でcheckpoint_dirを渡すと内部で&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/train/CheckpointSaverHook&#34;&gt;CheckpointSaverHook&lt;/a&gt;が&#xA;&lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/training/monitored_session.py#L396&#34;&gt;追加される&lt;/a&gt;ようになっていて、restoreしたり指定したタイミングでsaveしたりしてくれる。&lt;/p&gt;&#xA;&lt;p&gt;なので今回明示的に渡すhooksは&#xA;指定したstepに到達したら&lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/training/basic_session_run_hooks.py#L320&#34;&gt;止めてくれる&lt;/a&gt;、&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/train/StopAtStepHook&#34;&gt;StopAtStepHook&lt;/a&gt;のみ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlowのモデルをsave/loadする</title>
      <link>https://www.sambaiz.net/article/172/</link>
      <pubDate>Fri, 22 Jun 2018 01:48:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/172/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/saved_model/builder/SavedModelBuilder&#34;&gt;SavedModelBuilder&lt;/a&gt;で&#xA;モデルを言語に依存しない&lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/saved_model.proto&#34;&gt;SavedModel&lt;/a&gt;のprotobufにして保存できる。&#xA;SavedModelには&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/train/Saver&#34;&gt;Saver&lt;/a&gt;によって&lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/saved_model/builder_impl.py#L418&#34;&gt;出力&lt;/a&gt;される&lt;a href=&#34;https://www.tensorflow.org/get_started/checkpoints&#34;&gt;Checkpoint&lt;/a&gt;を共有する一つ以上の&lt;a href=&#34;https://www.tensohttps://www.tensorflow.org/guide/saved_model#structure_of_a_savedmodel_directoryrflow.org/api_docs/python/tf/MetaGraphDef&#34;&gt;MetaGraphDef&lt;/a&gt;を&lt;a href=&#34;https://www.tensorflow.org/guide/saved_model#structure_of_a_savedmodel_directory&#34;&gt;含む&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; tensorflow &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; tf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;build_signature&lt;/span&gt;(signature_inputs, signature_outputs):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;signature_def_utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build_signature_def(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        signature_inputs, signature_outputs,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;signature_constants&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;REGRESS_METHOD_NAME)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;save&lt;/span&gt;(sess, export_dir, signature_def_map):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    builder &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;builder&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;SavedModelBuilder(export_dir)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    builder&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;add_meta_graph_and_variables(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          sess, [tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;tag_constants&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;SERVING],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          signature_def_map&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;signature_def_map&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    builder&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;save()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; shutil&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; os.path&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export_dir &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;./saved_model&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; os&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;exists(export_dir):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    shutil&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;rmtree(export_dir)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Graph()&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;as_default():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;placeholder(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32, name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;placeholder(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32, name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    c &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;add(a, b, name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;placeholder(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32, name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;v&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    w &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Variable(&lt;span style=&#34;color:#bd93f9&#34;&gt;0.0&lt;/span&gt;, name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; w&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;assign(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;add(v, w))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sv &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;train&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Supervisor()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; sv&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;managed_session() &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; sess:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(c, feed_dict&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{a: &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, b: &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;})) &lt;span style=&#34;color:#6272a4&#34;&gt;# 3.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(x, feed_dict&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{v: &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;})) &lt;span style=&#34;color:#6272a4&#34;&gt;# 2.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(x, feed_dict&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{v: &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;})) &lt;span style=&#34;color:#6272a4&#34;&gt;# 5.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;# https://github.com/tensorflow/tensorflow/issues/11549&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;graph&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_unsafe_unfinalize()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        save(sess, export_dir, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;add&amp;#34;&lt;/span&gt;: build_signature({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;: tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build_tensor_info(a),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;:tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build_tensor_info(b)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;: tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build_tensor_info(c)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;accumulate&amp;#34;&lt;/span&gt;: build_signature({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;v&amp;#34;&lt;/span&gt;: tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build_tensor_info(v),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }, {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;: tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;utils&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build_tensor_info(x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;$&lt;/span&gt; ls saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;saved_model&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;pb  variables&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;loadしてsess.runできる。variableの値も保存されている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlow/RNNで連続的な値の時系列データを予測する</title>
      <link>https://www.sambaiz.net/article/154/</link>
      <pubDate>Sun, 11 Feb 2018 19:49:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/154/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/146/&#34;&gt;TensorFlowのRNN(LSTM)のチュートリアルのコードを読む - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;チュートリアルで扱ったのは語彙数分の単語、つまり離散的な値だったが、今回は連続的な値を取る場合のモデルを作る。&#xA;全体のコードは&lt;a href=&#34;https://github.com/sambaiz/my_jupyter_notebook/blob/master/rnn-continuous.ipynb&#34;&gt;ここ&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;入力&#34;&gt;入力&lt;/h3&gt;&#xA;&lt;p&gt;以下の関数によって生成した1次元のデータ列。&#xA;これをstrideした最後のデータ、つまり時系列的に次に来るものを予測させる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorBoardでsummaryやグラフを見る</title>
      <link>https://www.sambaiz.net/article/147/</link>
      <pubDate>Sun, 07 Jan 2018 21:12:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/147/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/146/&#34;&gt;TensorflowのRNN(LSTM)のチュートリアルのコードを読む - sambaiz-net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;で読んだコードをTensorboardでみてみる。&lt;/p&gt;&#xA;&lt;p&gt;8888がJupyter、6006がTensorboard。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker run -it -p 8888:8888 -p 6006:6006 gcr.io/tensorflow/tensorflow&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;コードをuploadするかJupyterからterminalを開いてcloneしてくる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlowのRNN(LSTM)のチュートリアルのコードを読む</title>
      <link>https://www.sambaiz.net/article/146/</link>
      <pubDate>Wed, 03 Jan 2018 21:12:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/146/</guid>
      <description>&lt;p&gt;TensorflowのRNN(Recurrent Neural Networks)の&lt;a href=&#34;https://www.tensorflow.org/tutorials/recurrent&#34;&gt;チュートリアル&lt;/a&gt;の&lt;a href=&#34;https://github.com/tensorflow/models/blob/12f279d6f4cb33574bc20109b41eb8a59f40cfd1/tutorials/rnn/ptb/ptb_word_lm.py&#34;&gt;コード&lt;/a&gt;を読む。これは文章のそれまでの単語の履歴から、その次に続く単語を予測することで言語モデルを作るもの。&lt;/p&gt;&#xA;&lt;h2 id=&#34;rnnlstmとは&#34;&gt;RNN/LSTMとは&lt;/h2&gt;&#xA;&lt;p&gt;RNNは入力に対して出力のほかに情報を次のステップに渡すことで時系列データで学習できるようにするネットワーク。&#xA;展開すると同じネットワークに単語を一つずつ入れていくように表現できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ニューラルネットワークと活性化関数</title>
      <link>https://www.sambaiz.net/article/133/</link>
      <pubDate>Mon, 18 Sep 2017 23:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/133/</guid>
      <description>&lt;p&gt;活性化関数というのは各層での重み掛けバイアス足しのあとに適用する非線形の関数。&#xA;これはカーネル法のように空間を変換して線形分離できないデータを線形分離できるようにするはたらきをする。&#xA;線形な関数を使うと層を重ねても結局線形のままで、空間もそのまま伸縮するだけなので目的を果たさない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DeepMindのTensorFlowライブラリSonnetを使う</title>
      <link>https://www.sambaiz.net/article/124/</link>
      <pubDate>Sun, 06 Aug 2017 23:54:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/124/</guid>
      <description>&lt;p&gt;AlphaGoを開発したGoogle DeepMind社のTensorFlowライブラリ&lt;a href=&#34;https://github.com/deepmind/sonnet&#34;&gt;Sonnet&lt;/a&gt;を使う。&#xA;当初はPython2しか対応していないようだったが、今は3にも対応している。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DeepDreaming with TensorFlowをやる(2)</title>
      <link>https://www.sambaiz.net/article/21/</link>
      <pubDate>Sat, 10 Sep 2016 14:46:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/21/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/20&#34;&gt;前回&lt;/a&gt;の続き。&lt;/p&gt;&#xA;&lt;h2 id=&#34;multiscale-image-generation&#34;&gt;Multiscale image generation&lt;/h2&gt;&#xA;&lt;p&gt;様々なスケールで勾配上昇させる。小さなスケールで上昇させたものをより大きなスケールでさらに上昇させていく。&#xA;ただ、壁紙のようなサイズを生成するような場合にそれを行うと、GPUのメモリを食いつぶしてしまう。&#xA;これを避けるために、画像を小さなタイルに分割し、それぞれ独立に勾配を計算する。&#xA;また、毎回画像をランダムにシフトしていくことで、タイルに見えることを避け、画像全体の品質を向上させる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DeepDreaming with Tensorflowをやる(1)</title>
      <link>https://www.sambaiz.net/article/20/</link>
      <pubDate>Wed, 07 Sep 2016 01:06:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/20/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/r0.10/tensorflow/examples/tutorials/deepdream/deepdream.ipynb&#34;&gt;https://github.com/tensorflow/tensorflow/blob/r0.10/tensorflow/examples/tutorials/deepdream/deepdream.ipynb&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;例の通りまとめながら進めていく。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;このノートブックは、畳み込みニューラルネットワークによる画像生成の手法を説明するものだ。&#xA;ネットワークは入力画像へ変換させる配列のレイヤーの集合から成り立っている。&#xA;変換のパラメータは勾配降下法で変形しながら学習していく。&#xA;内部的な画像の表現は意味不明なように見えるが、可視化し、解釈することができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tensorflowの学習データを使ったAPIを作る</title>
      <link>https://www.sambaiz.net/article/13/</link>
      <pubDate>Fri, 05 Aug 2016 22:08:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/13/</guid>
      <description>&lt;p&gt;チュートリアルのMNISTの学習データを使って、手書き数字画像のデータを受け取り、数字を返すAPIを作る。&#xA;コードは&lt;a href=&#34;https://github.com/sambaiz/tensorflow-use-api-sample&#34;&gt;ここ&lt;/a&gt;にある。&lt;/p&gt;&#xA;&lt;h2 id=&#34;学習して結果を保存する&#34;&gt;学習して結果を保存する&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/6&#34;&gt;前回&lt;/a&gt;の学習結果のcheckpointファイルを出力する。&#xA;&lt;a href=&#34;https://www.tensorflow.org/api_docs/python/tf/train/Saver#save&#34;&gt;tf.train.Saver().save&lt;/a&gt;でnameで対応するVariableの値が保存できる。&#xA;また、その際&lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/training/saver.py#L1560&#34;&gt;デフォルト&lt;/a&gt;で&lt;a href=&#34;https://www.tensorflow.org/api_guides/python/meta_graph&#34;&gt;MetaGraph&lt;/a&gt;もexportされ、これをimportすればGraphも復元することができる。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; tensorflow &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; tf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; tensorflow.examples.tutorials.mnist &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; input_data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Mnist&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; __init__(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        g &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Graph()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; g&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;as_default():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            W_conv1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_weight_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;32&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;W_conv1&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            b_conv1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_bias_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;32&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b_conv1&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_x &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;placeholder(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32, [&lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;784&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            x_image &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;reshape(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_x, [&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            h_conv1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;nn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;relu(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_conv2d(x_image, W_conv1) &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; b_conv1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            h_pool1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_max_pool_2x2(h_conv1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            W_conv2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_weight_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;32&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;W_conv2&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            b_conv2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_bias_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b_conv2&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            h_conv2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;nn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;relu(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_conv2d(h_pool1, W_conv2) &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; b_conv2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            h_pool2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_max_pool_2x2(h_conv2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            W_fc1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_weight_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;W_fc1&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            b_fc1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_bias_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b_fc1&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            h_pool2_flat &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;reshape(h_pool2, [&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;64&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            h_fc1 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;nn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;relu(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;matmul(h_pool2_flat, W_fc1) &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; b_fc1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_keep_prob &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;placeholder(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            h_fc1_drop &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;nn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;dropout(h_fc1, self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_keep_prob)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            W_fc2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_weight_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;1024&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;W_fc2&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            b_fc2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_bias_variable([&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;],  &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;b_fc2&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            y_conv &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;nn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;softmax(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;matmul(h_fc1_drop, W_fc2) &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; b_fc2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_what_number &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;argmax(y_conv, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_y_ &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;placeholder(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32, [&lt;span style=&#34;color:#ff79c6&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cross_entropy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;reduce_mean(&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;reduce_sum(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_y_ &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;log(y_conv), reduction_indices&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_train_step &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;train&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;AdamOptimizer(&lt;span style=&#34;color:#bd93f9&#34;&gt;1e-4&lt;/span&gt;)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;minimize(cross_entropy)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            correct_prediction &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;equal(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;argmax(y_conv,&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;), tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;argmax(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_y_,&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_accuracy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;reduce_mean(tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;cast(correct_prediction, tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;float32))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Session()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            init &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;initialize_all_variables()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(init)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_saver &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;train&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Saver()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;save&lt;/span&gt;(self, ckpt_file_name):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_saver&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;save(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess, ckpt_file_name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;restore&lt;/span&gt;(self, ckpt_file_name):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_saver&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;restore(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess, ckpt_file_name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;what_number&lt;/span&gt;(self, image_array):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_what_number, feed_dict&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_x: image_array, self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_keep_prob: &lt;span style=&#34;color:#bd93f9&#34;&gt;1.0&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;train&lt;/span&gt;(self, num):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;hasattr&lt;/span&gt;(self, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;_mnist&amp;#34;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_mnist &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; input_data&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read_data_sets(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;MNIST_data/&amp;#34;&lt;/span&gt;, one_hot&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(num):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            batch &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_mnist&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;train&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;next_batch(&lt;span style=&#34;color:#bd93f9&#34;&gt;50&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              train_accuracy &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_accuracy&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;eval(session&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess, feed_dict&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                      self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_x:batch[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;], self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_y_: batch[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;], self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_keep_prob: &lt;span style=&#34;color:#bd93f9&#34;&gt;1.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;step &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;, training accuracy &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%g&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt;(i, train_accuracy))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_train_step, feed_dict&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_x: batch[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;], self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_y_: batch[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;], self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_keep_prob: &lt;span style=&#34;color:#bd93f9&#34;&gt;0.5&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;test accuracy &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%g&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt;self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_accuracy&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;eval(session&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess, feed_dict&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_x: self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_mnist&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;test&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;images, self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_y_: self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_mnist&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;test&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;labels, self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_keep_prob: &lt;span style=&#34;color:#bd93f9&#34;&gt;1.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;close&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;_weight_variable&lt;/span&gt;(self, shape, name):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      initial &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;truncated_normal(shape, stddev&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0.1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Variable(initial, name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;_bias_variable&lt;/span&gt;(self, shape, name):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      initial &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;constant(&lt;span style=&#34;color:#bd93f9&#34;&gt;0.1&lt;/span&gt;, shape&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;shape)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Variable(initial, name&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;_conv2d&lt;/span&gt;(self, x, W):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;nn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;conv2d(x, W, strides&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;], padding&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;SAME&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;_max_pool_2x2&lt;/span&gt;(self, x):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; tf&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;nn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;max_pool(x, ksize&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            strides&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;], padding&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;SAME&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;train() で学習し、save() でチェックポイントファイルを保存できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlow チュートリアル2(Deep MNIST for Experts)</title>
      <link>https://www.sambaiz.net/article/6/</link>
      <pubDate>Tue, 12 Jul 2016 21:16:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/6/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/3&#34;&gt;前回&lt;/a&gt;に引き続き、まとめながら進めていく。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.tensorflow.org/versions/r0.9/tutorials/mnist/pros/index.html&#34;&gt;Deep MNIST for Experts&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;start-tensorflow-interactivesession&#34;&gt;Start TensorFlow InteractiveSession&lt;/h3&gt;&#xA;&lt;p&gt;今回は、前回のようにグラフを作成してからSessionを開始する代わりに&#xA;&lt;code&gt;InteractiveSession&lt;/code&gt;を使う。&#xA;グラフを作成し実行するのをインタラクティブに行うことができ、IPythonのような環境で便利だ。&lt;/p&gt;</description>
    </item>
    <item>
      <title>TensorFlow チュートリアルまで</title>
      <link>https://www.sambaiz.net/article/3/</link>
      <pubDate>Sun, 03 Jul 2016 23:37:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/3/</guid>
      <description>&lt;p&gt;Googleが公開した人工知能ライブラリTensorFlowを使ってみる。&#xA;&lt;a href=&#34;https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html&#34;&gt;セットアップ&lt;/a&gt;方法はいくつか提供されているが、Dockerで動かすことにした。&#xA;Jupyter Notebookが立ち上がるのですぐに試せて良い。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker run -it -p 8888:8888 gcr.io/tensorflow/tensorflow&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;http://localhost:8888/tree&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
