<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scikit-learn on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/scikit-learn/</link>
    <description>Recent content in scikit-learn on sambaiz-net</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Tue, 29 May 2018 09:33:00 +0900</lastBuildDate><atom:link href="https://www.sambaiz.net/tags/scikit-learn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KaggleのTitanicのチュートリアルをランダムフォレストで解く</title>
      <link>https://www.sambaiz.net/article/166/</link>
      <pubDate>Tue, 29 May 2018 09:33:00 +0900</pubDate>
      
      <guid>https://www.sambaiz.net/article/166/</guid>
      <description>ランダムフォレストはデータや特徴量をランダムにサンプリングして決定木を複数生成し並列に学習するアンサンブル学習のBaggingという種類の手法。 決定木なので特徴量の影響が分かりやすく、値の大小で分岐するので標準化の必要がないが、複数の変数で表現される特徴を学習しづらい。 また、単一の決定木と比べて過学習を防ぐことができる。
KaggleのTitanicのチュートリアルをXGBoostで解く - sambaiz-net
train.csvとtest.csvをKaggleからダウンロードする。 csvにはタイタニックの乗客者リストが含まれ、test.csvには生還したかを表すSurvivedが抜けている。 これを予測するのがこのコンペティションの目的。
データのうちFareやAge、Embarkedは入っていないものがあって、これらの欠損値をどう扱うという問題がある。
df = pd.read_csv(&amp;#39;./train.csv&amp;#39;) print(len(df)) print(df.isnull().sum()) 891 PassengerId 0 Survived 0 Pclass 0 Name 0 Sex 0 Age 177 SibSp 0 Parch 0 Ticket 0 Fare 0 Cabin 687 Embarked 2 dtype: int64 欠損値については連続値をとるFareとAgeは平均を取り、Embarkedは専用のカテゴリーにしてみた。決定木は分岐を繰り返すためlabel encodingで学習できる。 数値化できないものについては除いている。
def preprocess(df): df[&amp;#39;Fare&amp;#39;] = df[&amp;#39;Fare&amp;#39;].fillna(df[&amp;#39;Fare&amp;#39;].mean()) df[&amp;#39;Age&amp;#39;] = df[&amp;#39;Age&amp;#39;].fillna(df[&amp;#39;Age&amp;#39;].mean()) df[&amp;#39;Embarked&amp;#39;] = df[&amp;#39;Embarked&amp;#39;].fillna(&amp;#39;Unknown&amp;#39;) df[&amp;#39;Sex&amp;#39;] = df[&amp;#39;Sex&amp;#39;].apply(lambda x: 1 if x == &amp;#39;male&amp;#39; else 0) df[&amp;#39;Embarked&amp;#39;] = df[&amp;#39;Embarked&amp;#39;].map( {&amp;#39;S&amp;#39;: 0, &amp;#39;C&amp;#39;: 1, &amp;#39;Q&amp;#39;: 2, &amp;#39;Unknown&amp;#39;: 3} ).</description>
    </item>
    
  </channel>
</rss>
