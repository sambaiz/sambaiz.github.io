<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on sambaiz-net</title>
    <link>https://www.sambaiz.net/tags/linux/</link>
    <description>Recent content in Linux on sambaiz-net</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>sambaiz-net</copyright>
    <lastBuildDate>Fri, 03 May 2024 17:46:00 +0900</lastBuildDate>
    <atom:link href="https://www.sambaiz.net/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>tcコマンドでqdiscを設定しネットワーク遅延や帯域制限を行う</title>
      <link>https://www.sambaiz.net/article/484/</link>
      <pubDate>Fri, 03 May 2024 17:46:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/484/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man8/tc.8.html&#34;&gt;tc&lt;/a&gt; はカーネルがパケットをネットワークインタフェースに送る前にキューイングしてトラフィックを制御する qdisc (queueing discipline) を設定するコマンドあるいはサブシステム。Kubernetes CNI の &lt;a href=&#34;https://github.com/containernetworking/cni.dev/blob/main/content/plugins/current/meta/bandwidth.md&#34;&gt;bandwidth plugin&lt;/a&gt; も tc によって実現されており次の &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/#support-traffic-shaping&#34;&gt;annotatiton&lt;/a&gt; によって Pod の帯域を制限できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>fzf と zoxide でプレビューを見ながら fuzzy completion によるファイルの選択やディレクトリへの移動を行う</title>
      <link>https://www.sambaiz.net/article/483/</link>
      <pubDate>Wed, 01 May 2024 18:17:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/483/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;fzf&lt;/a&gt; は &lt;a href=&#34;https://github.com/peco/peco&#34;&gt;peco&lt;/a&gt; のように fuzzy にファイルを絞って選択できるコマンド。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-tsx&#34; data-lang=&#34;tsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install fzf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ find aaa &lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt; fzf &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;height &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;|&lt;/span&gt; xargs echo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;img_container&#34;&gt;&lt;a href=&#34;https://www.sambaiz.net/article/483/images/fzf.png&#34;&gt;&#xA;    &lt;img style=&#34;max-width: 100%; width: auto; height: auto;&#34; src=&#34;https://www.sambaiz.net/article/483/images/fzf_hu14607249015198361583.png&#34; width=&#34;600&#34; height=&#34;350&#34; alt=&#34;fzfコマンド&#34;&gt;&#xA;&lt;/a&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;p&gt;—preview にコマンドを渡すことでプレビュー欄にファイルの中身を表示することができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubernetes の sidecar で logrotate する</title>
      <link>https://www.sambaiz.net/article/472/</link>
      <pubDate>Thu, 07 Mar 2024 01:05:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/472/</guid>
      <description>&lt;p&gt;ログを出力するアプリケーションと、&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;package&lt;/span&gt; main&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;github.com/sirupsen/logrus&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;logFile, err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; os.&lt;span style=&#34;color:#50fa7b&#34;&gt;OpenFile&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/var/log/app/test.log&amp;#34;&lt;/span&gt;, os.O_CREATE|os.O_WRONLY|os.O_APPEND, &lt;span style=&#34;color:#bd93f9&#34;&gt;0666&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;logrus.&lt;span style=&#34;color:#50fa7b&#34;&gt;Fatal&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;failed to open file&amp;#34;&lt;/span&gt;, err)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;logrus.&lt;span style=&#34;color:#50fa7b&#34;&gt;SetOutput&lt;/span&gt;(logFile)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;i &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ticker &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; time.&lt;span style=&#34;color:#50fa7b&#34;&gt;NewTicker&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; time.Millisecond)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;-&lt;/span&gt;ticker.C&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;logrus.&lt;span style=&#34;color:#50fa7b&#34;&gt;Print&lt;/span&gt;(i)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;i&lt;span style=&#34;color:#ff79c6&#34;&gt;++&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;logrotate をインストールしたイメージを作り、&lt;/p&gt;</description>
    </item>
    <item>
      <title>繰り返しコマンドを実行する際都度プロセスを生成する場合と常駐させておきUNIXドメインソケットで入出力を行う場合の速度比較</title>
      <link>https://www.sambaiz.net/article/404/</link>
      <pubDate>Fri, 06 May 2022 20:51:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/404/</guid>
      <description>&lt;p&gt;一部の処理が異なる言語で書かれているなどしてコマンドを繰り返し実行するとプロセス生成の度にメモリ領域の確保などのオーバーヘッドが発生する。常時プロセスを動かしておきプロセス間通信で入出力を行えばこれを回避できそうだが実際どれくらい速度に差が出るのかGoでコマンドを作ってベンチマークを取ってみる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>shellの条件分岐の[と[[</title>
      <link>https://www.sambaiz.net/article/362/</link>
      <pubDate>Thu, 03 Jun 2021 13:50:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/362/</guid>
      <description>&lt;p&gt;&lt;code&gt;[&lt;/code&gt; はPOSIX準拠のtestコマンド。&lt;code&gt;[[&lt;/code&gt; はその拡張でdashなどではサポートされていない。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ which &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/bin/&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ man &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TEST&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;test&lt;/span&gt; - check file types and compare values&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SYNOPSIS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;test&lt;/span&gt; EXPRESSION&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt; EXPRESSION &lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt; OPTION&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;あくまでコマンドなので前後にスペースを空ける必要がある。&lt;/p&gt;</description>
    </item>
    <item>
      <title>127.0.0.1(localhost)と0.0.0.0</title>
      <link>https://www.sambaiz.net/article/359/</link>
      <pubDate>Mon, 24 May 2021 23:15:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/359/</guid>
      <description>&lt;p&gt;ホストで動かしていたコンポーネント群をdocker-composeに乗せたところ、コンポーネント間の通信が通らなくなってしまった。&#xA;いずれもdocker-composeが作った&lt;a href=&#34;https://docs.docker.jp/compose/networking.html&#34;&gt;デフォルトのネットワーク&lt;/a&gt;で動いているのでpingは通る。&#xA;コードを見てみたところサーバーが localhost で listen していたので 0.0.0.0 に修正した。&lt;/p&gt;</description>
    </item>
    <item>
      <title>FluentdがどのようにMulti Process Workersで処理を実行しているのか実装を追う</title>
      <link>https://www.sambaiz.net/article/335/</link>
      <pubDate>Sun, 25 Apr 2021 23:55:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/335/</guid>
      <description>&lt;p&gt;Fluentdはv1.0から標準で&lt;a href=&#34;https://docs.fluentd.org/deployment/multi-process-workers&#34;&gt;マルチプロセス対応&lt;/a&gt;され、&#xA;指定した数のWorkerで処理が行われるようになった。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;system&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  workers 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/system&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;どのように実行しているのか&lt;code&gt;v1.12.3&lt;/code&gt;の実装を見ていく。&lt;/p&gt;</description>
    </item>
    <item>
      <title>makeで環境変数とMakefileの変数、引数の値の内どの値が参照されるか</title>
      <link>https://www.sambaiz.net/article/314/</link>
      <pubDate>Sat, 28 Nov 2020 16:14:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/314/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker run -v &lt;span style=&#34;color:#f1fa8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;`&lt;/span&gt;:/root -it ubuntu:20.04 /bin/sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# apt update &amp;amp;&amp;amp; apt install -y make&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# make --version&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GNU Make 4.2.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Built &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; x86_64-pc-linux-gnu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# cat Makefile &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HOGE:&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;aaa&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;foo:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;$(&lt;/span&gt;HOGE&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;$(&lt;/span&gt;FUGA&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &amp;gt; /dev/null&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;フラグを付けないと&lt;code&gt;引数の値 -&amp;gt; Makefileの変数 -&amp;gt; 環境変数&lt;/code&gt;の順で参照されるので、&#xA;makeの前に書いた環境変数ではMakefileの変数を上書きできず、後に書いて引数とすると上書きできる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>nkfによる文字コードの判定とGoでのShiftJISの扱い</title>
      <link>https://www.sambaiz.net/article/295/</link>
      <pubDate>Mon, 07 Sep 2020 21:38:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/295/</guid>
      <description>&lt;p&gt;&lt;code&gt;file --mime&lt;/code&gt; で文字コードを判定しようとしたら &lt;code&gt;charset=unknown-8bit&lt;/code&gt; と表示されてしまったので、&lt;code&gt;nkf --guess&lt;/code&gt; したところShift_JISであることが分かった。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ file --mime unknown.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unknown.txt: text/plain; charset=unknown-8bit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ brew install nkf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ nkf --guess unknown.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Shift_JIS (CRLF) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このファイルをGoで扱うには&lt;a href=&#34;https://pkg.go.dev/golang.org/x/text/encoding/japanese?tab=doc&#34;&gt;japanese&lt;/a&gt; packageでエンコード/デコードする。&#xA;ShiftJISのほかにEUCJPとISO2022JPをサポートしている。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Goのnet/http/pprofでCPUやMemoryをprofileする流れと内部実装</title>
      <link>https://www.sambaiz.net/article/238/</link>
      <pubDate>Mon, 16 Sep 2019 13:49:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/238/</guid>
      <description>&lt;p&gt;Goの&lt;a href=&#34;https://golang.org/pkg/net/http/pprof/&#34;&gt;net/http/pprof&lt;/a&gt;は&#xA;&lt;a href=&#34;https://github.com/google/pprof&#34;&gt;pprof&lt;/a&gt;で可視化できるprofile.protoを返すAPIを提供するpackage。&#xA;profileを出力する方法はほかにもあるが、サーバーのような動き続けるアプリケーションのprofileを取るのに使う。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.sambaiz.net/article/47/&#34;&gt;go testでベンチマークを取ってpprofで時間がかかっている箇所を調べる - sambaiz-net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>User NamespaceでrootになってNetwork Namespaceを作りvethとNATで外と通信する</title>
      <link>https://www.sambaiz.net/article/237/</link>
      <pubDate>Fri, 06 Sep 2019 02:20:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/237/</guid>
      <description>&lt;p&gt;LinuxのNamespaceはuidやpid、networkなどを分離できる機能で、Dockerなどのコンテナ技術で使われている。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# Amazon Linux 2 (ami-0ff21806645c5e492)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ uname -r&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.14.138-114.102.amzn2.x86_64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;user-namespaceでrootになる&#34;&gt;User NamespaceでRootになる&lt;/h2&gt;&#xA;&lt;p&gt;rootでないと正常終了しないコードを書いた。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SystemdのService</title>
      <link>https://www.sambaiz.net/article/236/</link>
      <pubDate>Fri, 30 Aug 2019 00:16:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/236/</guid>
      <description>&lt;p&gt;SystemdはLinuxで動くServiceの管理などを行うデーモン。initの後継でchkconfig/servicceの代わりにsystemctlコマンドを使う。&lt;/p&gt;</description>
    </item>
    <item>
      <title>nohupし忘れた時間のかかる処理をdisownしてexit後も実行させ続ける</title>
      <link>https://www.sambaiz.net/article/184/</link>
      <pubDate>Thu, 23 Aug 2018 00:52:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/184/</guid>
      <description>&lt;p&gt;時間がかかるコマンドを実行する場合、通常は&lt;code&gt;nohup&lt;/code&gt;で実行し&#xA;ターミナル終了時に飛ぶ&lt;a href=&#34;https://en.wikipedia.org/wiki/SIGHUP&#34;&gt;SIGHUP(SIGnal Hang UP)&lt;/a&gt;を無視させることで&#xA;exitしても実行させ続けることができる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>tmuxのメモ</title>
      <link>https://www.sambaiz.net/article/95/</link>
      <pubDate>Fri, 21 Apr 2017 00:25:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/95/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://tmux.github.io/&#34;&gt;https://tmux.github.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;セッションを立ち上げてその中で複数のウィンドウやペインからコマンドを実行できるやつ。&#xA;サーバーでの作業中にネットワークが切断されてしまってもセッションをattachすることで再開することができる。&#xA;ローカル環境でもコマンドキーでのウィンドウ作成やペインの分割、&#xA;複数のサーバーにsshで入って調査するようなときにペインの同時入力は便利。&#xA;もちろんターミナルを閉じてしまっても再開できる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unixのパイプをmkfifo()で作ってdup2()で標準出力にコピーして書き込む</title>
      <link>https://www.sambaiz.net/article/87/</link>
      <pubDate>Fri, 24 Mar 2017 22:06:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/87/</guid>
      <description>&lt;h2 id=&#34;パイプとは&#34;&gt;パイプとは&lt;/h2&gt;&#xA;&lt;p&gt;Unixでプロセス間通信するためのもの。シェルで使う&lt;code&gt;|&lt;/code&gt;は無名パイプ。&#xA;&lt;code&gt;mkfifo()&lt;/code&gt;システムコールで名前付きパイプを作成でき、これを読み書きすることで任意のプロセス間でやりとりできる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>crontabのメモ</title>
      <link>https://www.sambaiz.net/article/70/</link>
      <pubDate>Fri, 24 Feb 2017 21:40:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/70/</guid>
      <description>&lt;p&gt;各ユーザーごとのcron設定。&lt;code&gt;crontab -e&lt;/code&gt;でも編集できるが、間違えて&lt;code&gt;-r&lt;/code&gt;にすると全部消えてしまうのでこういう風に一旦取り出してから編集すると安全。&lt;/p&gt;</description>
    </item>
    <item>
      <title>iftopでネットワークの帯域を見る</title>
      <link>https://www.sambaiz.net/article/60/</link>
      <pubDate>Tue, 07 Feb 2017 20:30:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/60/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ yum install --enablerepo=epel iftop&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ iftop -f &amp;#34;not dst net 10.0.0.0/8&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;-i eth0&lt;/code&gt;のようにしてインタフェースを指定し、&lt;code&gt;-f&lt;/code&gt;でフィルタをかけられる。フィルタの詳細は&lt;code&gt;man pcap-filter&lt;/code&gt;で。&lt;/p&gt;</description>
    </item>
    <item>
      <title>vmstatのメモ</title>
      <link>https://www.sambaiz.net/article/59/</link>
      <pubDate>Mon, 06 Feb 2017 22:45:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/59/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ vmstat 間隔(秒)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 0  0      0 118588  80388 2516284    0    0     2    77  141   85  1  0 98  0  0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;procs&#34;&gt;procs&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;r: 実行待ちプロセス数。CPUの処理が追いついていない。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSHポートフォワーディングする際のオプション</title>
      <link>https://www.sambaiz.net/article/42/</link>
      <pubDate>Sat, 17 Dec 2016 12:15:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/42/</guid>
      <description>&lt;p&gt;ローカルの8080番ポートへの通信をexample.com経由でexample2.comの80番ポートに向ける。&#xA;ローカルから対象サーバーに直接アクセスできない場合やポートが公開されてない場合に用いられる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ファイルディスクリプタの上限を増やす</title>
      <link>https://www.sambaiz.net/article/41/</link>
      <pubDate>Thu, 08 Dec 2016 21:36:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/41/</guid>
      <description>&lt;h2 id=&#34;ファイルディスクリプタとは&#34;&gt;ファイルディスクリプタとは&lt;/h2&gt;&#xA;&lt;p&gt;プロセスの外部とやりとりするための識別子。POSIXではint型で、0がstdin、1がstdout、2がstderrとなっている。&#xA;ファイルやデバイスに対する&lt;code&gt;open()&lt;/code&gt;や、&#xA;ネットワーク(INETドメインソケット)やホスト内(UNIXドメインソケット)で&#xA;通信するためのソケットを生成する&lt;code&gt;socket()&lt;/code&gt;などのシステムコールで割り当てられる。&lt;/p&gt;</description>
    </item>
    <item>
      <title>logrotateでログをローテーションする</title>
      <link>https://www.sambaiz.net/article/33/</link>
      <pubDate>Wed, 09 Nov 2016 22:15:00 +0900</pubDate>
      <guid>https://www.sambaiz.net/article/33/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/Sirupsen/logrus&#34;&gt;logrus&lt;/a&gt;がローテーションする仕組みを持っていなかったので、&#xA;READMEに書いてあったlogrotateを使う。/etc/logrotate.dの中に設定ファイルを入れて、cronで回して使う。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM ubuntu:14.04&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ADD logrotate /etc/logrotate.d/app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RUN echo &amp;#34;/usr/sbin/logrotate /etc/logrotate.conf&amp;#34; &amp;gt; /etc/cron.daily/logrotate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;設定ファイルはこんな感じ。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
